%!PS-Adobe-3.1 EPSF-3.0%%Title: RU eng PMS1805 A4.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Frans Nies%%CreationDate: 27-04-2004%%BoundingBox: 0 0 256 45%%HiResBoundingBox: 0 0 255.1182 44.4551%%CropBox: 0 0 255.1182 44.4551%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Black%%DocumentCustomColors: (PANTONE 1805 CVC)%%CMYKCustomColor: 0 0.9100 1 0.2300 (PANTONE 1805 CVC)%%RGBCustomColor: %ADO_ContainsXMP: MainFirst%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (RU eng PMS1805 A4.eps) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2004-03-02T09:19:52Z</xap:CreateDate>
  <xap:ModifyDate>2004-04-27T13:43:44Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>48</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAMAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK6ube1tprq5kWG3gRpZpXNFR&#xA;EHJmY9gAK4q+VPzT89al+anmT9C+VdGv9Z0Gws7iU2BRovrEjROkF+iOqgRq0nGNmYM3VVqMVelf&#xA;kN+cUGvada+V/ME1x/iuH1US6uVf074oXkkEUjIn7yBPhkRgCKd96KvZsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeR/njrf5kS3dl5N8j6fDfS63&#xA;puoSaoJfS5i2Uw29YjNPaoCDc/zE9NtjirxNfzD/ADI8leYZxqbQWfmjR9KsdFOlCzguv9x1vHPe&#xA;rKXh1Dj6iRK7NvvVdt8VTHy7L+derXdreeS7a11/TfKOsat9T1FEs4o5Lu+Mpu+SSagrNH/pjGP/&#xA;ACSpxV9Jflt5i1DzH5E0TW9SjSLUL22V7yOLZBKCVfiKtQFl8TirHE/OvT4yZb/Q7+ysY9QbSLq9&#xA;b0HSG7SnJJAkhai16gU8K5gfnwOcSBdfF3x7BkdozhKXBxgb7x8tno5ZQQCQC2ygnc032zPt0VJF&#xA;548zyeWPLd3rUdn9fNoA723qiElCwVmDFX+zy8Mo1Gbw48VW5nZ+kGoyjGTw31q0Bo/nqe/81DQp&#xA;9N+qxPpUerw3pnVw0crIgTgFXieTOKk/s9N8hj1JlLhIr08XNuz9niGHxBKz4hhVdRf7Pmyt3RF5&#xA;OwVagVJoKk0H45kk060C26j7+mFDRdAGJYAJ9ok9Nq7/AEYLTTG/JfnCbzG2sRz6edPn0i9ewljM&#xA;om5NGAS1QqAbn3yjT5zkuxXCac/X6EYOAiXEJx4uVLPLfntNd1vWtJi0y4t5dEf07mWVoijSEkIq&#xA;8XY/EFJ8PHI4tTxyMa+lOq7P8HHCZkCMnLn+pF+T/Na+ZNMkvxYzaesdxJbCO4aMszwng9PTZ+jg&#xA;rv4ZPBn8QXVNet0fgTEeIS2B2vr70w1rVG03SrnUIrSfUGt15C0tFDzSGtKICVBp3yzJPhiTV+5o&#xA;wYfEmIkiN9TyRKXETIpJCMwBKMV5AkA0NCRUA4RINZiV/qR/CeQ+M0TcbmhO3jsMNhFFsuoNCQD4&#xA;E+JphtaWtIo5AfE6LyMYpyoa0296bYLUBjx882MOl6Rf39leWD6zex6dbWc8aidJ5XZV9RQ3wr8B&#xA;NfDtlH5gcIJBHEac7+T5Gc4xlGXhxMiQdqHcyBp4UJDSKpHUEgdi36gTl5kHBESUHrerLpei3mqi&#xA;F7tLKJ53hiKBmWMVfiXKrsAT1yGTJwxMudN2nw+JkjC+HiNb+aQeX/zL0fzB5TvPMGlwSzPYK5u9&#xA;MJjW4QxgtQ8mCfEo5Ka0PTqCMphq4ygZDp0c3U9lZMOcYpkDi5S3pGaJ5wOqpo0i6TewQazbPdx3&#xA;DqjRQqtDGsrqxAaVDyUeH00ljz8XDsfU06jQ+HxjjiTjlVdT317uqY6FrEmq2T3MtjcaayzSQ/V7&#xA;xVSQiNuKvxBbZxuP6UJsxZOIXRHvadRgGOVCQlsDY5fgJiXUUqQKmg36nwyy2inMyrQMQORotT1P&#xA;WgxtaaLoGVSwDNXipO5p1pgtacXQMqlgGavFSdzTrTG1psso6kDp+OwwopvFWO/mB5lby35Q1LV4&#xA;5EjuIIj9WeVHlUStspMcdGenXjUV6cl6hV43+ZHmTzk2n/l/5+ggu9L1G/F1pcsGkpb3lzImoIk1&#xA;oI0uVlhQzNag0HIqGoGcjdVgGjeafzb0nz7DqmqeW9V8wavfWF3Bb6NrFs0skVuZIhJLFLHHCG+1&#xA;R1WELxPGvxVCqX+VPOH5teWfKw1WL/ENp5bNobu2vLS0tjYW/P4lT0buKZGhq1FkWZTSnw1xV7Np&#xA;/mTXfy4tvy88tXkUFr5fXTbf9K3czMHM5RkukoolZVgklikrwA3oXQdVWLSpHJNqfmUi41PQ7PzV&#xA;PfajoressElldmlrerFROTclcbnfYEUrXQSINz5xE9x5HkXvwSBHDtDJLAIxltfFH6oX8vt6o384&#xA;Nc0nVdQ1ObTtLVb2G3sbmz11vrjTzRvwkU2yqoihCB6MXI3qPtdDrMkZSJA7t9/7GrsTTzxxiJy9&#xA;JMgYemgdx6upvy+5b58n0XUp/O1xrEE11qsqWs/la4WKZ0+pAA8omUcEQLvJyp374M8oyMzL6tuH&#xA;3f2J7OjkxjAMZAgOIZBY+rz6ny/Um3moeUtQ80WWoa3FNJosnlVEsFWOcJLdiWQpGvpgAuqseKna&#xA;tMsynGSDLlwbe9xtH48MMo4yPE8ffcbRob79ENY2i2Vx5ct/zNt55NDj0JkskmSaSKO7aZjxkEYL&#xA;CYW3FR3G3fBECJj4308O3P8AHL9DZknxjIdGR4ni71QPDXn/AA8TejxfoIfl5rfma1nWKKPVraea&#xA;WCSaYW0qsLOKdFDsQRM/BadDhh6BjlP+l8uiM58b8xjwkWTjI3AFj6iPkLSvSJrWPy3otpqNtOvl&#xA;q18wXR1+zMUoEasB9VEyKKlAeVV36U60ymBHCAfpEt/s/a5OaMjlnKBHinFHgNj/ADqei/kdPo0d&#xA;v5o07TFeGCHWrie2t5EdCtrKkawmjgGn7s7HfxzY6CUakB/O+zo6Lt+OQnFOe5OMAn+kLv71HSdf&#xA;0vyl+YnnIa8ZLCLVJLW60+YwyvHOiREScDGrVYM3Tx98hDLHFlnx7XyZZtNPU6XD4XqMOIS3G2+3&#xA;NiGs6RY/o7yZNq0Elnc3+t3VzOpEkU8em3dyzN6rJRowQ69xTl88xJwAEOLa5fZbtMGaXHmECJCO&#xA;OI6EccY9O/8AYpSxaFbeUPzG0a1Wtkl9G2iWpDyDkz8A0HIMT8SFeQ8MFxEMkRysV82QOSWfTZJf&#xA;VwnjP60b5j0BhqOg6no1jFeL5v0ZdFmmaMOsFw8aJ9Zao+Flj6+ynJ5Mf0mIB4418WrS6n0ZIZJG&#xA;PgZOPnzFn0/P70F5o8t6Ra+atU0vXbu70yxtYLOLyyILJrpngiQchbOqn05PVFXIoSa75HNijGZE&#xA;jQFVtdtuk1WSWGM8YjORMjkuXDuf53eK5Mg/w95Rv/ztvbO/jeWGayhmETNLGj6lFxerGMorSCKr&#xA;UJpUnvlwx45agxPd9rhfmc8Oz4yjzEiOn0H39L2QPlJtGg/MPVEvbaLWLC8/SN3c6pNbzR3NkjKw&#xA;mhvQ44PCyKVUb9ailaZDBKPim9xub3297brRkOljwkwlHgAiCKl3GPW758klhsNDm/KnyNeajbGX&#xA;9E66LbVy0crGK0luJp50dFH2WQxk0HgMAEDhgT0lR93Ny5ZMg1ueMD9eK48t5AAD7bZJ5+0LTdOl&#xA;8u+avKOmxTW95BJokdsYeIY3kLQ2cnCRQ2zNQlhUrQZZqMcRwzxjY7fPk4HZ2onMZMOeRBiRO7/m&#xA;m5Db8Wz6+0qx8rflhd6Zb8RBYaZNCp4k+pK0bAniKktLK1aeJzNnAY8BHdH8fa6XHmlqNYJnnKYP&#xA;wv8AQHneoeXNQt/J+neePJ6t9bfSks/MWl8WUXMSQ+hM3DY+rCyntvSv+tgyw1jGSH82j9x/Hxd7&#xA;j1UZZ5abP9PicUJfzTdj4H8eS2l/otPNf5YmWNOcnl9ILxilQwnswkEcjUp8TcgoOSBj4mO/5v3h&#xA;hl4zg1Vf6rY+ErJH2MWktdJH5eaSJB6M9v5om9CWHkssNsr/AL9o2TdAoCGvagzF28Id/H9lb/od&#xA;iJz/ADU63BwDnyJ6X9qlr+j+WI7fzzb2vqsdMuLY+Vrf1bhljeSRVungBYhmLLRia9MZjH6wOh9P&#xA;z3Z6bPmJwGVesHxDUe702mvm9dP1rzTdz+ZdSubTS7rTrJ/L11HZtdiRTGrTrCaH0pTP3AB8SB1n&#xA;mqcrkaHCK2v8buNouLFhAwxiZicuMcXDW+194pC+dYPLdz+Y88euajLbWFvHpbSXN5b3MtwkccIZ&#xA;o42jHCMS8h6hcfbJoOuDOInLUjttz58mzQSyx0gOOIMjx7AxA58zfOuldEXe6Zp8/njVf8RajeWG&#xA;orqcT6ElpZmd5bFCPqv1S5Cv6YCfaAoPGp2BnGPiHiJG+23TpRa8eWcdPDwoxlHgPHcqqX8XFHr5&#xA;foQXmDR/K8z/AJjFI29SCeCTQ4IzMsfrs3CZ4o1ort6nw9DTttkckcf7z37fPdt02fMPy3mDx8uX&#xA;Sz7nvnlW8S88taVcpJ6wltISZCSSW4ANWu9eVa1zdaeV44nyeL1kDHNMVXqLDvz41G/0zyQmo2l6&#xA;9oLa9ha5hiUu9zEyuhhX91cAEM6y/ElPgoSv2hc4yr5q0E+dvydW20e9lnvpbG2vtE1Nh6M5vLYJ&#xA;PbymgHpO0kYDfy1OKsL/ACg8xeVtc82aTfG08zLrtxpd2bO61y4S4tPTjlijvY4D60klVmCr8SA7&#xA;b0xVi2gW2i+bNU8o+UPLkHmmy8vyiDV7u31q5RrGTRrMh4kjhjmmBWW4WJBUCnb2VeofnDFaSar5&#xA;beVIHlsmubqH1bAaoyOrQJG6W/qQty9WRFDA/aIHfFXp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVIrzyZol75ktvMN2ss17ZqBaxNK3oRutQJBFXjzox3OUS08TPjPNzIa7JDEcUaEZc9t/d&#xA;fcnuXuG7FVG5tlntJbYO0KyxtGJIjxdAy8aoaGhHbIyjYplCVSB50htD0PTND0q30vTIRBZWylY4&#xA;6ljuSzMzGpJYmpJwY8YhHhHJs1GonmmZzNyKPybS7FWH6j+WGi32o6ldvfahDBrJRtV0+KcLb3HA&#xA;BQGBRpFBUUPBxtt0zElo4kk2fVzFu0xdrZIQjHhgTD6ZEbj9HzDLYoo4YkiiUJFGoREGwCqKAD5Z&#xA;lAUKDrJEk2V+FDsVS/XdEsdb0qfTL3n9Wn48jG3CRSjh1ZHG6sGUEMNx2xV575F86S6JqF35U8y2&#xA;TaPFDdmPRLhvrFxDJHLGJyst46AF/UMo9R+KtxIUuQxxVjGt2dh+Wf5xx+cNTuzb+RtWtNQkhYI0&#xA;iW2p3PozXEQ4BqC6+reog7vyA91U0/Ijy23kzyVaa15xuFttf1qC0tIYJtnhs7aPhaWkcZ+LnxLS&#xA;yKo+0xr0xVR0Mxfmf550/wAymxuYNK0kSAvJLW1lh5Rz2qo1u8LGV34SSxy+rFRVZCQ6uVXteKux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjvnLyF5b83&#xA;WElrqtsplaNoo76NUFzErqyERylSygiRgV6MCQagkYqwX/lTnmuwSC00TzNJb6fasXjileZ1cm7m&#xA;uaSxOZQz/wCkFfV5cqoh/ZpiqY+WPyjv4tOs4fN+tyeYbzTNRXUdPu5F5MClBST1zNX1AvxAU412&#xA;+IBgq9HhgggThDGsSdeKAKKn2GKv/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -44.4551 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 44.4551 li255.119 44.4551 li255.119 0 liclp[1 0 0 1 0 0 ] concat2.89649 22.3936 mo2.88282 24.167 li2.88282 24.7208 li2.89649 25.1241 li2.88282 25.4209 2.94141 25.4825 3.20508 25.4825 cv4.15821 25.4825 4.71387 25.3624 5.05274 25.0938 cv5.4629 24.751 5.71485 24.1983 5.71485 23.6163 cv5.71485 22.7833 5.25782 22.1377 4.54102 21.9454 cv4.24415 21.8682 3.83497 21.8389 3.2793 21.8389 cv2.95606 21.8389 2.89649 21.8682 2.89649 22.0801 cv2.89649 22.3936 licp2.88282 27.3379 mo2.88282 28.1192 2.89649 29.4502 2.91016 29.9444 cv2.92579 30.3038 3.04297 30.4249 3.5293 30.5411 cv3.85059 30.6153 3.90918 30.6631 3.90918 30.8897 cv3.90918 31.1778 li3.90918 31.3575 3.86329 31.419 3.71876 31.419 cv3.61524 31.419 3.38184 31.4034 3.13282 31.3897 cv2.85352 31.375 2.44239 31.3575 1.98731 31.3575 cv1.44532 31.3575 1.07813 31.375 0.791993 31.3897 cv0.542969 31.4034 0.294922 31.419 0.205079 31.419 cv0.0458985 31.419 0 31.3575 0 31.1778 cv0 30.8897 li0 30.6631 0.0605469 30.6153 0.398438 30.5411 cv0.875 30.4249 0.990235 30.3038 1.00391 29.9444 cv1.01954 29.3604 1.03321 28.2666 1.03321 27.3379 cv1.03321 24.9131 li1.03321 23.9854 1.01954 22.9161 1.00391 22.3174 cv0.990235 21.9454 0.875 21.8389 0.398438 21.7178 cv0.0605469 21.6426 0 21.6006 0 21.375 cv0 21.0772 li0 20.8975 0.0458985 20.836 0.177735 20.836 cv0.323243 20.836 0.542969 20.8506 0.791993 20.8663 cv1.04883 20.8809 1.38672 20.8975 1.8545 20.8975 cv2.58887 20.8975 2.58887 20.8975 3.95411 20.8506 cv4.24415 20.836 4.51075 20.836 4.74512 20.836 cv5.77247 20.836 6.4629 21.0626 6.95997 21.586 cv7.41407 22.0518 7.69434 22.7374 7.69434 23.4112 cv7.69434 24.5557 6.99024 25.6202 6.00782 25.8868 cv5.6836 25.9776 5.65528 25.9913 5.65528 26.0684 cv5.65528 26.0831 5.6709 26.1124 5.71485 26.1583 cv5.81446 26.335 5.90332 26.4864 5.94825 26.6221 cv6.25684 27.3252 7.25586 29.0782 7.76856 29.7793 cv8.17188 30.3487 8.35938 30.5118 8.80079 30.6153 cv9.08106 30.6915 9.09473 30.7081 9.09473 30.9542 cv9.09473 31.21 li9.09473 31.3438 9.00489 31.419 8.8584 31.419 cv8.74317 31.419 li8.41895 31.4034 7.89844 31.3897 7.5459 31.3897 cv7.32618 31.3897 7.01954 31.4034 6.66797 31.419 cv6.43262 31.419 li6.15528 31.419 6.15528 31.419 5.80079 30.5118 cv5.6709 30.1817 4.67188 28.044 4.14454 26.9346 cv3.89649 26.3956 3.83497 26.3516 3.48438 26.3516 cv3.38184 26.3516 li3.32227 26.3663 3.2793 26.3663 3.2793 26.3663 cv3.04297 26.3516 li2.95606 26.3516 2.88282 26.4551 2.88282 26.6221 cv2.88282 27.3379 lifalse sop/0 <</Name (PANTONE 1805 CVC)/0 [/DeviceCMYK] add_csa/CSA /0 /TintMethod /Subtractive/TintProc null/MappedCSA null/NComponents 4 /Components [ 0 0.91 1 0.23 ] >>add_csd1 /0 get_csdsepcs1 sepf14.2149 28.4024 mo14.2149 28.1758 14.1993 28.1338 14.0958 28.1338 cv14.0665 28.1338 14.0362 28.1338 13.9922 28.1485 cv13.8311 28.1758 li13.0235 28.3409 12.7618 28.417 12.4532 28.5977 cv12.0284 28.8379 11.836 29.1495 11.836 29.5557 cv11.836 30.0626 12.1729 30.3956 12.6739 30.3956 cv13.0987 30.3956 13.5967 30.167 13.9219 29.8389 cv14.1397 29.5997 14.2149 29.3604 14.2149 28.8233 cv14.2149 28.4024 licp10.6055 24.7667 mo10.6495 24.3624 10.752 24.2413 11.2051 24.1202 cv11.7208 24.001 12.542 23.8975 13.0987 23.8975 cv14.9766 23.8975 15.834 24.5704 15.834 26.0225 cv15.7901 28.7764 li15.7901 30.2745 15.7901 30.2862 15.9659 30.4542 cv16.0977 30.5567 16.2442 30.6016 16.5977 30.6329 cv16.8917 30.6631 16.9786 30.7081 16.9786 30.8897 cv16.9786 31.1172 li16.9786 31.2833 16.9346 31.3126 16.67 31.375 cv14.9317 31.6729 li14.8448 31.6876 14.7276 31.7022 14.6094 31.7022 cv14.4629 31.7022 14.375 31.6407 14.3458 31.4756 cv14.3018 31.375 14.2579 30.9961 14.2735 30.8897 cv14.2735 30.6153 14.2432 30.4961 14.169 30.4961 cv14.1543 30.4961 14.1114 30.5264 14.0665 30.5567 cv13.9795 30.6465 13.377 31.0733 13.1729 31.1944 cv12.7764 31.4327 12.2334 31.5811 11.7208 31.5811 cv10.7959 31.5811 10.0626 30.7676 10.0626 29.7032 cv10.0626 29.1944 10.2247 28.5538 10.4297 28.2374 cv10.5469 28.0733 10.5606 28.0577 11.3379 27.9083 cv13.2745 27.5206 li14.1114 27.3379 14.2149 27.2627 14.2149 26.8145 cv14.2149 26.5616 li14.2149 25.542 13.8311 25.1534 12.8497 25.1534 cv12.2178 25.1534 11.3819 25.3926 10.8243 25.7227 cv10.7061 25.7999 10.6495 25.8135 10.6055 25.8135 cv10.5333 25.8135 10.502 25.754 10.502 25.6348 cv10.502 25.542 li10.6055 24.7667 li1 /0 get_csdsepcs1 sepf19.2813 27.5333 mo19.2813 29.1778 19.9864 30.3331 21.0118 30.3331 cv22.0694 30.3331 22.5831 29.4502 22.5831 27.6553 cv22.5831 26.7276 22.4805 26.1124 22.2598 25.6934 cv21.9981 25.2295 21.5401 24.9434 21.0274 24.9434 cv20 24.9434 19.2813 26.0088 19.2813 27.5333 cvcp23.8799 20.1182 mo23.9532 20.1026 24.0264 20.1026 24.0577 20.1026 cv24.1885 20.1026 24.2618 20.1934 24.2618 20.3731 cv24.1583 24.9434 li24.1583 27.6104 li24.1583 29.5557 24.1719 30.0469 24.2754 30.2432 cv24.4073 30.5264 24.5118 30.586 25.1417 30.6465 cv25.2735 30.6465 25.3467 30.7081 25.3467 30.8126 cv25.3467 31.087 li25.3467 31.2383 25.3018 31.2833 25.0391 31.3292 cv23.1465 31.7022 li23.0293 31.7168 22.9415 31.7334 22.8829 31.7334 cv22.7686 31.7334 22.7286 31.6573 22.7159 31.462 cv22.67 30.8292 li22.6407 30.4698 22.6407 30.4542 22.5401 30.4542 cv22.5254 30.4542 22.4659 30.4844 22.4063 30.5411 cv22.2891 30.6631 21.8926 30.9659 21.628 31.1631 cv21.1895 31.462 20.8086 31.5811 20.3243 31.5811 cv18.709 31.5811 17.5508 30.0928 17.5508 27.9834 cv17.5508 25.5586 18.9307 23.8975 20.9258 23.8975 cv21.3223 23.8975 22.0997 24.0606 22.2891 24.1807 cv22.3311 24.2247 22.377 24.2413 22.3907 24.2413 cv22.4493 24.2413 22.5098 24.1202 22.5098 24.001 cv22.5098 23.9854 22.5098 23.9854 22.4942 23.7334 cv22.4805 22.1377 li22.4805 21.3604 22.4356 21.2989 21.7911 21.1934 cv21.5118 21.1651 21.4542 21.1221 21.4542 20.9102 cv21.4542 20.628 li21.4542 20.4756 21.5118 20.4307 21.7481 20.4024 cv23.8799 20.1182 li1 /0 get_csdsepcs1 sepf28.8233 26.2911 mo28.6602 26.6983 28.5889 27.292 28.5889 28.2374 cv28.5889 29.3916 28.6319 29.794 28.751 30.0626 cv28.9122 30.379 29.3926 30.6329 29.8497 30.6329 cv30.9864 30.6329 31.836 29.4043 31.836 27.7422 cv31.836 26.1729 31.1915 25.1397 30.21 25.1397 cv29.6456 25.1397 29.0879 25.5879 28.8233 26.2911 cvcp26.96 24.751 mo26.96 23.4717 26.9473 21.9756 26.918 21.7032 cv26.8877 21.3604 26.7266 21.2256 26.3145 21.1788 cv25.9493 21.1514 25.8604 21.0928 25.8604 20.9102 cv25.8604 20.6583 li25.8604 20.5215 25.92 20.4756 26.1094 20.4483 cv28.25 20.1338 li28.5303 20.0889 li28.6319 20.0889 28.7061 20.1934 28.7061 20.3409 cv28.7061 20.3877 28.7061 20.4629 28.6915 20.5508 cv28.6758 20.9268 28.6602 21.3604 28.6475 22.5713 cv28.6475 23.4991 28.6319 24.1983 28.6192 24.629 cv28.6055 24.8858 li28.6055 24.9883 li28.6055 25.0489 28.6319 25.0792 28.6758 25.0792 cv28.751 25.0792 28.9258 24.9131 29.2637 24.5557 cv29.7325 24.0469 30.0958 23.8975 30.8116 23.8975 cv32.4981 23.8975 33.5665 25.2295 33.5665 27.3682 cv33.5665 29.8838 31.9834 31.5811 29.6456 31.5811 cv28.8536 31.5811 27.7969 31.3126 27.1651 30.9405 cv26.9756 30.8292 26.9024 30.7081 26.9024 30.4542 cv26.9024 30.2862 li26.9317 29.002 26.9473 27.4268 26.96 25.5733 cv26.96 24.751 li1 /0 get_csdsepcs1 sepf36.4952 27.6416 mo36.4952 29.254 37.3458 30.4385 38.5137 30.4385 cv39.5547 30.4385 40.3614 29.3311 40.3614 27.8926 cv40.3614 26.2032 39.5391 25.004 38.3799 25.004 cv37.2891 25.004 36.4952 26.1124 36.4952 27.6416 cvcp41.5772 25.4522 mo41.917 26.0528 42.1055 26.7852 42.1055 27.5479 cv42.1055 28.5821 41.7696 29.5997 41.1817 30.3194 cv40.5069 31.1475 39.5098 31.5811 38.2491 31.5811 cv36.1309 31.5811 34.7647 30.167 34.7647 27.9376 cv34.7647 26.7706 35.1465 25.7227 35.836 24.9883 cv36.5254 24.2413 37.3731 23.8975 38.5137 23.8975 cv39.9063 23.8975 41.0049 24.4502 41.5772 25.4522 cv1 /0 get_csdsepcs1 sepf50.2403 27.5333 mo50.2549 28.9415 50.2686 29.7637 50.2989 30.0206 cv50.3565 30.4249 50.503 30.5264 51.0586 30.6016 cv51.295 30.6329 51.3379 30.6778 51.3379 30.8584 cv51.3379 31.0577 li51.3379 31.2383 51.295 31.2833 51.0889 31.3126 cv49.0958 31.5811 li48.9922 31.5967 48.9053 31.6133 48.8907 31.6133 cv48.7139 31.6133 48.7139 31.6133 48.6094 30.586 cv48.5967 30.3633 48.5528 30.2588 48.4659 30.2588 cv48.4219 30.2588 48.3477 30.3038 48.1563 30.4961 cv47.1592 31.419 46.8653 31.5811 46.0733 31.5811 cv45.5166 31.5811 44.9444 31.4327 44.5567 31.1778 cv44.087 30.8897 43.8819 30.379 43.8819 29.5557 cv43.8819 29.4366 43.8819 29.1778 43.8956 28.9112 cv43.8956 28.1338 li43.8956 26.8145 li43.8956 25.0635 43.8516 24.9288 43.2637 24.8721 cv42.9268 24.8428 42.8555 24.7959 42.8555 24.629 cv42.8555 24.377 li42.8555 24.1983 42.8965 24.167 43.1045 24.1358 cv45.2657 23.9288 li45.4151 23.9131 45.5166 23.8975 45.5293 23.8975 cv45.6338 23.8975 45.6778 23.9561 45.6778 24.0752 cv45.6778 24.1504 45.6778 24.2706 45.6631 24.4083 cv45.6045 25.1094 45.5752 26.0684 45.5752 26.7852 cv45.5752 27.9542 li45.5752 29.3165 45.6045 29.5411 45.8379 29.8702 cv46.0157 30.1241 46.336 30.2588 46.7481 30.2588 cv47.4376 30.2588 48.0547 29.9288 48.3184 29.419 cv48.5088 29.0782 48.5528 28.7002 48.5528 27.5333 cv48.5528 26.7999 li48.5528 26.2325 48.5225 25.4366 48.4932 25.2891 cv48.4356 25.0186 48.2891 24.8975 47.92 24.8555 cv47.584 24.8262 47.5108 24.7803 47.5108 24.629 cv47.5108 24.3624 li47.5108 24.1983 47.5547 24.1504 47.7598 24.1358 cv49.8721 23.9131 li49.959 23.8975 50.0479 23.8975 50.1094 23.8975 cv50.2549 23.8975 50.2989 23.9424 50.2989 24.0752 cv50.2833 24.4639 li50.2686 24.8555 50.2686 24.8555 50.2549 25.5137 cv50.2403 25.7833 50.2403 26.1124 50.2403 26.4864 cv50.2403 27.5333 li1 /0 get_csdsepcs1 sepf53.8877 27.5333 mo53.8877 29.1778 54.5918 30.3331 55.6182 30.3331 cv56.6749 30.3331 57.1876 29.4502 57.1876 27.6553 cv57.1876 26.7276 57.084 26.1124 56.8653 25.6934 cv56.6016 25.2295 56.1475 24.9434 55.6329 24.9434 cv54.6055 24.9434 53.8877 26.0088 53.8877 27.5333 cvcp58.4942 20.1182 mo58.5655 20.1026 58.6407 20.1026 58.67 20.1026 cv58.8018 20.1026 58.875 20.1934 58.875 20.3731 cv58.7715 24.9434 li58.7715 27.6104 li58.7715 29.5557 58.7881 30.0469 58.8897 30.2432 cv59.0215 30.5264 59.1241 30.586 59.7452 30.6465 cv59.879 30.6465 59.9522 30.7081 59.9522 30.8126 cv59.9522 31.087 li59.9522 31.2383 59.9082 31.2833 59.6456 31.3292 cv57.7608 31.7022 li57.6416 31.7168 57.5528 31.7334 57.4971 31.7334 cv57.377 31.7334 57.335 31.6573 57.3204 31.462 cv57.2774 30.8292 li57.2461 30.4698 57.2461 30.4542 57.1426 30.4542 cv57.129 30.4542 57.0704 30.4844 57.0118 30.5411 cv56.8965 30.6631 56.4981 30.9659 56.2344 31.1631 cv55.794 31.462 55.4122 31.5811 54.9278 31.5811 cv53.3155 31.5811 52.1563 30.0928 52.1563 27.9834 cv52.1563 25.5586 53.5342 23.8975 55.5294 23.8975 cv55.9278 23.8975 56.7032 24.0606 56.8965 24.1807 cv56.9385 24.2247 56.9825 24.2413 56.9961 24.2413 cv57.0547 24.2413 57.1153 24.1202 57.1153 24.001 cv57.1153 23.9854 57.1153 23.9854 57.0997 23.7334 cv57.084 22.1377 li57.084 21.3604 57.0401 21.2989 56.3965 21.1934 cv56.1163 21.1651 56.0586 21.1221 56.0586 20.9102 cv56.0586 20.628 li56.0586 20.4756 56.1163 20.4307 56.3516 20.4024 cv58.4942 20.1182 li1 /0 get_csdsepcs1 sepf65.5274 24.9131 mo65.5274 23.9854 65.5137 22.9161 65.4981 22.3174 cv65.4834 21.9454 65.3653 21.8389 64.8829 21.7178 cv64.543 21.6426 64.4844 21.6006 64.4844 21.375 cv64.4844 21.0772 li64.4844 20.8975 64.5294 20.836 64.6758 20.836 cv64.7637 20.836 65.0274 20.8506 65.2794 20.8663 cv65.5567 20.8809 65.9678 20.8975 66.4219 20.8975 cv66.9561 20.8975 67.3243 20.8809 67.6172 20.8663 cv67.8663 20.8506 68.1163 20.836 68.2042 20.836 cv68.3497 20.836 68.3926 20.8975 68.3926 21.0772 cv68.3926 21.375 li68.3926 21.6006 68.335 21.6426 68.0118 21.7178 cv67.5137 21.8389 67.4112 21.9454 67.3965 22.3174 cv67.3819 22.8126 67.3672 24.1358 67.3672 24.9131 cv67.3672 26.5 li67.3672 28.2208 67.4415 28.8956 67.7051 29.3741 cv68.1006 30.0928 68.9239 30.5118 69.9502 30.5118 cv71.1797 30.5118 72.0469 30.0049 72.3692 29.0909 cv72.5606 28.5235 72.5733 28.2969 72.5733 26.4278 cv72.5733 24.9131 li72.5733 24.0293 72.5606 22.8868 72.545 22.3174 cv72.5303 21.9454 72.4278 21.8389 71.9307 21.7178 cv71.5918 21.6426 71.5332 21.6006 71.5332 21.375 cv71.5332 21.0772 li71.5332 20.8975 71.5782 20.836 71.7237 20.836 cv71.8262 20.836 72.0752 20.8506 72.3272 20.8663 cv72.6045 20.8809 72.8975 20.8975 73.1612 20.8975 cv73.4854 20.8975 73.7491 20.8809 74.0332 20.8663 cv74.2823 20.8506 74.5332 20.836 74.6348 20.836 cv74.7813 20.836 74.8243 20.8975 74.8243 21.0772 cv74.8243 21.375 li74.8243 21.6006 74.7666 21.6426 74.4278 21.7178 cv73.9327 21.8389 73.836 21.9454 73.8223 22.3174 cv73.8067 22.8272 73.793 24.0918 73.793 24.9131 cv73.793 26.3663 li73.793 28.1338 73.7618 28.5821 73.6465 29.0909 cv73.2637 30.7374 71.8721 31.5811 69.5381 31.5811 cv67.7344 31.5811 66.4649 30.9961 65.9239 29.9288 cv65.6133 29.3008 65.5274 28.5977 65.5274 26.4278 cv65.5274 24.9131 li1 /0 get_csdsepcs1 sepf75.3126 24.4795 mo75.3126 24.2559 75.3409 24.21 75.5313 24.1807 cv77.6143 23.9288 li77.7461 23.9131 77.8487 23.8975 77.8653 23.8975 cv77.9815 23.8975 78.0528 24.001 78.0704 24.1807 cv78.084 24.3018 78.1133 25.004 78.1133 25.0792 cv78.129 25.2598 78.1846 25.3926 78.2598 25.3926 cv78.3047 25.3926 78.3643 25.3487 78.4219 25.2891 cv78.5684 25.1241 li78.8477 24.8428 li79.5508 24.0752 79.918 23.8975 80.7686 23.8975 cv81.8174 23.8975 82.5938 24.3018 82.8721 25.004 cv83.0206 25.3624 83.0206 25.3624 83.0206 27.5479 cv83.0206 28.044 li83.0206 28.9415 83.0332 29.794 83.0499 30.0928 cv83.0792 30.4092 83.1651 30.4961 83.6075 30.6329 cv84.046 30.7676 84.0606 30.7833 84.0606 30.9805 cv84.0606 31.2247 li84.0606 31.375 84.0166 31.419 83.9004 31.419 cv83.795 31.419 li83.4151 31.3897 82.7256 31.375 82.1827 31.375 cv81.627 31.375 80.9454 31.3897 80.5616 31.419 cv80.46 31.419 li80.3428 31.419 80.2979 31.3575 80.2979 31.2247 cv80.2979 30.9805 li80.2979 30.7833 80.3145 30.7676 80.754 30.6329 cv81.1934 30.4961 81.2774 30.4092 81.3047 30.0928 cv81.3184 29.75 81.334 28.9258 81.334 28.044 cv81.334 27.5479 li81.334 26.6065 81.293 26.2032 81.1797 25.8868 cv81.0176 25.4825 80.6211 25.2598 80.0782 25.2598 cv79.4786 25.2598 78.9219 25.542 78.5821 26.0225 cv78.336 26.3663 78.2745 26.6983 78.2745 27.6553 cv78.2745 28.044 li78.2745 28.9727 78.2901 29.75 78.3047 30.0928 cv78.336 30.4092 78.4219 30.4961 78.8477 30.6329 cv79.2872 30.7833 79.3018 30.7833 79.3018 30.9805 cv79.3018 31.2247 li79.3018 31.3575 79.2579 31.419 79.1397 31.419 cv79.0372 31.419 li78.6544 31.3897 77.9961 31.375 77.4385 31.375 cv76.8809 31.375 76.1612 31.3897 75.8096 31.419 cv75.7071 31.419 li75.5909 31.419 75.5469 31.3575 75.5469 31.2247 cv75.5469 30.9805 li75.5469 30.7833 75.5606 30.7676 76.002 30.6329 cv76.4415 30.4961 76.5284 30.4092 76.5596 30.0928 cv76.5733 29.7793 76.5879 28.9727 76.5879 28.044 cv76.5879 27.5206 li76.5879 26.7852 76.5 25.6202 76.4112 25.3487 cv76.3379 25.0938 76.1905 25.004 75.7364 24.9737 cv75.3838 24.9434 75.3126 24.9131 75.3126 24.7803 cv75.3126 24.4795 li1 /0 get_csdsepcs1 sepf88.1241 21.7178 mo88.1241 22.3331 87.6114 22.8272 86.9639 22.8272 cv86.334 22.8272 85.8223 22.3467 85.8223 21.7325 cv85.8223 21.0928 86.3047 20.6583 87.0235 20.6583 cv87.67 20.6583 88.1241 21.0928 88.1241 21.7178 cvcp86.2911 26.8145 mo86.2911 25.0489 86.2618 24.9434 85.6582 24.8721 cv85.3213 24.8428 85.2491 24.7959 85.2491 24.6456 cv85.2491 24.377 li85.2491 24.21 85.295 24.167 85.4981 24.1504 cv87.5958 23.9288 li87.7149 23.9131 li87.7559 23.8975 87.8008 23.8975 87.8311 23.8975 cv87.962 23.8975 88.0196 24.001 88.0196 24.1807 cv88.0196 24.21 88.0196 24.21 88.0069 24.7667 cv87.9913 25.0186 87.9776 26.4717 87.9776 27.292 cv87.9776 28.044 li87.9776 28.9415 87.9913 29.7334 88.0069 30.0928 cv88.0362 30.4092 88.1241 30.4961 88.544 30.6329 cv88.9795 30.7676 88.9952 30.7833 88.9952 30.9805 cv88.9952 31.2247 li88.9952 31.3575 88.9522 31.419 88.835 31.419 cv88.7334 31.419 li88.3584 31.3897 87.7012 31.375 87.1426 31.375 cv86.5831 31.375 85.8809 31.3897 85.5127 31.419 cv85.4092 31.419 li85.2774 31.419 85.2491 31.375 85.2491 31.2247 cv85.2491 30.9805 li85.2491 30.7833 85.2491 30.7833 85.7032 30.6329 cv86.1573 30.4844 86.2315 30.4092 86.2618 30.0928 cv86.2754 29.7032 86.2911 29.0166 86.2911 28.044 cv86.2911 26.8145 li1 /0 get_csdsepcs1 sepf97.004 24.3624 mo97.004 24.5704 97.004 24.5704 96.7227 24.6456 cv96.5323 24.7354 96.4434 24.8721 96.1954 25.5137 cv96.0342 25.9317 96.0342 25.9317 94.7803 29.0469 cv94.3126 30.212 94.2081 30.4844 94.1065 30.7676 cv93.9727 31.1172 93.9727 31.1338 93.9151 31.2247 cv93.8702 31.2979 93.8106 31.3292 93.6065 31.3575 cv93.4747 31.375 93.4327 31.375 92.918 31.462 cv92.8594 31.4756 92.8008 31.4756 92.7559 31.4756 cv92.6084 31.4756 92.5928 31.462 92.4336 30.9805 cv92.2432 30.4698 92.1104 30.1377 91.4356 28.2666 cv90.7315 26.335 90.4385 25.5733 90.1885 24.9883 cv90.087 24.7354 90.0567 24.7208 89.7188 24.5997 cv89.6319 24.5704 89.5879 24.4795 89.5879 24.3624 cv89.5879 24.0918 li89.5879 23.9424 89.6465 23.8975 89.836 23.8975 cv89.8819 23.8975 89.8819 23.8975 90.5567 23.9288 cv90.7168 23.9424 90.9825 23.9424 91.3321 23.9424 cv92.0235 23.9424 92.4493 23.9288 92.8887 23.8975 cv93.0626 23.8975 li93.212 23.8975 93.2696 23.9424 93.2696 24.0918 cv93.2696 24.3624 li93.2696 24.5557 93.2559 24.5557 92.8594 24.6592 cv92.4336 24.7667 92.2715 24.8721 92.2715 25.0792 cv92.2715 25.1534 92.2872 25.2598 92.3321 25.376 cv92.4044 25.6045 92.4776 25.8262 92.5362 26.0528 cv92.9024 27.2344 li93.3575 28.7315 93.6651 29.6749 93.6944 29.6749 cv93.709 29.6749 93.7227 29.5997 93.752 29.5108 cv93.8106 29.3008 li93.9444 28.8956 li94.0176 28.6543 94.1202 28.3711 94.2081 28.044 cv94.6348 26.8741 li95.0879 25.5733 95.2051 25.17 95.2051 25.004 cv95.2051 24.8262 94.9708 24.6592 94.6055 24.5831 cv94.4288 24.5381 94.3858 24.4952 94.3858 24.3624 cv94.3858 24.0918 li94.3858 23.9561 94.4434 23.8975 94.5586 23.8975 cv94.6055 23.8975 94.6485 23.8975 94.7227 23.9131 cv94.8985 23.9288 95.5 23.9424 95.794 23.9424 cv96.0606 23.9424 96.4004 23.9288 96.709 23.8975 cv96.8399 23.8975 li96.9581 23.8975 97.004 23.9424 97.004 24.0918 cv97.004 24.3624 li1 /0 get_csdsepcs1 sepf99.9512 26.4551 mo100.625 26.3956 li100.89 26.3799 101.608 26.3194 101.873 26.2774 cv102.092 26.2608 102.18 26.1729 102.18 25.9776 cv102.18 25.7081 102.079 25.376 101.901 25.1397 cv101.725 24.8975 101.431 24.7667 101.037 24.7667 cv100.567 24.7667 100.097 24.9883 99.834 25.335 cv99.5977 25.6202 99.4239 26.0528 99.4239 26.3057 cv99.4239 26.4278 99.4805 26.4717 99.627 26.4717 cv99.9512 26.4551 licp99.7012 27.1905 mo99.1573 27.1905 99.0987 27.2344 99.0987 27.7422 cv99.0987 29.1944 100.024 30.2588 101.286 30.2588 cv102.018 30.2588 103.074 29.8975 103.551 29.4961 cv103.581 29.4649 103.595 29.4502 103.61 29.4502 cv103.654 29.4502 103.698 29.5108 103.698 29.5831 cv103.698 29.8086 103.566 30.7979 103.537 30.9043 cv103.493 30.9805 103.332 31.0733 102.927 31.2383 cv102.397 31.4463 101.697 31.5811 101.081 31.5811 cv98.9376 31.5811 97.4561 30.1084 97.4561 27.9542 cv97.4561 25.6348 99.0264 23.8975 101.155 23.8975 cv102.885 23.8975 103.829 24.8858 103.829 26.668 cv103.829 27.0704 103.668 27.1905 103.115 27.1905 cv99.7012 27.1905 li1 /0 get_csdsepcs1 sepf105.045 24.5557 mo105.045 24.3311 105.089 24.2872 105.309 24.2559 cv107.468 23.9288 li107.585 23.9131 li107.644 23.8975 107.685 23.8975 107.703 23.8975 cv107.803 23.8975 107.878 24.001 107.878 24.1504 cv107.864 24.8116 li107.864 25.4522 107.878 25.5586 107.996 25.5586 cv108.04 25.5586 108.171 25.4522 108.274 25.3204 cv108.494 25.0635 108.494 25.0635 108.845 24.6592 cv109.255 24.1983 109.402 24.0918 109.827 23.9854 cv110.046 23.9288 110.269 23.8975 110.527 23.8975 cv110.903 23.8975 111.066 24.001 111.051 24.2247 cv111.051 24.2559 li110.993 25.3038 li110.977 25.5733 110.919 25.6778 110.788 25.6778 cv110.758 25.6778 110.714 25.6631 110.656 25.6495 cv110.483 25.5879 110.149 25.5586 109.812 25.5586 cv109.27 25.5586 108.845 25.7081 108.565 25.9776 cv108.23 26.3194 108.171 26.6221 108.171 28.1036 cv108.171 28.7764 li108.201 29.7334 li108.215 30.2266 108.245 30.3487 108.45 30.4542 cv108.565 30.5118 108.582 30.5118 109.214 30.6631 cv109.666 30.7676 109.68 30.7676 109.68 30.9659 cv109.68 31.1778 li109.68 31.3292 109.607 31.419 109.489 31.419 cv109.415 31.419 li108.992 31.4034 107.817 31.375 107.233 31.375 cv106.762 31.375 106.074 31.3897 105.708 31.419 cv105.605 31.419 li105.488 31.419 105.441 31.3575 105.441 31.2247 cv105.441 30.9805 li105.441 30.7833 105.441 30.7833 105.898 30.6329 cv106.352 30.4844 106.426 30.4092 106.456 30.0928 cv106.471 29.7198 106.484 29.0333 106.484 28.044 cv106.484 27.5479 li106.484 26.7999 106.384 25.9483 106.232 25.542 cv106.102 25.17 105.883 25.0342 105.415 25.0186 cv105.089 25.004 105.045 24.9737 105.045 24.8116 cv105.045 24.5557 li1 /0 get_csdsepcs1 sepf117.022 25.4366 mo117.006 25.6778 116.977 25.7081 116.817 25.7081 cv116.58 25.7081 li116.433 25.7081 116.433 25.7081 116.29 25.3204 cv116.126 24.9288 115.671 24.7051 115.027 24.7051 cv114.323 24.7051 113.852 25.0938 113.852 25.6778 cv113.852 26.0831 114.057 26.3516 114.629 26.6827 cv114.968 26.8741 114.968 26.8741 115.95 27.3252 cv116.903 27.7588 117.461 28.4922 117.461 29.3165 cv117.461 30.6778 116.243 31.5811 114.397 31.5811 cv113.691 31.5811 112.956 31.4327 112.473 31.1778 cv112.267 31.087 112.223 30.9961 112.238 30.7676 cv112.329 29.75 li112.343 29.5694 112.417 29.4961 112.577 29.4961 cv112.827 29.4961 li112.988 29.4961 113.002 29.4961 113.09 29.8838 cv113.222 30.3956 113.868 30.7833 114.555 30.7833 cv115.305 30.7833 115.835 30.379 115.835 29.794 cv115.835 29.3458 115.598 29.1045 114.792 28.7315 cv112.885 27.8487 112.417 27.3379 112.417 26.2325 cv112.417 24.7667 113.502 23.8975 115.319 23.8975 cv115.876 23.8975 116.48 24.001 116.832 24.1504 cv117.066 24.2413 117.125 24.3165 117.125 24.4952 cv117.125 24.5381 li117.022 25.4366 li1 /0 get_csdsepcs1 sepf121.639 21.7178 mo121.639 22.3331 121.124 22.8272 120.479 22.8272 cv119.849 22.8272 119.336 22.3467 119.336 21.7325 cv119.336 21.0928 119.82 20.6583 120.538 20.6583 cv121.184 20.6583 121.639 21.0928 121.639 21.7178 cvcp119.805 26.8145 mo119.805 25.0489 119.776 24.9434 119.175 24.8721 cv118.836 24.8428 118.764 24.7959 118.764 24.6456 cv118.764 24.377 li118.764 24.21 118.806 24.167 119.011 24.1504 cv121.11 23.9288 li121.229 23.9131 li121.273 23.8975 121.317 23.8975 121.346 23.8975 cv121.478 23.8975 121.537 24.001 121.537 24.1807 cv121.537 24.21 121.537 24.21 121.522 24.7667 cv121.506 25.0186 121.493 26.4717 121.493 27.292 cv121.493 28.044 li121.493 28.9415 121.506 29.7334 121.522 30.0928 cv121.551 30.4092 121.639 30.4961 122.065 30.6329 cv122.504 30.7676 122.516 30.7833 122.516 30.9805 cv122.516 31.2247 li122.516 31.3575 122.474 31.419 122.36 31.419 cv122.254 31.419 li121.874 31.3897 121.214 31.375 120.655 31.375 cv120.098 31.375 119.395 31.3897 119.029 31.419 cv118.923 31.419 li118.792 31.419 118.764 31.375 118.764 31.2247 cv118.764 30.9805 li118.764 30.7833 118.764 30.7833 119.217 30.6329 cv119.673 30.4844 119.747 30.4092 119.776 30.0928 cv119.791 29.7032 119.805 29.0166 119.805 28.044 cv119.805 26.8145 li1 /0 get_csdsepcs1 sepf124.645 26.0528 mo124.63 25.1827 124.63 25.17 124.279 25.17 cv124.22 25.17 124.22 25.17 124.015 25.1827 cv123.633 25.1827 li123.516 25.1993 123.429 25.1993 123.415 25.1993 cv123.325 25.1993 123.268 25.1534 123.268 25.1094 cv123.268 25.0792 123.282 25.004 123.325 24.9131 cv123.5 24.42 li123.62 24.0918 123.649 24.0606 123.793 24.0606 cv123.839 24.0606 123.971 24.0752 124.147 24.0918 cv124.206 24.1045 124.266 24.1045 124.323 24.1045 cv124.586 24.1045 124.69 24.0147 124.69 23.792 cv124.69 23.7178 124.674 23.2461 124.645 22.8126 cv124.63 22.5713 124.63 22.3467 124.63 22.1827 cv124.63 21.8545 124.718 21.7325 125.038 21.6143 cv125.959 21.2852 li126.252 21.1788 126.252 21.1788 126.294 21.1788 cv126.383 21.1788 126.441 21.2852 126.441 21.4043 cv126.441 21.4952 126.428 21.6592 126.397 21.8389 cv126.354 22.212 126.252 23.4717 126.252 23.7471 cv126.252 24.0147 126.324 24.0606 126.75 24.0606 cv127.953 24.0606 li128.304 24.0606 128.497 24.0469 128.715 24.0147 cv128.802 24.0147 li128.878 24.0147 128.92 24.0606 128.92 24.1358 cv128.92 24.2247 128.878 24.377 128.747 24.8262 cv128.656 25.1397 128.583 25.1993 128.348 25.1993 cv128.29 25.1993 128.29 25.1993 127.909 25.17 cv127.806 25.17 127.63 25.1534 127.352 25.1397 cv127.027 25.1241 126.926 25.1241 126.795 25.1241 cv126.324 25.1241 126.324 25.1241 126.324 25.7686 cv126.324 28.0733 li126.324 29.2706 126.354 29.6583 126.5 29.9444 cv126.634 30.2266 126.926 30.379 127.381 30.379 cv127.704 30.379 128.058 30.3194 128.569 30.1817 cv128.688 30.1524 128.758 30.1377 128.788 30.1377 cv128.864 30.1377 128.891 30.1817 128.891 30.2588 cv128.891 30.4698 128.773 31.1778 128.732 31.2383 cv128.597 31.3897 127.586 31.5811 126.898 31.5811 cv125.228 31.5811 124.601 31.087 124.601 29.794 cv124.618 28.9112 li124.63 28.5538 124.645 28.2666 124.645 28.0733 cv124.645 26.0528 li1 /0 get_csdsepcs1 sepf137.372 24.3311 mo137.372 24.4795 137.34 24.5088 137.21 24.5704 cv136.901 24.7208 136.871 24.7667 136.534 25.6495 cv136.402 26.0381 136.255 26.3956 136.108 26.7559 cv135.315 28.7452 li135.007 29.5264 134.715 30.3038 134.407 31.1026 cv133.689 33.0206 133.616 33.1993 133.22 33.6319 cv132.88 34.0225 132.258 34.292 131.672 34.292 cv130.499 34.292 130.352 34.2032 130.352 33.4542 cv130.352 33.3028 130.352 33.1856 130.367 33.1094 cv130.381 32.8379 li130.381 32.6749 130.425 32.6163 130.526 32.6163 cv130.572 32.6163 130.601 32.6163 130.642 32.6309 cv131.055 32.751 131.392 32.795 131.788 32.795 cv132.576 32.795 133.115 32.3741 133.334 31.5674 cv133.366 31.462 133.395 31.375 133.437 31.3126 cv133.437 31.2979 133.454 31.2833 133.454 31.2833 cv133.454 31.253 133.409 31.2247 133.366 31.1944 cv133.191 31.1026 133.174 31.0733 132.781 30.0928 cv132.288 28.8956 131.788 27.712 131.29 26.5303 cv131.114 26.1124 130.894 25.5879 130.674 25.0792 cv130.51 24.7208 130.455 24.6749 130.115 24.5704 cv130.015 24.5381 129.985 24.4952 129.985 24.3311 cv129.985 24.0752 li129.985 23.9561 130.043 23.8975 130.162 23.8975 cv130.264 23.8975 li130.396 23.9131 131.714 23.9424 131.996 23.9424 cv132.385 23.9424 133.085 23.9288 133.334 23.8975 cv133.467 23.8975 li133.6 23.8975 133.672 23.9698 133.672 24.0752 cv133.672 24.3311 li133.672 24.5381 133.672 24.5381 133.129 24.6749 cv132.822 24.751 132.661 24.9131 132.661 25.1094 cv132.661 25.1993 132.692 25.3204 132.751 25.4522 cv132.836 25.6934 132.924 25.9317 132.998 26.1885 cv133.467 27.4141 li133.704 28.0137 li133.803 28.2823 133.983 28.7315 134.098 29.0469 cv134.186 29.3008 134.215 29.3604 134.246 29.3604 cv134.334 29.3604 135.596 25.3204 135.596 25.0342 cv135.596 24.8262 135.447 24.6895 135.17 24.629 cv134.817 24.5557 134.788 24.5381 134.788 24.3311 cv134.788 24.0752 li134.788 23.9424 134.833 23.8975 134.949 23.8975 cv135.083 23.8975 li135.388 23.9288 135.77 23.9424 136.167 23.9424 cv136.49 23.9424 136.786 23.9288 137.034 23.9131 cv137.09 23.8975 137.152 23.8975 137.178 23.8975 cv137.31 23.8975 137.372 23.9561 137.372 24.0752 cv137.372 24.3311 li1 /0 get_csdsepcs1 sepf141.998 30.9161 mo141.998 30.6915 142.085 30.6329 142.495 30.5264 cv142.906 30.4385 142.964 30.3331 142.964 29.6446 cv142.994 28.5684 li143.008 28.1036 143.008 27.3995 143.008 26.4717 cv143.008 24.8975 li143.008 23.8233 142.982 22.586 142.964 22.3467 cv142.92 21.96 142.833 21.8682 142.437 21.7784 cv142.085 21.6866 141.998 21.6143 141.998 21.4043 cv141.998 21.0928 li141.998 20.9102 142.056 20.836 142.176 20.836 cv142.291 20.836 142.437 20.8506 142.626 20.8663 cv142.801 20.8809 143.026 20.8975 143.29 20.8975 cv143.688 20.8975 144.183 20.8809 144.635 20.836 cv144.725 20.836 li144.828 20.836 144.828 20.836 145.225 21.3604 cv146.269 22.6905 147.798 24.5088 150.746 27.9376 cv150.864 28.0577 150.968 28.1905 151.042 28.3126 cv151.085 28.3711 151.131 28.417 151.147 28.417 cv151.174 28.417 151.19 28.3272 151.19 28.2061 cv151.19 28.1036 151.19 28 151.174 27.879 cv151.147 26.4551 li151.116 24.8858 li151.085 23.4258 li151.071 22.2735 151.071 22.168 150.98 22.0352 cv150.924 21.8995 150.672 21.7618 150.391 21.7032 cv150.131 21.628 150.086 21.586 150.086 21.375 cv150.086 21.0626 li150.086 20.9102 150.163 20.836 150.324 20.836 cv150.379 20.836 150.599 20.8506 150.864 20.8809 cv151.671 20.8975 li152.158 20.8975 152.461 20.8809 152.67 20.8663 cv152.876 20.8506 153.066 20.836 153.139 20.836 cv153.256 20.836 153.327 20.9102 153.327 21.0626 cv153.327 21.2989 li153.327 21.5713 153.271 21.628 153.007 21.6719 cv152.565 21.7481 152.36 21.9756 152.36 22.3467 cv152.374 23.3819 li152.374 23.4112 152.374 23.5127 152.36 23.6709 cv152.342 24.0606 152.317 26.4551 152.317 28.3272 cv152.317 28.67 li152.329 29.7032 li152.329 30.9405 li152.342 31.1631 li152.342 31.375 li152.342 31.4903 152.298 31.5518 152.158 31.6573 cv152.096 31.6876 152.055 31.7334 151.993 31.792 cv151.833 31.9405 151.801 31.9561 151.774 31.9561 cv151.686 31.9561 151.654 31.9258 151.305 31.4756 cv151.1 31.2247 149.032 28.7764 147.989 27.5479 cv146.69 26.0088 145.579 24.6749 144.651 23.5752 cv144.3 23.1417 li144.198 23.0235 li144.171 23.0362 144.171 23.0655 144.171 23.2608 cv144.183 23.6573 li144.227 24.8116 144.242 26.6827 144.259 29.8702 cv144.268 30.3331 144.359 30.4249 144.974 30.5411 cv145.208 30.586 145.282 30.6778 145.282 30.9043 cv145.282 31.1631 li145.282 31.3575 145.238 31.419 145.091 31.419 cv145.003 31.419 144.842 31.4034 144.664 31.3897 cv144.42 31.375 144.155 31.3575 143.802 31.3575 cv143.392 31.3575 142.571 31.3897 142.334 31.4034 cv142.276 31.419 142.217 31.419 142.19 31.419 cv142.056 31.419 141.998 31.3575 141.998 31.2247 cv141.998 30.9161 li1 /0 get_csdsepcs1 sepf157.244 21.7178 mo157.244 22.3331 156.734 22.8272 156.084 22.8272 cv155.457 22.8272 154.944 22.3467 154.944 21.7325 cv154.944 21.0928 155.424 20.6583 156.143 20.6583 cv156.792 20.6583 157.244 21.0928 157.244 21.7178 cvcp155.413 26.8145 mo155.413 25.0489 155.381 24.9434 154.783 24.8721 cv154.443 24.8428 154.372 24.7959 154.372 24.6456 cv154.372 24.377 li154.372 24.21 154.414 24.167 154.619 24.1504 cv156.719 23.9288 li156.836 23.9131 li156.88 23.8975 156.921 23.8975 156.954 23.8975 cv157.08 23.8975 157.138 24.001 157.138 24.1807 cv157.138 24.21 157.138 24.21 157.124 24.7667 cv157.112 25.0186 157.094 26.4717 157.094 27.292 cv157.094 28.044 li157.094 28.9415 157.112 29.7334 157.124 30.0928 cv157.156 30.4092 157.244 30.4961 157.674 30.6329 cv158.108 30.7676 158.124 30.7833 158.124 30.9805 cv158.124 31.2247 li158.124 31.3575 158.081 31.419 157.959 31.419 cv157.862 31.419 li157.481 31.3897 156.822 31.375 156.26 31.375 cv155.706 31.375 155.005 31.3897 154.635 31.419 cv154.534 31.419 li154.399 31.419 154.372 31.375 154.372 31.2247 cv154.372 30.9805 li154.372 30.7833 154.372 30.7833 154.825 30.6329 cv155.275 30.4844 155.351 30.4092 155.381 30.0928 cv155.397 29.7032 155.413 29.0166 155.413 28.044 cv155.413 26.8145 li1 /0 get_csdsepcs1 sepf162.018 21.7178 mo162.018 22.3331 161.515 22.8126 160.835 22.8126 cv160.194 22.8126 159.693 22.3467 159.693 21.7481 cv159.693 21.0928 160.225 20.6124 160.912 20.6124 cv161.528 20.6124 162.018 21.1065 162.018 21.7178 cvcp160.194 26.8145 mo160.194 25.0489 160.15 24.9434 159.565 24.8721 cv159.239 24.8428 159.163 24.7959 159.163 24.6456 cv159.163 24.377 li159.163 24.21 159.209 24.167 159.415 24.1504 cv161.528 23.9131 li161.562 23.8975 161.624 23.8975 161.682 23.8975 cv161.843 23.8975 161.899 23.9698 161.899 24.167 cv161.899 24.2706 161.899 24.2706 161.87 26.8145 cv161.87 29.0782 li161.87 29.6583 161.87 30.1084 161.885 30.4092 cv161.899 30.8584 161.915 31.21 161.915 31.3897 cv161.915 32.1807 161.562 32.7823 160.692 33.4542 cv160.027 33.96 159.286 34.4122 159.078 34.4122 cv158.934 34.4122 158.565 34.2325 158.565 34.1719 cv158.565 34.128 158.565 34.1124 158.873 33.8292 cv159.565 33.1856 159.926 32.5538 160.061 31.7754 cv160.165 31.1778 160.194 30.6329 160.194 29.1651 cv160.194 26.8145 li1 /0 get_csdsepcs1 sepf163.592 24.4795 mo163.592 24.2559 163.604 24.2247 163.827 24.1983 cv165.854 23.9424 li165.986 23.9131 li166.044 23.8975 166.106 23.8975 166.12 23.8975 cv166.264 23.8975 166.293 23.9561 166.305 24.2413 cv166.32 24.7051 li166.32 24.7667 166.32 24.9131 166.337 25.1241 cv166.337 25.3487 166.379 25.4366 166.452 25.4366 cv166.512 25.4366 166.512 25.4366 167.043 24.8116 cv167.641 24.1045 168.081 23.8975 168.986 23.8975 cv169.981 23.8975 170.672 24.3448 170.876 25.1534 cv170.948 25.376 170.99 25.4668 171.034 25.4668 cv171.045 25.4668 171.107 25.4083 171.154 25.335 cv171.699 24.3311 172.399 23.8975 173.515 23.8975 cv174.072 23.8975 174.602 24.0752 174.98 24.3917 cv175.395 24.7354 175.557 25.2139 175.557 26.0225 cv175.54 27.4268 li175.54 28.044 li175.54 29.3311 175.557 30.1241 175.6 30.2588 cv175.657 30.4698 175.668 30.4844 176.375 30.7227 cv176.542 30.7833 176.571 30.8292 176.571 30.9805 cv176.571 31.2247 li176.571 31.3575 176.53 31.419 176.415 31.419 cv176.31 31.419 li175.92 31.3897 175.261 31.375 174.687 31.375 cv174.145 31.375 173.457 31.3897 173.071 31.419 cv172.967 31.419 li172.853 31.419 172.811 31.3575 172.811 31.2247 cv172.811 30.9805 li172.811 30.7833 172.811 30.7833 173.266 30.6329 cv173.735 30.4844 173.793 30.4092 173.821 30.0928 cv173.832 29.7637 173.849 28.9415 173.849 28.044 cv173.849 27.4268 li173.849 26.4864 173.832 26.2471 173.761 25.962 cv173.65 25.5137 173.25 25.2598 172.692 25.2598 cv172.165 25.2598 171.667 25.542 171.33 26.0225 cv171.107 26.3194 171.034 26.7276 171.034 27.6104 cv171.034 28.044 li171.034 29.3165 171.045 30.1084 171.092 30.2588 cv171.154 30.4698 171.166 30.4844 171.86 30.7227 cv172.027 30.7833 172.056 30.8292 172.056 30.9805 cv172.056 31.2247 li172.056 31.3575 172.014 31.419 171.901 31.419 cv171.801 31.419 li171.418 31.3897 170.758 31.375 170.196 31.375 cv169.642 31.375 168.945 31.3897 168.579 31.419 cv168.475 31.419 li168.356 31.419 168.312 31.3575 168.312 31.2247 cv168.312 30.9805 li168.312 30.7833 168.312 30.7833 168.772 30.6329 cv169.211 30.4844 169.288 30.4092 169.319 30.0928 cv169.334 29.7637 169.346 28.9415 169.346 28.044 cv169.346 27.5333 li169.346 26.6065 169.288 26.1417 169.141 25.8135 cv169.003 25.4825 168.634 25.2891 168.167 25.2891 cv167.567 25.2891 167.131 25.5284 166.792 26.0528 cv166.584 26.3663 166.512 26.7276 166.512 27.5333 cv166.512 28.044 li166.512 28.8809 166.526 29.75 166.537 30.0928 cv166.569 30.4092 166.66 30.4961 167.102 30.6329 cv167.52 30.7676 167.538 30.7833 167.538 30.9805 cv167.538 31.2247 li167.538 31.3575 167.492 31.419 167.375 31.419 cv167.275 31.419 li166.893 31.3897 166.235 31.375 165.675 31.375 cv165.119 31.375 164.401 31.3897 164.046 31.419 cv163.947 31.419 li163.827 31.419 163.786 31.3575 163.786 31.2247 cv163.786 30.9805 li163.786 30.7833 163.797 30.7676 164.24 30.6329 cv164.678 30.4844 164.764 30.4092 164.796 30.0928 cv164.811 29.7637 164.825 28.9415 164.825 28.044 cv164.825 27.1006 li164.825 26.127 164.782 25.5733 164.649 25.2891 cv164.559 25.0792 164.328 24.9737 163.856 24.9581 cv163.648 24.9434 163.592 24.9131 163.592 24.7667 cv163.592 24.4795 li1 /0 get_csdsepcs1 sepf179.977 26.4551 mo180.651 26.3956 li180.916 26.3799 181.631 26.3194 181.9 26.2774 cv182.118 26.2608 182.202 26.1729 182.202 25.9776 cv182.202 25.7081 182.102 25.376 181.926 25.1397 cv181.75 24.8975 181.456 24.7667 181.065 24.7667 cv180.588 24.7667 180.125 24.9883 179.858 25.335 cv179.624 25.6202 179.445 26.0528 179.445 26.3057 cv179.445 26.4278 179.503 26.4717 179.65 26.4717 cv179.977 26.4551 licp179.725 27.1905 mo179.184 27.1905 179.126 27.2344 179.126 27.7422 cv179.126 29.1944 180.051 30.2588 181.305 30.2588 cv182.043 30.2588 183.101 29.8975 183.576 29.4961 cv183.606 29.4649 183.623 29.4502 183.637 29.4502 cv183.681 29.4502 183.727 29.5108 183.727 29.5831 cv183.727 29.8086 183.596 30.7979 183.563 30.9043 cv183.518 30.9805 183.362 31.0733 182.956 31.2383 cv182.42 31.4463 181.721 31.5811 181.109 31.5811 cv178.964 31.5811 177.483 30.1084 177.483 27.9542 cv177.483 25.6348 179.052 23.8975 181.182 23.8975 cv182.909 23.8975 183.857 24.8858 183.857 26.668 cv183.857 27.0704 183.696 27.1905 183.142 27.1905 cv179.725 27.1905 li1 /0 get_csdsepcs1 sepf187.061 26.2774 mo187.061 27.087 187.501 27.6553 188.131 27.6553 cv188.791 27.6553 189.277 26.9795 189.277 26.0528 cv189.277 25.2598 188.82 24.7051 188.161 24.7051 cv187.49 24.7051 187.061 25.3204 187.061 26.2774 cvcp187.196 31.4756 mo186.813 31.5811 186.535 31.9405 186.535 32.3174 cv186.535 33.0938 187.443 33.796 188.474 33.796 cv189.483 33.796 190.32 33.1856 190.32 32.4483 cv190.32 31.7022 189.682 31.3575 188.351 31.3575 cv187.792 31.3575 187.473 31.3897 187.196 31.4756 cvcp191.686 24.7354 mo191.686 24.9434 191.686 24.9434 191.134 25.1094 cv190.795 25.2139 190.739 25.2598 190.739 25.4366 cv190.739 25.4825 190.739 25.4981 190.78 25.6934 cv190.795 25.8262 190.811 25.962 190.811 26.0684 cv190.811 26.6983 190.496 27.4141 190.006 27.8321 cv189.576 28.2208 188.938 28.4327 188.19 28.4327 cv187.953 28.4327 187.953 28.4327 187.46 28.3565 cv187.326 28.3565 li187.176 28.3565 187.104 28.4327 187.015 28.6397 cv186.885 28.9561 186.828 29.1651 186.828 29.3311 cv186.828 29.6749 187.196 29.794 188.532 29.8555 cv190.129 29.9141 190.454 29.9747 190.883 30.3331 cv191.381 30.7227 191.673 31.3126 191.673 31.9561 cv191.673 33.545 190.159 34.667 188 34.667 cv186.207 34.667 184.995 33.9922 184.995 33.0206 cv184.995 32.5987 185.196 32.2579 185.77 31.7334 cv186.019 31.5088 186.095 31.419 186.095 31.3438 cv186.095 31.253 186.032 31.21 185.79 31.0577 cv185.492 30.8897 185.345 30.6915 185.345 30.4844 cv185.345 30.3038 185.404 30.1377 185.597 29.8086 cv186.166 28.8379 186.432 28.3126 186.432 28.1905 cv186.432 28.1036 186.432 28.1036 186.063 27.6963 cv185.729 27.3252 185.524 26.7559 185.524 26.2325 cv185.524 24.8555 186.611 23.8975 188.146 23.8975 cv188.635 23.8975 188.635 23.8975 189.729 24.1358 cv190.097 24.2247 190.795 24.2872 191.328 24.2706 cv191.641 24.2706 191.686 24.3018 191.686 24.4795 cv191.686 24.7354 li1 /0 get_csdsepcs1 sepf194.993 26.4551 mo195.665 26.3956 li195.927 26.3799 196.647 26.3194 196.913 26.2774 cv197.128 26.2608 197.217 26.1729 197.217 25.9776 cv197.217 25.7081 197.114 25.376 196.941 25.1397 cv196.768 24.8975 196.469 24.7667 196.077 24.7667 cv195.605 24.7667 195.139 24.9883 194.876 25.335 cv194.637 25.6202 194.459 26.0528 194.459 26.3057 cv194.459 26.4278 194.518 26.4717 194.667 26.4717 cv194.993 26.4551 licp194.738 27.1905 mo194.202 27.1905 194.139 27.2344 194.139 27.7422 cv194.139 29.1944 195.065 30.2588 196.32 30.2588 cv197.061 30.2588 198.108 29.8975 198.593 29.4961 cv198.62 29.4649 198.635 29.4502 198.651 29.4502 cv198.696 29.4502 198.74 29.5108 198.74 29.5831 cv198.74 29.8086 198.608 30.7979 198.579 30.9043 cv198.53 30.9805 198.374 31.0733 197.971 31.2383 cv197.44 31.4463 196.736 31.5811 196.121 31.5811 cv193.976 31.5811 192.494 30.1084 192.494 27.9542 cv192.494 25.6348 194.067 23.8975 196.194 23.8975 cv197.925 23.8975 198.875 24.8858 198.875 26.668 cv198.875 27.0704 198.711 27.1905 198.151 27.1905 cv194.738 27.1905 li1 /0 get_csdsepcs1 sepf199.929 24.4795 mo199.929 24.2559 199.954 24.21 200.146 24.1807 cv202.229 23.9288 li202.36 23.9131 202.466 23.8975 202.479 23.8975 cv202.598 23.8975 202.671 24.001 202.682 24.1807 cv202.695 24.3018 202.724 25.004 202.724 25.0792 cv202.742 25.2598 202.795 25.3926 202.871 25.3926 cv202.918 25.3926 202.976 25.3487 203.038 25.2891 cv203.184 25.1241 li203.459 24.8428 li204.166 24.0752 204.53 23.8975 205.377 23.8975 cv206.427 23.8975 207.211 24.3018 207.481 25.004 cv207.628 25.3624 207.628 25.3624 207.628 27.5479 cv207.628 28.044 li207.628 28.9415 207.643 29.794 207.663 30.0928 cv207.69 30.4092 207.778 30.4961 208.22 30.6329 cv208.657 30.7676 208.671 30.7833 208.671 30.9805 cv208.671 31.2247 li208.671 31.375 208.627 31.419 208.507 31.419 cv208.408 31.419 li208.027 31.3897 207.342 31.375 206.797 31.375 cv206.243 31.375 205.554 31.3897 205.179 31.419 cv205.073 31.419 li204.956 31.419 204.91 31.3575 204.91 31.2247 cv204.91 30.9805 li204.91 30.7833 204.93 30.7676 205.361 30.6329 cv205.8 30.4961 205.882 30.4092 205.915 30.0928 cv205.932 29.75 205.947 28.9258 205.947 28.044 cv205.947 27.5479 li205.947 26.6065 205.9 26.2032 205.786 25.8868 cv205.624 25.4825 205.238 25.2598 204.693 25.2598 cv204.09 25.2598 203.536 25.542 203.199 26.0225 cv202.947 26.3663 202.885 26.6983 202.885 27.6553 cv202.885 28.044 li202.885 28.9727 202.9 29.75 202.918 30.0928 cv202.947 30.4092 203.038 30.4961 203.459 30.6329 cv203.899 30.7833 203.917 30.7833 203.917 30.9805 cv203.917 31.2247 li203.917 31.3575 203.872 31.419 203.75 31.419 cv203.653 31.419 li203.269 31.3897 202.61 31.375 202.053 31.375 cv201.497 31.375 200.78 31.3897 200.424 31.419 cv200.322 31.419 li200.202 31.419 200.159 31.3575 200.159 31.2247 cv200.159 30.9805 li200.159 30.7833 200.172 30.7676 200.615 30.6329 cv201.051 30.4961 201.137 30.4092 201.171 30.0928 cv201.183 29.7793 201.201 28.9727 201.201 28.044 cv201.201 27.5206 li201.201 26.7852 201.113 25.6202 201.028 25.3487 cv200.95 25.0938 200.808 25.004 200.348 24.9737 cv199.997 24.9434 199.929 24.9131 199.929 24.7803 cv199.929 24.4795 li1 /0 get_csdsepcs1 sepf223.297 27.2276 mo223.225 27.5909 222.775 28.0762 222.245 28.1319 cv221.5 28.1495 220.879 27.542 220.841 27.0293 cv220.815 26.543 220.847 26.421 220.847 26.421 cv223.349 26.501 li223.343 26.7764 223.367 26.917 223.297 27.2276 cvcp223.627 25.5674 mo223.534 25.7852 li220.815 25.712 li220.63 25.4834 li220.458 25.4864 li220.458 27.1553 li220.419 27.9141 221.19 28.8409 222.229 28.8379 cv223.206 28.7852 223.674 27.8643 223.742 27.0049 cv223.844 25.5626 li223.627 25.5674 li0 0 0 1 cmykf221.597 33.4551 mo222.125 34.5147 li222.241 34.4493 li222.18 34.1661 li224.676 33.0674 li224.805 33.2237 li225.014 33.1202 li224.556 32.17 li224.407 32.2354 li224.41 32.5245 li221.961 33.5967 li221.75 33.4327 li221.597 33.4551 lif222.406 32.337 mo222.406 32.4542 li221.694 32.6026 li221.29 32.3252 221.099 32.0381 220.979 31.5616 cv220.748 30.6358 220.979 29.7735 222.189 29.4346 cv223.463 29.0381 223.994 29.8653 224.269 30.8301 cv224.348 31.1124 224.354 31.3184 224.401 31.629 cv223.721 31.8184 li223.63 31.6807 li223.897 31.4405 223.982 31.0811 223.894 30.7442 cv223.762 30.2188 223.163 29.918 222.667 30.1202 cv223.026 31.6631 li223.301 31.7774 li223.349 31.9268 li222.626 32.1143 li222.581 31.962 li222.686 31.8008 li222.29 30.2461 li221.694 30.2813 221.249 30.8975 221.377 31.4854 cv221.462 31.8633 221.914 32.2862 222.406 32.337 cvf221.876 24.8545 mo221.791 24.667 221.876 24.4385 222.067 24.3506 cv222.256 24.2745 222.482 24.3272 222.558 24.4913 cv222.657 24.6846 222.558 24.9073 222.377 25.0381 cv222.189 25.1241 221.965 25.0381 221.876 24.8545 cvf224.011 34.7403 mo223.92 34.546 224 34.3243 224.137 34.2383 cv224.307 34.1485 224.559 34.2393 224.703 34.4356 cv224.785 34.6231 224.697 34.8565 224.509 34.9327 cv224.319 35.0235 224.096 34.9307 224.011 34.7403 cvf242.873 42.0264 mo242.788 41.8321 242.881 41.6104 243.075 41.5245 cv243.277 41.4346 243.502 41.5245 243.582 41.71 cv243.655 41.9034 243.582 42.129 243.388 42.2217 cv243.198 42.3096 242.972 42.2159 242.873 42.0264 cvf222.647 18.6768 mo222.104 19.7364 li222.231 19.7803 li222.458 19.585 li224.867 20.8252 li224.823 21.0264 li225.031 21.1104 li225.47 20.1817 li225.311 20.1084 li225.09 20.2667 li222.792 19.0323 li222.766 18.7823 li222.647 18.6768 lif224.143 23.3379 mo223.994 23.2911 li223.85 23.4014 li222.049 23.0127 li224.629 22.0313 li224.864 21.4376 li224.676 21.3936 li224.5 21.4698 li222.075 20.5069 li222.057 20.2754 li221.887 20.2198 li221.58 21.0538 li221.802 21.1338 li222.007 21.0274 li223.73 21.7002 li220.979 22.7549 li220.853 23.1709 li223.73 23.8008 li223.853 23.9385 li223.961 23.9874 li224.143 23.3379 lif228.602 40.0293 mo228.497 40.1377 228.089 40.5215 227.676 40.5303 cv227.498 40.5333 227.339 40.4756 227.193 40.3331 cv227.149 40.2862 li227.011 40.1866 226.947 40.0596 226.938 39.8819 cv226.935 39.5362 227.234 39.0704 227.459 38.8301 cv227.647 38.6416 228.321 37.9327 228.86 38.4083 cv228.939 38.4815 li229.452 38.9913 228.754 39.8682 228.602 40.0293 cvcp229.651 39.4161 mo229.651 39.4161 li229.676 38.961 229.584 38.5723 229.288 38.2676 cv229.25 38.2159 li229.232 38.1963 li229.211 38.1846 li229.197 38.171 li229.153 38.1368 li228.831 37.8604 228.438 37.7686 227.984 37.8184 cv227.503 37.8682 227.046 38.1202 226.75 38.5489 cv226.235 39.2051 226.239 40.046 226.853 40.6592 cv226.868 40.6729 li226.865 40.6729 li226.859 40.6651 li226.868 40.6729 li227.527 41.2178 228.376 41.1905 229.018 40.6622 cv229.391 40.3467 229.624 39.8877 229.651 39.4161 cvf233.575 43.9483 mo234.693 44.1915 li234.705 44.0626 li234.458 43.8819 li234.986 41.2413 li235.232 41.2315 li235.25 41.0049 li234.224 40.8233 li234.18 40.9961 li234.438 41.1817 li233.919 43.7325 li233.645 43.8077 li233.575 43.9483 lif242.102 42.7354 mo242.219 42.7393 li242.442 43.4395 li242.146 43.8272 241.868 44.0088 241.378 44.1143 cv240.441 44.3165 239.588 44.1055 239.313 42.9249 cv238.906 41.6416 239.727 41.129 240.694 40.8526 cv240.986 40.7686 241.188 40.7666 241.504 40.7256 cv241.683 41.417 li241.542 41.5049 li241.311 41.2237 240.957 41.1358 240.606 41.212 cv240.088 41.3467 239.761 41.9639 239.943 42.4688 cv241.496 42.1163 li241.622 41.8331 li241.774 41.795 li241.947 42.5176 li241.786 42.5508 li241.627 42.4542 li240.096 42.8135 li240.125 43.3985 240.717 43.8379 241.314 43.7159 cv241.701 43.6504 242.14 43.2286 242.102 42.7354 cvf227.169 36.3467 mo227.049 36.4502 li227.067 36.6319 li225.745 37.9766 li226.332 35.2881 li225.961 34.7803 li225.829 34.9073 li225.795 35.0997 li223.633 36.5997 li223.425 36.4913 li223.297 36.6055 li223.85 37.3272 li224.041 37.1739 li224.061 36.9434 li225.552 35.878 li224.942 38.7325 li225.231 39.0586 li227.339 36.96 li227.518 36.9278 li227.618 36.8643 li227.169 36.3467 lif237.858 41.2618 mo237.848 41.42 li238.006 41.5303 li238.188 43.3838 li236.451 41.1504 li235.847 41.0948 li235.868 41.2735 li235.982 41.4307 li235.771 44.0684 li235.551 44.17 li235.548 44.3467 li236.424 44.3584 li236.439 44.1143 li236.287 43.9512 li236.404 42.1338 li238.226 44.4551 li238.657 44.4522 li238.422 41.542 li238.522 41.378 li238.531 41.2579 li237.858 41.2618 lif228.71 41.9092 mo228.792 41.7305 li229.044 41.75 li230.779 39.7627 li230.698 39.5557 li230.834 39.3926 li231.374 39.6202 li231.286 41.5928 li232.397 40.2989 li232.343 40.1944 li232.44 40.128 li233.222 40.4424 li233.21 40.6446 li233.075 40.71 li232.721 43.3926 li232.913 43.6143 li232.862 43.7735 li231.945 43.3643 li232 43.171 li232.165 43.1319 li232.417 41.0176 li230.785 42.959 li230.462 42.8526 li230.686 40.4151 li229.361 41.9971 li229.478 42.2198 li229.428 42.3399 li228.71 41.9092 lif249.368 38.4336 mo249.473 38.3819 li249.948 38.9415 li249.892 39.4366 249.731 39.7276 249.359 40.0635 cv248.629 40.75 247.768 40.9522 246.907 40.0401 cv246.004 39.0733 246.476 38.212 247.203 37.5235 cv247.417 37.3126 247.592 37.209 247.853 37.0186 cv248.345 37.5381 li248.275 37.6846 li247.92 37.5557 247.569 37.6543 247.305 37.8946 cv246.892 38.2442 246.907 38.9297 247.32 39.2725 cv248.539 38.2295 li248.506 37.9327 li248.609 37.8223 li249.116 38.3194 li249.001 38.4278 li248.808 38.4258 li247.586 39.5616 li247.891 40.0762 248.647 40.1885 249.104 39.7471 cv249.403 39.5 249.549 38.8995 249.368 38.4336 cvf253.176 22.0987 mo253.176 21.9825 li253.894 21.8272 li254.298 22.1221 254.474 22.3995 254.585 22.8809 cv254.82 23.8145 254.565 24.6768 253.376 24.9952 cv252.136 25.3819 251.568 24.5616 251.31 23.5918 cv251.228 23.3106 251.222 23.1036 251.181 22.7862 cv251.858 22.6026 li251.949 22.7432 li251.676 22.9766 251.588 23.337 251.676 23.6827 cv251.802 24.211 252.391 24.5127 252.898 24.3194 cv252.549 22.7667 li252.262 22.6495 li252.224 22.4942 li252.962 22.295 li252.995 22.4288 li252.889 22.629 li253.279 24.1905 li253.879 24.1719 254.334 23.5459 254.21 22.9512 cv254.131 22.5704 253.674 22.1543 253.176 22.0987 cvf250.859 21.4834 mo250.551 20.8409 250.376 19.9034 251.208 19.6895 cv251.902 19.503 252.309 20.168 252.406 20.6983 cv250.859 21.4834 licp253.566 20.1026 mo252.76 20.5069 li252.76 19.8858 252.921 19.1885 252.854 18.8409 cv252.737 18.337 252.579 18.2022 252.183 17.8663 cv252.066 17.9581 li252.183 18.1631 252.224 18.1622 252.303 18.4668 cv252.409 18.8995 252.397 19.169 252.292 19.5997 cv252.066 19.1592 251.55 18.9874 251.011 19.1426 cv250.332 19.3243 249.942 20.0303 250.247 20.667 cv250.923 22.2334 li251.152 22.1338 li251.202 21.9913 li253.613 20.7452 li253.786 20.8575 li253.918 20.8135 li253.566 20.1026 lif251.817 28.3985 mo251.829 25.8917 li251.624 25.21 li252.476 25.7559 li252.388 25.7764 252.315 25.8077 252.262 25.8497 cv252.18 25.9405 252.18 26.3174 252.166 26.8741 cv254.919 26.8379 li254.972 26.7178 li255.113 26.7237 li255.119 27.7139 li255.04 27.711 li254.917 27.4795 li252.186 27.5245 li252.192 27.8252 252.148 28.2637 252.224 28.3282 cv252.253 28.3624 252.309 28.3926 252.379 28.417 cv251.665 28.8975 li251.817 28.3985 lif254.706 30.7784 mo254.917 29.6475 li254.791 29.6387 li254.594 29.8672 li251.94 29.3956 li251.914 29.2022 li251.688 29.1846 li251.544 30.2188 li251.711 30.2374 li251.881 30.0323 li254.468 30.4795 li254.559 30.7198 li254.706 30.7784 lif253.528 31.3624 mo253.642 31.2393 li254.272 31.5264 li254.401 32.0411 254.377 32.4004 254.155 32.8692 cv253.704 33.7432 253.053 34.3272 251.817 33.8165 cv250.619 33.2764 250.753 32.2813 251.158 31.3497 cv251.272 31.0635 251.395 30.9053 251.55 30.6416 cv252.236 30.9004 li252.192 31.087 li251.826 31.1065 251.562 31.2715 251.407 31.5958 cv251.158 32.1143 251.55 32.5704 252.031 32.9454 cv252.497 33.3057 253.534 33.1504 253.803 32.6124 cv253.973 32.254 253.876 31.7198 253.528 31.3624 cvf252.614 36.127 mo253.188 35.1153 li253.059 35.1124 li252.819 35.2491 li250.373 33.9043 li250.422 33.7139 li250.211 33.626 li249.825 34.5489 li249.983 34.629 li250.214 34.4874 li252.488 35.7696 li252.511 36.0166 li252.614 36.127 lif250.724 38.671 mo252.309 36.8438 li251.972 35.9659 li251.744 36.1973 li251.744 36.1973 251.823 36.5635 251.793 36.7813 cv251.726 37.2237 251.126 37.7579 251.126 37.7579 cv249.048 36.0401 li249.136 35.8194 li248.949 35.6934 li248.234 36.5967 li248.427 36.7256 li248.659 36.6241 li250.677 38.3047 li250.636 38.543 li250.724 38.671 lif245.175 42.8829 mo246.037 42.418 li245.949 42.3126 li245.72 42.2774 li245.108 41.0264 li245.108 41.0264 245.618 40.6592 245.946 40.5889 cv246.11 40.5499 246.371 40.5518 246.371 40.5518 cv246.054 39.918 li246.054 39.918 245.905 40.1124 245.796 40.2178 cv245.547 40.4542 244.928 40.671 244.928 40.671 cv244.489 39.753 li244.489 39.753 245.102 39.3223 245.492 39.2051 cv245.618 39.167 245.867 39.1192 245.867 39.1192 cv245.867 39.1192 245.878 38.9463 245.911 38.8477 cv245.969 38.6778 246.127 38.4366 246.127 38.4366 cv243.599 39.917 li243.655 40.1045 li243.899 40.1006 li245.124 42.5264 li245.065 42.7354 li245.175 42.8829 lif247.118 18.2979 mo239.624 17.1211 li239.719 17.3487 239.776 17.6094 239.776 17.8682 cv239.776 18.9424 238.915 19.8067 237.834 19.8067 cv237.817 19.8067 237.792 19.8047 237.769 19.8047 cv237.768 19.8047 237.768 19.8047 237.768 19.8047 cv237.743 19.8047 237.731 19.8067 237.706 19.8067 cv236.637 19.8067 235.812 18.9424 235.812 17.8682 cv235.812 17.6094 235.868 17.3487 235.958 17.1211 cv228.5 18.2979 li228.283 17.0264 228.174 15.8497 228.174 14.792 cv228.174 14.4151 228.195 14.0635 228.218 13.7032 cv232.678 13.7032 li233.905 13.7032 234.007 13.8292 234.066 13.8877 cv234.145 13.962 234.166 14.167 234.051 14.2491 cv233.785 14.417 233.38 14.6163 233.38 15.2129 cv233.38 15.2286 233.38 15.2344 233.38 15.2461 cv233.38 15.7315 233.802 15.9112 234.822 16.3096 cv235.109 16.4229 236.137 16.8282 236.137 16.8282 cv236.351 16.7071 li236.703 16.5225 237.467 16.0157 237.467 15.1377 cv237.467 15.0235 237.454 14.9356 237.44 14.8584 cv237.412 14.7393 237.364 14.6407 237.313 14.5528 cv237.313 14.5499 237.313 14.5499 237.313 14.5459 cv237.151 14.2432 236.955 14.1534 236.955 14.1534 cv236.955 14.1534 237.051 13.7374 237.653 13.6846 cv237.657 13.6885 li237.68 13.6827 237.699 13.6768 237.722 13.6768 cv237.731 13.6768 237.766 13.6768 237.769 13.6768 cv238.065 13.6768 238.267 13.9258 238.267 14.2217 cv238.267 14.5879 238.033 14.6631 238.033 15.1377 cv238.032 16.0157 238.792 16.5225 239.146 16.7071 cv239.377 16.8282 li239.377 16.8282 240.42 16.4229 240.708 16.3096 cv241.736 15.9112 242.152 15.7315 242.152 15.2461 cv242.152 15.2344 242.152 15.2286 242.152 15.2129 cv242.152 14.6163 241.75 14.417 241.487 14.2491 cv241.355 14.167 241.376 13.962 241.469 13.8877 cv241.531 13.8292 241.633 13.7032 242.84 13.7032 cv247.402 13.7032 li247.428 14.0635 247.452 14.4151 247.452 14.792 cv247.452 15.8497 247.334 17.0264 247.118 18.2979 cvcp246.45 21.2823 mo246.45 21.2823 li240.122 18.3897 li242.348 18.7364 245.574 19.2413 246.886 19.4444 cv246.769 20.0499 246.62 20.6436 246.45 21.2823 cvcp239.514 19.3936 mo243.523 21.2823 li240.774 21.2823 li239.514 19.3936 licp245.206 25.1846 mo244.168 25.1846 241.182 25.1846 240.4 25.1846 cv240.4 24.5977 240.4 23.2413 240.4 22.4551 cv246.119 22.4551 li245.849 23.3379 245.544 24.2491 245.206 25.1846 cvcp238.364 21.2823 mo238.364 19.7959 li239.357 21.2823 li238.364 21.2823 licp236.199 21.2823 mo237.183 19.7959 li237.183 21.2823 li236.199 21.2823 licp244.584 26.8067 mo244.268 27.585 243.942 28.3311 243.605 29.0909 cv239.809 29.0909 li239.225 29.0909 li239.225 37.2325 li238.792 37.8633 238.408 38.3633 238.091 38.709 cv238.006 38.8008 237.863 38.9463 237.769 39.0147 cv237.686 38.9463 237.553 38.8008 237.459 38.709 cv237.137 38.3633 236.752 37.8633 236.325 37.2325 cv236.325 29.0909 li235.765 29.0909 li232 29.0909 li231.658 28.3311 231.33 27.585 231.028 26.8067 cv230.966 26.6543 230.908 26.5069 230.846 26.3643 cv236.325 26.3643 li236.325 22.4551 li237.768 22.4551 li237.769 22.4551 li239.225 22.4551 li239.225 26.3643 li244.762 26.3643 li244.706 26.5069 244.643 26.6543 244.584 26.8067 cvcp240.4 35.3838 mo240.4 33.4952 240.4 30.8838 240.4 30.2686 cv240.933 30.2686 242.19 30.2686 243.081 30.2686 cv242.181 32.1788 241.255 33.9405 240.4 35.3838 cvcp235.185 35.3838 mo234.33 33.9405 233.399 32.1788 232.5 30.2686 cv233.395 30.2686 234.652 30.2686 235.185 30.2686 cv235.185 30.8838 235.185 33.4952 235.185 35.3838 cvcp229.51 22.4551 mo235.185 22.4551 li235.185 23.2413 235.185 24.5977 235.185 25.1846 cv234.406 25.1846 231.444 25.1846 230.411 25.1846 cv230.063 24.2491 229.776 23.3379 229.51 22.4551 cvcp236.058 19.3936 mo234.807 21.2823 li232.085 21.2823 li236.058 19.3936 licp229.176 21.2823 mo229.003 20.6436 228.857 20.0499 228.728 19.4444 cv230.032 19.2413 233.234 18.7364 235.463 18.3897 cv229.176 21.2823 licp237.768 12.0049 mo237.769 12.0049 li242.237 12.0049 246.71 12.0049 247.118 12.0049 cv247.165 12.1788 247.206 12.3692 247.238 12.5616 cv242.84 12.5616 li240.974 12.5616 240.176 13.0157 240.176 14.1045 cv240.176 14.4415 240.362 14.7999 240.668 15.0577 cv240.454 15.1426 239.556 15.4629 239.43 15.5215 cv239.325 15.4004 239.123 15.21 239.093 14.9112 cv239.184 14.7657 239.377 14.4737 239.377 14.043 cv239.377 13.3702 238.915 12.6944 237.743 12.6622 cv237.2 12.6827 236.858 12.8409 236.581 13.0626 cv236.568 13.0811 236.556 13.0948 236.539 13.1133 cv236.049 13.2491 235.742 13.5811 235.742 14.0186 cv235.742 14.4854 li235.742 14.4854 235.958 14.5059 236.082 14.5528 cv236.24 14.6231 236.298 14.7042 236.348 14.7657 cv236.483 14.9581 236.369 15.3868 236.099 15.5215 cv235.97 15.4629 235.077 15.1426 234.857 15.0577 cv235.162 14.7999 235.358 14.4415 235.358 14.1045 cv235.358 13.0157 234.555 12.5616 232.678 12.5616 cv228.374 12.5616 li228.415 12.3692 228.447 12.1788 228.5 12.0049 cv228.924 12.0049 233.34 12.0049 237.768 12.0049 cvcp231.784 8.08887 mo231.784 7.72559 231.901 7.26075 232.941 7.26075 cv233.785 7.26075 234.125 7.38965 234.271 7.49024 cv234.341 7.53418 234.438 7.60743 234.438 7.96778 cv234.438 7.96778 234.438 9.83399 234.438 10.8262 cv231.784 10.8262 li231.784 9.8584 231.784 8.08887 231.784 8.08887 cvcp236.506 4.88965 mo236.506 5.02051 236.506 5.15528 236.506 5.28321 cv235.812 5.49512 235.226 5.86231 234.836 6.45508 cv234.514 6.26075 234.113 6.17286 233.703 6.12794 cv234.502 5.53516 235.49 5.09083 236.506 4.88965 cvcp235.745 2.59864 mo236.216 2.59864 237.424 2.59864 237.424 2.59864 cv237.424 2.59864 237.424 1.40137 237.424 0.918946 cv237.565 0.918946 237.67 0.918946 237.768 0.918946 cv237.769 0.918946 li237.881 0.918946 237.992 0.918946 238.126 0.918946 cv238.126 1.40137 238.126 2.59864 238.126 2.59864 cv238.126 2.59864 239.348 2.59864 239.834 2.59864 cv239.834 2.89161 239.834 3.03809 239.834 3.33887 cv239.348 3.33887 238.126 3.33887 238.126 3.33887 cv238.126 3.33887 238.126 4.55665 238.126 5.0459 cv237.992 5.0459 237.881 5.0459 237.769 5.0459 cv237.768 5.0459 li237.67 5.0459 237.565 5.0459 237.424 5.0459 cv237.424 4.55665 237.424 3.33887 237.424 3.33887 cv237.424 3.33887 236.216 3.33887 235.745 3.33887 cv235.745 3.03809 235.745 2.89161 235.745 2.59864 cvcp239.972 7.96778 mo239.972 10.8262 li237.769 10.8262 li237.768 10.8262 li235.61 10.8262 li235.607 7.96778 li235.607 7.14649 236.152 6.19629 237.768 6.19629 cv237.768 6.19629 237.768 6.19629 237.769 6.19629 cv239.413 6.19629 239.972 7.14649 239.972 7.96778 cvcp241.879 6.12794 mo241.466 6.17286 241.074 6.26075 240.747 6.45508 cv240.359 5.86231 239.776 5.49512 239.041 5.28321 cv239.041 5.15528 239.041 5.02051 239.041 4.88965 cv240.094 5.09083 241.083 5.53516 241.879 6.12794 cvcp243.831 8.08887 mo243.831 8.08887 243.831 9.8584 243.831 10.8262 cv241.144 10.8262 li241.144 9.83399 241.144 7.96778 241.144 7.96778 cv241.144 7.60743 241.241 7.53418 241.302 7.49024 cv241.449 7.38965 241.8 7.26075 242.647 7.26075 cv243.702 7.26075 243.831 7.72559 243.831 8.08887 cvcp248.126 11.2315 mo247.985 10.8262 li245.006 10.8262 li245.006 8.08887 li245.006 7.33301 244.626 6.53223 243.614 6.22071 cv242.881 5.39356 241.879 4.65333 240.749 4.1836 cv240.749 1.67969 li240.749 1.67969 239.528 1.67969 239.041 1.67969 cv239.041 1.19629 239.041 0 239.041 0 cv237.769 0 li237.768 0 li236.506 0 li236.506 0 236.506 1.19629 236.506 1.67969 cv236.046 1.67969 234.834 1.67969 234.834 1.67969 cv234.834 4.1836 li233.703 4.65333 232.686 5.39356 231.98 6.22071 cv230.981 6.53223 230.6 7.33301 230.6 8.08887 cv230.6 10.8262 li227.632 10.8262 li227.503 11.2315 li227.143 12.3223 226.985 13.5167 226.985 14.8213 cv226.985 18.8545 228.476 23.5733 229.935 27.2491 cv232.153 32.8096 235.077 37.8448 236.594 39.5196 cv236.959 39.8799 237.253 40.2002 237.737 40.2198 cv237.743 40.2227 237.758 40.2198 237.768 40.2198 cv237.768 40.2198 237.768 40.2198 237.769 40.2198 cv237.784 40.2198 237.792 40.2227 237.804 40.2198 cv238.296 40.2002 238.595 39.8799 238.95 39.5196 cv240.511 37.8448 243.461 32.8096 245.673 27.2491 cv247.141 23.5733 248.629 18.8545 248.629 14.8213 cv248.629 13.5167 248.495 12.3223 248.126 11.2315 cvf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Frans Nies) (Nies en Partners b.v.)%%Title: (RU eng PMS1805 A4.eps)%%CreationDate: 27-04-2004 15:43%AI9_DataStream%Gb"-6BlbT4E@CSil9CdlMQksIq62LjLEjl-d\ANK.C==+`sY>JDbK@CZ<P_cY;C^CIZQ(1W]FCR]XBAT-/E/Z;(*-?8E?@,pqaqI%mll3liT"i055fsq3`r!bab5;MrfEjWIdi!ikJPX'J%KT>Q;X^/n198)>AJGK9=BTilC"V/[HB/,^&.6crPpQUqu#^7qes54I_,LM%q:cu3/oKR\qu-)<o,l"[?[oS6J,SX'h:jT<HtEB@IuV^%p$LMk^AlR]Ija`H5JFc.m[Nr8CCe2[k/V]5celS]nuqTX?bHF0V%'U#%DMK#M^\d`JV`T1m?iB?h-boTD:Tb29R!:Uij7.o,l1#kpjmRt:5<>0a3NMj]gHX!P5P'@Fm"&?In'r3K=U0.is4l?Hm*6\rRLO\Q%(C'dbV0+l7mdA:c_e?Mbc7^4<cLX90K+B%?k"#>HmC@`Fq>9&uq"Dno[pM=HqY7gS8Ful)pNM+sIJ`+hY.q%5/09CY,8l!oQ>KL(%Ps<I.\3n.KPM5BBC<p.djj9k;+I8I?/:%99&+BPjUVf=/IJ;^\QVZN<N_n\I+5RU8S:CP/M\#ic@7@9f:kBqUcbI)?s7o_<5CB04%5Q>`"a8Y&H2t(\>8G1[%gUD\T1-7rXC@KEUT7?b;9>g?s\)5#7s/:p?s7DNDmV^n\qtn_<"[Dt'qiAMioT(uc;U2T<l&\7lF#AZ(%47ac[K5I+9OA.dGKX2RpRj3A@+qJf3YqtT9hN?RPr2cUa:Hs@(m>$`eZMEDu@J\l0rpWWPo^!'Ardu;6<egWUq*0kJIJT9`mm#7_%\GH!Fn^AN&GhYJJ\7eP6Z/NOdVr,q[oQU4+HeimqTQ/uiYCH,B[;O1:`j#@Ds&+=EZeOs&TDn9MVsjWSj,^tN[/AJM2kU*:rS_DY%da'"bqQ^"i]>MVNn%SbViKp0#h>Zmt2rHnt0C[$.?cL[k^8&)!h1+nWX85#o]tOC6gWsg<n@K5"p:B/W]>!IXZhM2</^rnW]aqd+%J+%gV([l;mpI71C8NYgTir1n7qq]#8])D-c?13#go\Ub-Lpg-hmlu9mX`d(@I:+uUr[>SZ41fn?Rs&f\98h/tO+2P,qrnX/1b.SR%a);Ifo_.ku:3?r>qosnWhm?P^`HNE<]^H7,l0]($qAk%T]=37in>7N!OLBMUrUK$p4WDH<_o9[Tmsk*-m5H-@SnuF]P3K_Fr6t+<%c\J,OnCtB0]?n"Xh;R@_j^4@h=g"s3YHBO^O4P3"kL]C<>j(Ep*O!Ag^NS6&g0@oj?!U`B*Nq)ucEHM5\]S"<.UIfZJ*!j"Q+=QA%]Xkbg4C2?!SmU'lZ<ZP8F;ZaLV8%,=p<jqaO&sBFj7.A64?qD,3Tag4`a_")UH@2)\[]A`]"#C4?<ga*?dt!SOY>-O]Ef>Q_Hke%%Z^bBp?_(Pq+3uUccd1p&3R?mQ4J%=LJ*tVL\Z+3RWa=7d]r:,%el$Q`2:bSCDc(@/jgn]^bAo-Mjh0)@QBFljZ%V+p/+%l4fD-n'%k$u-HkIEKg,j1D%%bYK]D55)%kpfu9A%G4oWMW.];bAcujHE4pR3c1[X*>MCnKOR66`.dA;iEG!+'l8$K^3Rl0#KDKK_&#-#s"dm%6O5lc@"\"$rlSUEUVH<]NI<:7cT_0gKD45Jl]&N"=74KWh1[q7eJ4EVEmY'RSTE@"HYotQV*3N?HZ#l92VVc;%G"`rXYl#N$Ye<u%Qj_@ibd;;CUXc_QS+^qcZ2So$LEHHjicE!DUM!kcIi@qqb7B'8JmNi:(d4-&V"HIO*8msd`MK<?@-g&i?erEqr:]iR_puN2h(d`n%rk'@j6U/0Al:RNrmp'FP/aYcFpGtNa?/0WUD8SJX>sA+"5KhU/rEPu+QIC>0qK:W`COuMujRqE3_mTaKAjO9YA>^*3OlS?No6>Sf%$j:2g3?uo`ZI9'idN,&E6@4Ob!<#1jZnN'n1'E8d8.cCX+@e\YJ0Y.mC1IVW'9FO`:-bD$5[>Lp!\sq4W[p]C1/]Zr=V9n!5hb=^%IQ=34n71\A$+o3_P-6*99;?KISa0;K.`7O,.ns+3f7O$US]dY8h#5i6lrRQ+5Kc7cl[N6J6U^:\;TP,HY.T+H'3@9c(\l>%Faie%%EV`l2fAi'tb>[#5qG5$%"=h#GQUn<0Q7_<G5QAth7)X!@-?,Fq3DJEfJ]fUc?ik[HbU'KZ^fV4R3Dt'0.$^?.1QtUC-/BVJ?]_AP%P@XWT)9WDakuh`s/k',j8GYTuR@Ye&kP%kqT]F9]c<%s^Od(5^a-SqEIY*GAMLmK#,5t:$rF\p2/P-%o1U&hP23Ath;2(tqr`=>T%ih;4Nc6t]M"i\N<+s[GV*X,+H-/gU-:gTnn$">1dQ69@;TQgbEAeQoRPu5[,3AW9^e-'1n`(^e&/Y^QKMObl7K'3NX-]"B?J:\%6%67@Y`,`%%#$Gn3KUC0\i,a3gZ8oc@OVBhX_F@u*Q8Z3Epo,>@\`)I@K8Q8,eF^]Q\,Z^.4=_]7nPpBFn>tK>gq3<7.Q=34>]i[ge%D*K/bMCcs!XNIjnd<:pYUfq@a]4AM^_JSHn<PTV7cB7;VUhM)L8=gTn:EtQsMn:J.%X_oUGUJo';7a+MHhR\N'n+>-njV5UR>#"r%KZHqZoR9]]JPSr@nIri^&5tnH$aDM'k(MhWTGkeE.Ku%cG1]?kH2=t3%5VgdBqMnh[u"OqbIg,SHd%tSmu4t6qQ@>1==5>_,-b`,%k_:dmTBWuHS@(2%0*KkV[(W^%7Nd-(j`VlU>nG%^JC?IFJZAPcf&/*3&kCG2WlSWH#ODs?lj)=\f])m^W';bSB!op[f\&f!>?S"t%f@r*,?bnOtGh*e)Y2`Y+;"ED:k1RTD*DErBkW(.NJ6=9GQU0r0$lB"S9k\94B?hiJE9/W>RoR)lUk_30FOo/-[[l&<Z=hROGY$ep%:%6Ns]rb8i`!WHU)V!X$St^E)q:cE%s6\:-I^nT[Xgb)edML8gNbZu'-1mq,>',#r^$)C1?!]iN3c:PN-1mqlVHI4l004!<AZZc&%c#VCt`AJ(V0TsbpW5J7JfCJhl:3Dq2k#u)kU\t\Go<2^-(s(gr/1[Re^:s@cXmu4c,@7F1^K+R_5C5HN#F)YE/kae?^J(!+kOKuR%i.[OEg0X<@CJS638u(L$k302?M"O::67KX2K\/g_DBtr7;K:)T`apA8f1jc$NKj3-;IUk&\WN958BjRJ3L>`t>do@?[KG;DRM6]X%b)Jm@7]S/-7^Ocen[`T^VJX8q2kh',EQa?_eOJmX)UZ05`:(:"!S`F(DaZ<<ig:[IXGtc?BN4T/;:"R:!S_mgr6iZ$CudH410Y^.%]kCsNZB=&1LASEAA)G@JCudT810kj0^1_'SZB=VAL;p[,7_[:Cf][["FM9YZhdhOQ,Q:b]1/'b<>WWWd3uh-[,YC-LcJ,%4Ckp&2%]l(]ED$Pr:#>8k<9Pt)0D+rbS4*`Ft5$p85a0lZ'0C<G1m>/pPW2f7+\nFUcA]*g!`^JO(V"o2@`HK2]G1>&cjB]-fn$6BqFlQ,3%j%t.c)e1rSF#tmf4#8OUG'I=OoY,2OYAK&p7se#uqb>%hF@=p!7YGo?@hI+_TH^VR):s&Y(d.bC%%2?[](;O[CB&?MQff?^1N@lr%hKJ0F@DKM,^A%88h;NcP`1sKsacG5$@^TusW52E9A^LF(`C5I5^[1W+h'$N*(KQp;f_+FY+g1-P`2>c_BmGa6ZmS!gcOlfCUo3<7%imXLkZogj+g68+okD2p2c31\K@^SKTg0ZL;X(uM)'+U0&X#R6C'W^o7SCV_<ebWHECH9@KI4_A)S78n?QIB#4Z!%ZZ>/X!LO5Yjh%q?Qh\L\[^#=L;raC,5__c?8ZmFZb((r6+1(f@9ti8lj,,Om=1Nd>=JaIrc-*gS5,_nRIXO(M-72_)OSHB\pGjitW[)P;QUgrF5TO%J"A(0O4T6pTCPf=FmXIb%+k&HK*SSc4kPZBf"O(+fF-r]*Z!%m/j>/Nc&685KtUYr8inWkeacVlBjn32QdSV:HaUMNG$<P!je]?5%U7>O\n3*i'kLl/29Z@X(;I'*s0hXe@,,9)E"3nnnP>`HifUAU-)*5@<(%l&d]W/Y!i2`T=(2<-u^/iaEM\0.rHsrLWBbA@6mV@OT%d)Y]RE<`7n)^jj`<n*2<V-C[R(1T;t1jY$jl5*ga^V;p:]`!6QnW/10bdX])s6@Z)([B&u?1S#-GmTc.-mpT"TopJYUu`n%d\E>>%]S&n'P`qE":e?^gddhN1C%V56T&M?I^ui>-dfZ\6$bl6*X;usc>-4GgS/A^%l%rs6]8tj`rrN=YIXs[>qP&>>>VJ/MYEddR7Jsa@%b+ibGk/tl-^If_2aOIk5'F^M0bC1-6GeCGn4eIHkb3D.df=gH@rhB$1Yl.'ta]<61;f(gb.ZUk#@@=J2HYS28*akgI`[f3>Y`!DY%n;E78-<Ja`>d"OLNd>!re`L?b(XBin/Dd[\8H$Tp(&3Z4-+Xl1Dn1a3Q*58B0(_3iFfEt-?e:4)WOp7+-`IVJIY(nij1*X+4C5F8%;VA9S*pihfhLN@V["#`nI`FLaS1r<^1s/$nMdQ2%nFsk>lpkk#5o@cId23B^6dU9>\;L>o71g/Tho]h"f:=?_^MDYOZJfJTV1gjo%Co2:03kSaCJ&ne^9[X7E"lZMV2b%*c2@BQodX"@0KERo<4qN,bq\SI0H\i5gf1>lM;?F<MC'Qj+,0#CLoNePC*l*U4B*+V2=6QJh%n8+cH!R:p0+lJ;%-F#,c+aK)\"e?EqkimMTB*OnFE,Kpm/WP4)AFqmbG_XQo!p9iZ,Zb?tPX4$an48*tKoQm-=Q!kD_hF*e3+.d1%pC-Jr%IM/F(AG0%DqX[?m!l,LDH@eh5sZ*)$#)EOYd[7(aG&[3Z:7M5-"0-ijIK%U-od5RUZ4=#DUFi/9-pbX6b&XS=B$ToH&.qo%a3KBVR$<s*L!Z@tU0C,ni$h))EhmJs8RFgrh3OE"2$BdlGtD@15aCFWI19U3(ZIVMFgi^8p\@oOod2nK/`LMoqKbu'r1HOU@EnS"%9)+1+s%i,ti.IGf#5ZYP&C/R3ls,0gB3>BaNRuaOZtFtofrUJQ^."*(bh6!C5;'6U)i].f9PN1:"<r8WC6Spn;V*C@]om&p\o+K_%QWWTIK8)s>9O5h`0nekOE=#[R9jQY0)Q*baJ12b[W[_1/:DZf`7p&eX3IqLjIRJc!2Bm!)gr?8q<EKos,;LX"N_%tCQnu`0N3PB1%FNuX5SR[Hc.Bn,c:(Pi?E]=3f&5g*U1VYO^^<cu%-#a*g,go6jArmQF#p0DP.C"U6q2tC/Jg?RtNT6TF5G,$n/kJFJ,,]YS6\*f'%,XsLBb7H0n#UTR,4_fp4%>8g94XNHM&h(Y[A.hN^=pWMD86d%QctIfp`0a+aNPq7tnfe,g(j&5%2A0XI!GE+!-@oimEBGqPHOWZ4%i3[YZ8p>q#(1O9#.keZ!T6%[q?\P\<LpUkEQ:GE=,"K-HhFMYn/#8-G5kL:F?NpR[WRk"N5+M/@%TaON%,sDSZ#q\T+b(Pq2h.^u%AGJ:b.I']P2(6Y.$KZ^Wl=hgWl;<k,,%Y,F]%*Wn[4/%M=]D*#<iO;(ePWA.lW(N."a)='.p#]`1+689MPVh+7*X0QXJ0E;?-C+M%(/_T7b!hRJUim'7lm8tkr].#dN\!MTG`:)>6Gfm5d/7sWe&D9B*:QK^ARg4Q)1696ItgbDepb8T07JL;c+Z9aZGZ;sg7r9+Tk9^2%+6c][l+uLtj(7h8+RT'=CcXY2d;rhB1mHJ:mpnbrV[6Ka)ju81O^OBlr/C:BR*QZXKu(3CJ%GreRk^K\>97;5jHeF?=ERONQjtf2%pr=Z$:P]e:H57E?e%:!$A,>1S0Cbl!EPrnD!Hi%7?1Po-hUh$AArL)Fr:p!RrATMh1?aM:(A&O0pDW;j)X6ttSkY:?E-bQ?habTo%Ym+R%eDoW_?`1f.b8g(n?2[9933"rE6Te^C4C:H<?UHq_6Te_9X`t?EoXF&9lK`5Uk>SP837$29cTd$l?fO9K@cKSc,-pE`l`hHo%OBVCmP`=#%r^/dFcO^Uo]i+l>]i&44G@.+h?]`rg#!;_sIE6o]khR6ej`>mb:T`UIY!:gMqAJYAhP5St)NXj1==[_!C@N4'r>Laq%?S<H>eRFRIb+>)oN6E?34VXJN2a&%R9ek"U$IkZ:rn!.\?98rCXP\"X!9dO;m6sfudqr?>AgdSa3rE;[r4g#W^IK<gCPVp5*Ia!c%lU.\?\EmpB2Fc!"K''H#CKUj):"Rn]\\E<19iouKSR?Lgb7FtLEF@Cu]b13;eF9ZA>+D>jIN]A:dIeP$@i*YXO@G"I3hq2k'j?M)%L/p>,@V7o.eFAWdV`W(RY30g+FUosL]%=%(qAp5K5@d&3kf\@6)BeRD]gV\l)AO&hI;.*3)URZ9>\Z(,B3/%DM/VbnS\))H_\Uck%#(=?/HeNf<)[A%e[%L>X3SbJ#,?8p%-MQ7>lBEo(DSARBX[2WCAVXO2rpPCXEu3=c-.Ftee3"Jq5#ldU-"l$Ae3tD2BpTf`YK2!U%*I&%YW%;ITYj0al?N08bNnY2,>M"g*F0VoL3$m)3mjYO%)=\DZL_Fd8:[s=Pk;l$M:(rCG^$U\>/0!^<kQ<OPLf&ddk]#-!@aUiH%#q4>3dYUMN?\EYn9OpII]Bg[q:^R[N]srhsbd!mPUaX6>0'Gd1U)+ZZP;&)2,T*<_hNA9j)NgQUKk^nL\EJ#:0m4l`H_b-q*m9jq%?qBpIJtQ/TPE8O-l9n#Y)-N>elqnD=YpMe1!_9(4,psp'@?Rp8\4NSJ"'sU,QC5=/Njadli@6HPA[4ek<4umYdj`R5FY8G$J$!-G%P>9^>Q^]Tl?"%k!AQg.R3P/X@p-e:NWB\#/^=F,cQ[$op.'DpenjVaE@aZg1hV7C"U6=8pPT0s$lCRrb-L+T\p8U?(eXuf,e"=;l%TO//TY6O2l"8&VpqUGTE]r@e,I$MAuX&kem>[H6a+1rZVmJMRfX8DN&Y<PZuk?%EB=81r\pZXo+%f\>pMUsi9f/V4137?D<degpG%T6\,iOa`Q.I2b]QRcrijdE>0eC*'.sI$UVk`B&And<H/kGX@2C#JGLZo^Xb%s.pCBr9Fa$"i$Rko#nX@Ih+0g0CFSo;D.Odn2Ucd%:'Y2WXed=!`mP^;+N@LjA#OpoZKPEbK'Q\n6b/+3V>DoEAW*gf`E:5k/n33<^;\j+ElCk]!hD?N-pYfE]S0;WT(@)u,m'+nPLJ0T%L"s5K>(BQ\Yaj3LWaZ)_*^JfhaP/4d)$)34^r6ElXsY>L"ceaY=$:?%[DIHN7Z3L%5(3Et)!"jSV(k!IZ1.Bfn`^Vee9sgA;aT!J%(kmRkZ81NZ7B*CC[2,YeJSJ?0<-FgrFe+\\?+c[gM2H8kimfeT=C&oZ.4\1#=cZKJ<m**oJUO6Ea(Z^I#-Q9F$+@,fbBd0[/D@8.%lcZ&(7+PjT^n!mKKi_b7jN_6&>0n9Xh+?6.b969)3AKs+$:2X;&U\q'>Y0dqC70eJ/<VVm4=f!ONEN_FCH#l(`h;9m<_AD"cf1`B%q0d/Ab:8Kla,LZmr5ptjHpEgpfe7GE+7cN=q6a\T["m0JoO>.d)qlk."=fd;<aOglUIQ:2PL&FQ0#!F6j/>r<,jp3s\U,Z_QI<==%k]P-Ah633U&uiRko^:m5O,5p\7FSms-E9A\]mD+!5kL&5ID9Bta@f8,IcU)&c]U_<^_]1RP%K<,Ht`;K&.9=r81Qh=?l=j*/48M6%3Z,o#.q?D\Z.MZ%ZpM?3/[5@G<lP1k]su3e=G;[58Ab4%H@RB2>soF34B`Qj#h'/0!uBDk4A?peAFmuC%5=dr=<=FVBXgK;IkU*Y%GJ%0ef&uKa/hcP^QS4\lp%`AsdGrb3F?]"Cf6r+M*miqR5ADVIi?%<hj^lp(L%kPYo4@B_.)Vj8JXnPibGGW1em[8a_R(r51`'S8%e7%#R&D-1YI^qflejYs<C6=i_'rIZ7'4+$<VHF?#PhDN]?(]Z7+EquY4&XFX/P2aQ3!>YdgL1Tl7$M%Qb)gm2UaCu,5Pkkp?5`sJ%-Tm'#fc?!'r828rqSAKD'&S)n'Aj^MN3;8O)I,76.NQura3aP+>Q?!^\I6U"/[!C&\;g_Jhre1A,3&tNnT:$_1;/pr:eV'b`)o`'%lcC\K/]Nr/F&A?3<b<W6%M@'\$1!J*37jI!\@;spPD%.T^o]U4R-B;&LbU.;(f)q'R9>fC+bCqmAr,eEWL9c_B"#Zj[cM+]$aV+q%NgqRYZS"8e$dP9g"_X--ECOXNe!>Qf#\Tj,A.57P6`J'bbO0ptFue[3$Ac@cZ=9-30lTA>Z?+4F.sVK%>#l('I6gk.-)nD2]Ms/k%Gm)UO9nmfuVTPAp,SWe'l;\J&emd41,0:O;):Y%@LR>($Z4_e:P[tYbM_`L#IeD>cWD]HGn\X6]k:DLi0K'3W>pP=@nO*ZRJe_nu%':'ZNn?ZBKQVB$eA";$:0b,iI<1@$K6u)np`^IIGcVp*@/h+YSj/TgO'jiPV[J5knZqA_W.n)+Dm<Dus^>+UnVi&XDcdS-N:NDbH%RX`\J!hGojm<Y99s*Qu_QLo:*cVS-?n^g->Db`\*4;].oo6[_5+SLh\g;IBqFuV`eQ`3U#K.X(X4&nnp`IsrY9%Y^bo8'j$il6.a%l/DWin\&\q=?Ko)^?lYr5E<_C(Tuggp"NfOI/H-Nj^kW?4?B"#a-Db$?`_uolkYlQ?H^FipPG6JH7^BA>"8LRd7Pd<M"Z:(bK.Ga%Oaer-s&qnk[>b$!)>Vl>np:suY@ZeHfAj`(G%^$HN;RH/q:@CmY@Zd%bK.GaOaer-J$1@%[>b$5o.okIeW>84+TH(O5lOURN#ZCa%EdT0gCBg-6maT5rDH,*).K249mVUdrXh2)c-b"8$VnpKoo!,ghD=\m@q[I1b1!&R()8u/"W-;+P$gVNhBF!F[$TsVTAm]^U-=(`^%_L!*V])^_Wp`U=-.)pHs^5MPfR.'$^([/J%cU.TISEU\id]goXg3o:ZC19c,_N7OZ-omB-g!P4[FCmt&CK=F0ct.tES_;A<(0%Y=%1]N:9rK7'6@m,%gc5hpD\]n\n2HPha1RW%XEonocNj@X5U9*GM_aAl)#C4/f[lcONiZS]bo%8TrO0ubTO%gJ\=:<pTfRs9dbnmTT%_LRtaqB!`3o!R<lpP')@M:nAd^9;2@[b_RVAFCS1/TH%e1\W$l[a'^(C0ppu2Qs<JJV^l81b&H^oj5@iSDU[8b<6",CKCBaM>B@c%^RWLMo6"gjQD`hr=[g>IemHYi:Q6a42o!E(ltgDe$eY#Jq:%ee]Y%K=2.E,CPnE@c3RtnP[QIq%HUKdVPs<i]:\lq3bF`KpQD\>b%I?a<a.JYckSS[_p>]ZO#!Urs(]AJ[)0:A+&cdonDFd"h'Y*I>XK)]X-FLH'LgO*gAYFr<OQBh'gf#_SYPMF`)8^68<4neEdR)!oD%1-a'cr>=:3[o65thXt9.)af'5!P_R?DjY?]6_s0+"9;b'k.-CMaBtNtFCU!m']6O,CWt<CJof^,_p"7Vh>_%"e[nL@^$Ae6mc2ao%>InH?&'>jH=dHmqhei)C/Dj1jh7DH[khSq8VXS/6o\T7fXrG.=Q07bAmkZGBQ9j[YqOT\B5S$JY-[S1P,i\tM?[0$?"I:iG:>s"[%@:^o`qaPLb\G;6@pQ'2^h(fhIlRMNdN8\ER7qSUpIJW(tqu0F0'2%Lp-2`1n^)%O^Np0rHH,$9%8JB"Eb5M<_:Jn_'e*fJJH2lKO%Mqb`0IfI;s^266faA+jZ0(FHPIu/i-bCag4:ZN@Za2II3Kk"@/bO.T\@pC(qlp%(O>TUfJ5D<TP*lI3for`J>BPTT#[T:556C)9J%I;%@8^])?QO$EO>iT$78++O1Mc%+(!+-rPs!WM*C00ag\jidPI*ugZ@s.AaD^H_Y/[J71=q07+&D:d-a@c@?oZ$hDfZa^1_iLg,j%Du\_gli1k<597W"*tJ>I^WbXUK`CYigHWBD41W6=Dq^cUh!_J`c1E"2IDcVF:>;:*\/T_uS>X-R0c:jm4j3BbVtNb;nqK6:$gfR4%"CrYY;\'/P(ZB<$i:1t,X!L"JSdEga["=cH=so:>aqHd,BD<E&PP61"H^'<^i1So81-hB]]Yg>]iTb+.K4UE4TFGJ6fY]DoSI_@T%"TK\Wou>H_nNT'8Ds"=u2:O#8jn];S9Gkg$o5*RJG4a-1PP62MB%%1+eaC/BE:$EgA6&/nl)X]7R*An+6h<k<:=`Ddl79$Y+Kn*3%4tR<<nP(6/AAC90>90sYGWfAY<1]IY!Ip6.S\B+Cr+Tb^"S,A2gb`9T#AS);iHAb\-fsH<I.GXCR5E`3*q?K&AMrI2SaoTq/0jS@%E$ok8]!s6=LNhN)S*:RN0TBW"l=E3eCn`=$Y<i6g7iprTV\(FOi12F'N`ZP!*j5uR$,j1^o55YbEW5lMAoInD:`nIL>X\s6D!'^M%D:D'R7M7H(Po2UF%:9=(R.lcVW_^5heAip]rmc$X#A#u"q3]r#30/"H5(30pgUFqGhp0L*"qULqg],"QY_8qCnDDe%S9rnRr+>I8%bQ$"Qpes9f@njc.2O4N"Ko30fEU=24rQa(%4l-VgC!Z`hqYoA[pAqUAH4iNL_\=]T[;Ah\)H_=H>O!i:ZWt.Ih8pW4PPmY1nnVFO%"tF=VD9VW-gQ$aKA;^.7S7UH.U3bre*cYhh=>+l8GoJu(Mou[d7dcbI'@,<5bW#O&A1tt6!:h#[+.sA$9fDakSse:d%Sns5KerX9%&44P9Y'k:'j.nhgg<T482l&TpcG[tE3]!J73_7g=<6qjiD;f=.cLti8qr#eJ9_8YmjYIQK3jd9^fXCBggBikoVC<-S3,>h+DkkBJ%%bTR&p3^gA-j1hhOlG=NV'`sZDe#7p,P+O#H=e,jIuksmpYM4/pC/L15k8t`JMoDU&\41XNBETJk%em]5J0g$4JoOkdhq1qr$mEj%LV%eCA+\OQ@HmtBZeP=)[Y^TFqn>5qOsOp3[8$GKh@E_]0LcbCc?p(@F$HCf_?_%65>>lBS(dt3"XXNDg=?L&g>!3#7U`s+=s$I*%MOXKO7gb']X=Q$nB=YF+$@V5a@_q-A!I7Md#3I08@M'OTkK(#^DkLmumVTD$'M:#2H92O05Y</L_M4WYO_+lXB;rSN$,LM#5L-XQ%BJCEKUenqj(0?\R5[^tY$*^7_fQDO*@#`#7Z`m..Fjg,85Y_J;reB&PUo)E8\-E_fq]l.bDbIIJ+82/=P\-;hj@\7bO$lBD]^L,c%Ke2^Fdu[ZN8jkgbjL-oUc8KG"WScLN;;8t1I7e.o[P9"l':8kJ<s%biJIT$$DgaQLjC\VHkdGL#3Q;'h>huil/;7\@@#^5P!PT%A%D"tNRDetq$oG3.Kp9kA3W%R9+Xj:X_#fRRHDqn5PJ79`5.Cm^:X,T*\d3GlM;E<.g/"C8<qhB]oM2oC*.A'5e\'_Us%VP)'4uP;F%d5)-9BAU%FgLTE-m,gL@j\JaN)*tuV-068-)eb/N/Q!(U#=:Zsc0=&5qU<L&q3Nb1$(PnfTnidTUiSfg^P_9>:@@3;7R_3.aQjd<%j,_+H,9'0!&RW8mpuO;:!CuK9h6sK?Ob*u")uXHU!R-_e?XT$iUTH.&+:ZXBm1,I&=SOeq7T0iqM"BC>rIS8\^PDiRLPLWC]i-+.%M:YVnc(EMtXgR]XbW8`R!MK*a+hrBAn_!&-H_PWhD&a_)D/<Je!WV)(F!k7UH3-WMNIZ6.][9(*#,)L^?qYqX6$N\5kVU08A+js=%ruQl%(f'):Bm4Fo[6k$fJ(l"N:;\tqD9(VuA=:\#Mm\3fJ&\t_UG=:?.5(gS2Y#EE5O.9sG)X0lDh>/]!"=l0lJijJC<m=XHQ&DA%[Y#C<o/m1X1+[aqE9\C\K*m5bMBnT/d2sT_*5_JGQ!]Y$#(+f(&W<Sh74<R16?kKfi%Wa]ASXFRY#OD;]qZMS6ma#W%1\$nQ>tmV%,2g(,D%M6dOJa)!Bk2mA)lY31aqa?jd4m.i!dN/E3j(Yo&Z2(PKdicBjan!3Y2;.?,C$$EeKe[CBQHZ>Q'&d88Y,ph=620NPE4k\%G'^P@lCcJRhIl5E*I;(hkntN]`nA,-@!.:>+rRAU8+M,,J@7$SS1K3%Y0@GM:u`*BCf4]pn`YNgfX(PWhJd[j2K0!b8(3G.78ts^%LNLFLK.eGTO,P0O`jm73Q3;H4V*X!=(pfJY&>11/#kmZ235>lKO/:`Q%&pondi[T&n,RBKftDLbBW`Ss71\@W8Vam"oO[Z-)MgL:%NcV"=8.SfW0p%*tbfG](3e[:R2Em4a_M4!h%Ep@H&`59R!2GYTS_gABo.BJnH3`4:&o`0H,FH+:3c'4%s':B$:[=r$6-e_nCm-.M%'E_6CW]W$rNOPaL5mbYG\KOZNMQ?q/qG`RenOuD-moq0pg7r,<](0UUi"p[iq@Um0A((toOuG0._:+N46587_7MVbfjK`[&MK?d]%mq<@]kD(Y0cbXOknJ"gJ1j58@H<MuibBJX!G;4c+6'(:2+)r?)cR[:_K(#tEMha`8l^8W]#<XA&7t<K#Ql[4C`/hdi7^&I8IOat2%KD$^s,D_n^Z`?jc]6nasgP]*H?ddup:@?hu#ntZf1m">kVKtC7Oe/g%%.:7+\&7`EOZPr'#V4H8%k"]7I66EmV/;Z]10t@Oj$>Ur%'$:u73h7gU6EH%l`AtST#o9B;b%;`bTpbi3d_tD1Ej%U,6JAu8*PRtgBEsKO(OQ+Gkr?@`r[d)na/:S8"R^t)iu[)6&qO$<EA)t_%q&9*jfJbtXlO*[WLe.)I)#EVJ-u\4^c;3$3U0qpR%alpR(!%pH$gWJ#m;"a(qQ/#YYDPbf_rrE6Sb1EgK4#q;S(eJ6HM%%6([]68%Bd=(B$r<,*5LVI;n)NsM`/bH*U"@">NCl]cZTMpAIdPK:^K1=t5J6:X*nDaC3MVus1.%e]`"j6QM?]q+cTG&Df>J=W.o)X<4jN+O%"JI![UZ2=r9u6FYJC!lB.C%F:)>aIU`^b>n9"K"g46a2e[k837RoiX]T!NL1]8(,BcI=rrWGssrf*A;rcVl(7(chJPS;;>L9@l[J%*)G!F*2G?g%IFXiqNVYmS]qc!ps^(YON'UqYq][;=+rZ3d.f2FCKqND7XWP;Jajip8Xm_KjtcQPp\Z)kCDd<g*s_2.c*iPJHha1h%N:;;GVN7AG=FH6XrF9t;5Pt3$Dsol;"26Sf.p;r;FKJp71=N@UfZt!7?L,4eej,Mu5]?nX=O,i1CEReTY;9W%Mhg'OS[Z;kXWg;F%"=_G's$-b&htJ;^p=nN=s.MqYhMmPC*??pHi9U18EE9O(%:^Bh$PgG3P@_PiWHI?RWr.>B]$oQN1C[,GO.X2ek4"9^T0N5SN5WUC%*-)fhTCM4YKUsQShYIfDD?$a:og[]<r22FsbF\`561665gPcE'LYlJ@Idt>_puU7[]7'_Ip=#AcnK\MCHm'mF_cKP74FN"b[Q`&+%(l$oVraPZ[EIYbrT2Li\K;rmgm?a<IpXF]O5Q->6MOsmN.D\=3);*.rr&-Y@]@04@;8rRAgaHIm)t][gQYu-q1pd++I6iAI1a1oF%#;-%B^%,2_J)Krjr'u%5e$lp=#PN@=]6cb'8P_gERf;jU(H5'udg:6aEK7@Z]mErU-Elo3PJ#AhY=e^/IV"[$VU]c^'9F8?i5@FB%k-n'WP/_cB1<jP+\j!UUlGV*hI\3#lCA\Pt^<OaRbkt'/$JehY/?%o-fn!j`G8`NX(Yt)2kT_%\\3FqaniYS=[a8A65(E=on"cSj%qT8V!*Vec)J%1l`H2IV+s(V:HR>AdF<C3/H-C<G2gRRQ&,WJLRHH%cqVu]VP"8HI0`rp]o?O3a(S,a(jI)P"BF9.^T=9^J<[Qc*J%RWi+i!s4[aBtP78fUdeQW78V^Ss>ZFJTEa>5ep2Y"%t_<)/)s6QHA4*&N^8XSYlsdOR5br[]p,>+]oRKD5WFb@$>$3[g6et?YEq0%np!M8irL.Rl/27B!ZLP.j,ZamYkr"P"d%epSq$`[q;L.r&"c&"rVZ,>+#VDPH#Se$ec5..5N*=UptN\n?!No7HhZ@PcTci'$Vc+q%q!6N#s).jlU';2I.,[>T30B4b@[p!a$t(h&S1P1%1Z&4i$dV/'%/sg@6`ZK<Y)S@:dD7*q0$`u.C]UcZjUn]s)a@"]>O,_l'AgFP%N$660Gh.,V2@GHW[YkR+BQFO"b(uh^OT\'r&d65&KHm#XPhZ+)bL9\$ATVb`%,7gWFJ.gkYjk/Zk#Y2=r7);gs85Y(?'Ao9g"or%%1`?_Z6k*eeVL`dkq^`l(=+=7e`(a(^-cVY_(i@'*=@$=QSq,?*cj(+AJf,-3D*&LpW(hA.[1L^^=;_qg^YX[_O4uS3Lk)nXL5kUd%jJPQ]Ne"CcFI5U!9l8XX$jg;]&X`H$ij\[ccR.\t;RQ']2"kGmrUu8L,ZPKXg_M2II!L9@F"ksOBo@M$aH!V=T?Xp?J[#?d2W:tO%Lu3_'ik,=HdJ"h=TRRD:I1m>$C2t7+!DU]rTE<T"YR%S+$&6`ToR,E]J\JJX>Xs#ID1fah"78]!<"ha*V$6UiU*"og:(?!m3-3hp%<db#0Y+Pfg)(7bII%bh'-mH!1C!pueR^eD'.)$!QL"DM"B7kFo$36JjG]])J_cZ2sU,kL,c8)nT&=S3dNZ5@B2t37oH5?l0/\cam%UpuP2&UGPl[t>u?Hccr->%bApqL&q?#!,!&pHuS*It-4d4Fjj`MW;N"B.OYE#0oVL)q^u6q9TiN5VI2SC=o'nSjd`no7d4^PIPlW%:#]c$2a$2`KS)4Lj,X:bB*Khco9fpZiW5"TnhtSE'-`"Z![1'J>K_9r2Nem`(fDh?3Ils:^c2;r)C$5'_o4rt(sK1-Ku[SK@PZ@A%UO(SkhBPdU[>8*kr^4#U?!FcFT@R>-l[Hn4J9rZ\NX)EZm^3#;EcR"[(NX5&E*BUh;[e$m:^=3Vh!flI2[Jh!4M&6M/2ZELm!]&3%6hM;8l"nq#kc;12]Xn\/fjIM&m"pT$EJV!^5SZp2"r7^RKg>Q1WCojTf@7ecD$.'N!;+e_G#t;JaIYh]gfYR(qN]kj32_AKXMNAq%9n^Jt%CrccR=V<R6QhuC32QgBNJNec92$XbJjUBs4j9]RQ2&_NA._.rliZOG:p!%`d.G<\%Z<:Ui,Tj>Z67.!6^qXQA&G+$;r5mB%"^9:*Ai(^j6Fn^i,D)K)3>sZQ^2AV1n^Ki/>o'abVIk-QN.cW6;;F`hgJg"/`g=*TLZQ9\7QZ.,&Mc)?*NQgcq$\]%n5c,/C'J38%IL0247-Bo.#T4U"/M@=@_W#ILVs'oWhMOf'YEB&mNJc<hG]s5j^g@&Os#YBbh]9\8&HdZK&1JOTO=SUqqpdqD=i?O=9ooii@&/J>%;PnLN8rt2T(lA/FWb#6LeO#b]J)kOhD;XkB6mi+Ho4^.#1B,=<M`k=.1a/lSHZ0VA#.QbQ/2\#2F)638,5V]U<$:I]RuL/IYaRF3%50?8-j+p:*i5'iZi$MhG![Ggu#Is&L-J3sQ+VO)Vi:*VPNQm@!k<Q9<5#3F+HT"Z!8n":sFt/]hS;G.cjLTd>;&6f@\=`s7`$-OI%NT^3!cD_W>%Pc`B5!U9BAC,<),brp#I;qUE5CU!W`&eVqW<Du\]FQrSj6dTk'6X#/G#DiMgVJaaBZRF+J=\me#ZlpAOnKC\qi:3X%=qo1'ge%e-aDO8_Z-?b4T(T<L)+8:"2#)gAfq902S32"X!q54fM#2!A9ATfG&<.hA4L!PToYD!?Z^t#@&?W<I8;W,X).QhTIaK!*%f)O,\^A8Psj#`mH4$ib-\NB?Y9=.'Ymic'XE[Pr<MDEP'S]UdfoSk5QbRuoqFgUVC!Gc"MZXJkigG$BV1,eFiY!.:jC%NICkkf[#%T-n%]<u.mSaS@.*po0@`JY@$CK2F>Z5j0ZIjW,cKT2<WA:Y)-NKjq9B8o<sI/aJa86]^'IN>pSn?9u3S5t=DQ<C7bue73DV^4&.E%=rl"@4CaperlTB+)0?mD-@diWi]_>`C$lgY,ETj$d/MN11-DtR@aIq.Qq^b&'8J6b%:N2S*=3=WW;Xo!^aG$F;`5id[ZcD=gI-Z6%WFRb<!/5U,4U^*J]uq,mcPU=Nb&b+aLH%E]1c)ZuT_ifSB8Nj0i=s9fXGs2"Oa)gPr)&84rl.C3:<9h?)sk"aZ`coH5Wf(d1MLXh%A0jW"X9].Wag;X@TIb"XjCS!^#3eg4hP2Es!DBO\fajEY,"e4Y%1ujY&rmpLd2[GamF1m$.)n%6!+(aL`N`";U_,AtPf]&<F;!_!%&^Q#M1ct=fP;OP9f>oI:0ea]0d(e#-C#(L%#A;\@NpE7/")1.gf1WD(+qog5R:Aa"$u:6LiJC&YnZB#:GU+F@U9/)/.EM*2`-\tS%O1/t-:4IeXeXI#Bjs4F.LoL?,"/]*s<io6,0p2^"#U??M&ntuXXeLoKEO@:2eT&!V<[@*nWusN:;'C*fD.!c*R;b#F;@tFb68W^3%)iSWY?:Z(((^l*uW&):+6QGM$@1+WVG;I+%X?-3<Ymp@KJ_:rO$_U7b&[o@f@YZ=Y"gq/bEK./p1X3AR#`HoKbU\>uFR$%A().iS%Y7S-:<lS8[&@MUfN,ai]^`n%$fE#KEo8\T3"FR\>QQ(S]]1AF+28YY-UhrBLU@7FC>0mnf+fu4/GToB4CBN9ilAVpn.I`9HHu7g8%<^5V[;5'b[COm&7C=hYVg.rn?"1kr&[@UpDb3s5B5[L4$)^giD&RF-(f"B"(&1`rMj(ids5aE/!K)R1q1ug+M>E/5iHptGI-o8_@%.h_!#Yn1>Gr<?bIRn/`UN.n\53._0@$\UD.r!aLt^`M!`'?5WeLG[B\`kkgdRk"]%KlnQ.`IP3IK&l3*(Br^`A**u,5s#=)IYG(@%T*]L,g"KfcEOI2Ts&M)eRc%H;N3gm^U<[tufp[ZU]]1R,QP8=ja4W@%+d!dZU&S*C3*RVu.Po@N$9f#kD2hBb[)1MiDPfl*cF,A=%>t;rg#/lH41X:TH5ZA)JZ_143i04gdPA(YO'L>?2(-4^Ig(@s`ceo6Eac<^+11r($i+s?7:,U<V$QB5Q@)CST#Iq<G3"+Zo3<7W<%\+q4bpOKSX+Ge=GEOLF$)*Hh.TH![%mc*0:IFMN^/Bh6Y7I1@od=t.jY2a=RrIp-8!;*kK'k[Q;:`A[K$S[oFRSXb]ePfaN()Al6%4P;d<_I/'k.`qfHDfHQ.Q"\<jZX>3OUd)&aRBe^H(!a[`!io?:B*!f3h]pF@=gRt1_:_H[V\@?ZhnG<XqMqn*K<C;N,e:EO=0RK:%%2!]9Qe)ZW$W)eG+0cQIffM-$.t%<>6R&r?3*>2fCdfA99527D!1JJ:+CrFpajj2.M??Cejp;athX0@am;kZg/thh\Z9MMDn_6Hj%<X<["/kfaH"sU?;,R$=1bg&>5E`liaT>ni-WEN7oeIkMD,W5m.UK9gn.-P2pW"fM?ns"rP>S<.#=b+2i_T-4(I)B@NXW0Bo^L?:,%6Q2K$-4#JR63%ZMZ.uS#dd7Amh7Dn)g-S+@2Kb<U>>,dPJ^rqHmO_qIUq!B??WHj/IA9IIk,pu"7PT;Q'JbgBZB.bb!ZJ=EK@Cjn%VVheu<A8W\SZU-T3g"L,87jpPLCrk3(4="-b/U@e`[DIS.nbRaWQ8)<6@^Jq#$@pigEFu_e4iau$#nt0Jn8lQ?,MH&NtERaE3G8(%n0*H*"j:ukcVXo//>U^O7:cjmISjs4KN9Ao$=VUsma%#LZCOGA"UcrV6q)@\Ac<Z'rIeN$``"8m\:j%[DRP;L6#gV/S3)IeBrXsB%Nm_ChdDpNZF'iU%JSE@uB!k)QVNL*/=3^$70V2E"#_f<qM+PqHXk"Q-]H(/5'lS'gBG)>Y2SWm`FYVI0efip7i"ro1GsC.MN2&A_%K%j.']J8H72?D;_H29_AXb]G6fS[4S(EPLOGkO,[n(Zd4`1REY_'\H_HJ44H^)'!DC]gPcJZAtek2JGT88-8IO>]PK%R1CB4a9'2%W)hgq=W.s@"%M0-C)_5)FE6`]3A$sV]-2Ye8dCn#7Tor@.d-2Ca>rF(#UDV=`sd85<3kki&5)X)Cq)#9X6&`\J]b8UVM=J_,5VEQ%I:@`aWC.F)R-b9YOIKsi(`hA?)\<pBqf+7>&EtEO`uE1O;WL,R1J]q[Pb,BoD:1\2VDW9)_I8-;m$P5:>Yd7t8:ek8\l"."GW_bM%`%+41Ff"ORF,(^ij:H\pJR\]!T+=PgW07nQTp(O!#*:0o)r-aI1$jq:L.m#pa^sfdL.4I>@R*G%Z6Q,^"K*u]H9p,Z`(nEK7*C^D%BH`SJQ4.Df/W$$S+rIISG7Q^L)I98LTH>Q+C-+?_i@-sFk$'OJ_1oe7a\X<3*#^"I!PK^8mPs'6kfp%5Dc-b,q(0$6ZI0`GI;0_>%cO1HRQGeXb7-U1?^5tR0g-PijcUK-kfSb\$JLEc\>I^A&#!]:XrH9;F+A(<i;&KD&T44%nR;@`eGXs3!)\o;"%ca@j]1#):4@T=,%WV!,@CZu`s;JI!LHAa8(#bjfMFTX#aMFQ;r8cAYn]sJ-W$4H"pO[ZNGAhlt8:\K1WTn[=`k''YS;-W_%Llp,KgbRNEW8C&q-B&0$%(+EM4PXJ<Y?n`c*1!sC5n`8,9a:4Tl!ZR/9C''NSNf1!q]F@tQeu#sadqTBK6:h+PrLb4TJK)HR%I6Z(STmsV1*4hb3K(Uh$2cFr%@qcUufOG)n>nt*cDbu"9>LCP<[QU/MARH]m0c-o!*]5(f63aX]JWXI'2.JuSHG0uT%*;`4.;W4iL_8(S)fu-qq`5@AJ?GKT/S$QU%[1W;f"@SY_L-S6/i%t3R'@7[sLgJ`,%O9o&Bm:"Y_uuI-LdaTDDGi^,NU;WSDp+YKR\uj%JGsC@?=sVKO'u+Ep1]i":(7ddn0Kn#%7Z@:_]Ya%O@(_G&,M4\]D0fuj"1rtn6mjJR3(cLF)t+bFi0ct?q?@sVI7Bd!Ckt;2G7[?[C>^H(;qm$:jOOjpG@Aq!D.rk\6?[\&%JC\+4R<0<6MY,"^V1o&3"a.asR^700=#(r1G#VF\Df+.OINBosb+-!\`<8a.I@,dTB*.jq"Wu=e0[O;``3?W^76kUe+$?VY7!gnu%SAO^h,I9`WjH76]Kiq`$mKm]27q\/Q17,jAOq;/e]6"Q'/Kt;n6N+0))'Yn$,JKr,`:h4O.W8In^h8TBAL@Js@=pFAo)6eDJ:DuV%4E)KR&ZR>7qGK;mV=A]uYQgtd2d6MiDkT$7U5T<#IHmV'FMgk#`>OR!VQ_d7G,CEac0]oV+regY+F8Ls](+A^$jVk!M?2@M+b)mk%BaJ0P_!)$2Y%UoK9U&XpS2Cq/_bps]r/Be^2`aIG5$3,m-rX?IY(2bJCoqQuM=#7)$6JDBQiImrQ7*qUgG#!lK1Yh]_5mGBpe)MP%$N[VLM3T_OE51=Q7[!F$?:PoPSG3^*"jfNi%Oo?DXW(J2KRF047$`XgLJ:UuZ6gq%-2=Et2hVPMdiV/U!sQ*&4!$?eFE.OlJ'^!t%5`\YRdaYR@E@"0qJ4Z::^n.-B"r\=M-TVUUam3Fu"<Dh2i2EVl,^']TLY@"5i+7OuA83'>A&P\RF_Lht'(5tN9Y&:_$unMMeG@69%@a+@s1^Q0-C23"K_BGSY/)iQg]:kStn:5#X84_-')A8-`Xg"u2(m`*]do=:[%sA@u>#Qk,]oFX:`HuT;6TqrC7JDEU:R4njKq29+%nE_A"iK?(p*Y]XE/[)A%9i8(q[^Z;K9j6n7+O$l:_V=7HFst`:UF$%mYmS<t9R@HgQ&RQs/qM\TI;!l8Y&0/-H.@S'J<Vk@ZJ*+;%5':a`_MR'REnhPVS57ihg>?jl!f+$S^]OKNe.ukCNr9MK'ZhZ,7j+XiA(,"sW?UeR+B[ABX<U3V;OZ_tG%%*4I0/>7#Gm$2'b066%jFb>]nnG0.:!t\n@1kZq);:s)>)En6m#GDiCdE^h*QF2SRoG$uZN.fke@)VAg%%%ZQ%WaR+nE#N])gYQg<Q46P9@UC5k%c%m"H<N%j\LL;E&m]]<nJl_+eETiJmegBpq`*7a[.PQ"EFQ1:t%Z2#'k0oWRHFWUp+'IMB_c%#n*>0P1:UOS5WMV[P*$-lWG'<YQI+S^m[!*%)1@p%n?B\dF(..OAPeC*dcPhq40l(*[K5&;*&OaiVkCJ8W_)OZ-7tFVZ3BE=_GF%r-e-^DTFPjS4Nj]+dS?Rr+5@Q@eJoT,TX&*>%+=;)J*8Ha/^Qa"_A@;L(G2"R\(/Q(;5Upp:qY'Su'b#lJrE0QG+m[]n#<l!$!*71=ml<'5QrbG=QtB\>9HJFX;Y!T-^t1Pld`8*U%r,t,C6.I7[Z$L/[<@uDP#<j@GkI/Q]r:(Z9,4kKiYVX^`@lb>[i$L3R,4&onJI'k0_C?n:Za^O0B>M\fK%q[<9ZCK78f>_PfTLa!%5_9Zs*<#hFgPG7UIkS/\C.OrV#Fkp"5rL%K8g2X0UIfG,(\UtDSN9&d+G`k.h=(5aq6q#W_f%fL%R6#6WMW?K((CmqeFp0hdstmN%AaeobRRldR8o^@4\OpTQi%0EJ'"C"i6:f2[>G^YPqkub,#>a#q1F4KeRXM6?Jo``Q^Wc1I9`RLTjS#1+h&HB3h_4_,P.V'!YebUB%G*QkV.kqL(jIgW>ojs7!%t$NU$0r+j^N4&KX'T0$;srCMDch6CG-m+2])]hPhm.!Q[7DFfONZl-Ph:Qsig'd7gUEXns.d"5BKljg%^C&A-#tM<SZ>-*8Y28$A>k8$`pA/geF!<?qm_%CNo*V!#MEEipA%YrobKW6!h<]'_RpAWA2cfLZl9gAA*s+LA8[Pa_'c_$Dh!/L(%0fSu.E:Y0Z\$shf])m-RTL$*$&%?_$B"-N]6D`(Fk'?q^#9,%^iFuO!a'81T%,dXeM,U.:3rtVNN$2qgD+AZa`MoaB2INdu_:"E9%$gB2taX:p/&GZkHZe,+6QMiR%._=LlNGH]fm^+6CJ/hhr46&ej`J+Y?p'NW%No9Ne-5MHm[qG'E#QcYBhqmG#pm;BJ)bB9;O0eBc%^8b4Z<Vr';,uG;%_jLMOg&[e:5blFpBgl/c3,l=7i#"oc8AU+J*1c1&3&hBqf]Sc7,a.I8!2Dgt\$i7eUAcr<68^4F-P$ShJif[d%0Ltoj>512l0,&SEAT(H7NB1,H(_NPc0dbY\#G"]L"qBPG*<-\424B.-J9RpfGX\CB*&Q*o^=c#.B8*W?]hC(I0B"I5W]-I[.RYuj%Au;VS9/"'7P$q.sMtrbrFBs*`A>-Sq(@Q)o?k<C9n$$>KOe`eIeJ,P!hE^oBX-!f1GuI/`Jmn1H66WEYN'KhIi\^!/1/i^!G"ptn%e<Ar1on`o09.DK&9*\iXY_A>KPs]a<o99or6al!J"rWCk,>u@%7!sF8CTX>GX;G-^(CSoe[c)K3TY8U_7:N`iMSBkkJdB7kD2e(7%Ufe^=+tGuQWk"-Dqr!mBAaod@;tFNnaAZf%UFDX(?sZN!B!FORVZG[,-bjG8##<Fom`b)N_26^r?.h@\3.Wa[\@%*G-ST]c]D)$8%hDCj0P.eih0(a.MC>:9VE:+DS1c+'TFh:f/23E8=\Z@<%q,EOABNZ\^9nHbb^;@.i3?$$qEsb$UEV:G8S_Fp[R[uF*N$`bLG?$-"%FL)n=/m(3Gg$a8[3ASd8KsGr]Ju+I?YXGAVd1b0=?JeR67QbX,@`&=&+-LLkGWCLqV/Uh;2X!m."r5IIN[%CDh]#PU[aR/E5jA?>%W_6O'D2XO5kK+DO49Gue;c!]>XAPmo\IOAM,Ya8mc7UQO1LG5D;Dj%8nMEA^Pe#De`^X/lGFS_G%bRmsB^7Vn(jhNqA.oLj5rpF6%\H,Ah?_)RrUNk,lLm]Na"&ufU=FpRI<1+J&;=P;<7_lf`b8SU@UB!-eEs<I4PfU&f/:Hk*Td-e`D;'_4Php/BN0Wai$D\.=;m`N@%TqFG-.Z1Aq#9om7#6OVa:CerkSA`!@,0DS@hEq^9:D!R#hH'B&IP(^GVrW.:/Z%Fii0t0XEZbG1akTL!&(m3W=V2dQR=qkuf#1)%%@pg+i@H0[,1`&'c3]o&lYIW/uJ:\ijUqt50WlX-(J[?ls@0KDd\LlHI,`G9@mD*]A,?2_K==Z.TQ".#;eI5Q'TN]SU#,A?a[0)2\%EU:TU=rPGlV5DcHdAYP0*cTBU(!_=ucUsRu[LF3(1Lf>D*3jYg$\h"L1ea/qmKFFn'p@/BNUp]K?agIfQ?bDM:H9\%3u?,KaE^Ks%0dJ`^keRNEk16ksbsZ3W`cuW`j?3$91\I3P6Kt^4?QIInGm#AjSA7a44k#%?.YI&#%VlF>,.K)s<SO=>F$CHFi-9u50Y)Lhk7,p5%/!=aB:8S%OSmhf3T6QAZhkm^l.YN(KfB4R?N6/+V(Qa9^L5+.pArH%`j%6D#@64)YcL'u7#TFPQmlUg39OLOS`lWnl>p]%QP3``_%7HD5hm&Uig/06a#>fpE0cgM#/&oTj`A&kA$/,3<oIQ\/ORJNRk$5b6K!hP!:R38BJE?&Z,*/Q$C%Fncn9$b")Zo-os3VR9EjK1lO%kE9SKGd+VkG0;jc$j%D]?inMf%@n"#.U9cr!h><p?7S%bVH*!g*Flm)TC]^lCh<Y,44T\@N!Z\ZP$#2)`kVV:*+O^@__="_f/!UC%#$tnsB+0C536PU"YlQi0fE@KX)`m@BL-h;$o8HZs*bE6J_+3I`1<u6gk8C&QTK(3K)U+Z_hSg+BhmG/<+R*50%^1VW6RQUK*[=GN%$jbZSWO.sKN<-RHk-AaVILUlc6Fd<Y8EC%pVhbn!Aa5.r@T&+$eoZ'8GFAqk2k2Fl;t%l:]iUF>V"@L+Wi`A^G^`?%:?Fh8cSj)3%'):H_38AJ)9u)53!HJ@Q3Z6=:BOY3.&WGo?"I?C)E]Sj;'Sfa9iOerC%s(QV=LC$QN^!"GT`5:%Scb]<Q2fD(pIa;d'.5R:44c9=%r>>FsR+:W;<#$5DRIA!0,.HRDF>&U.*/7hCJNZ\9hg$G63.Zd]";OQEY$/?]l:>9di`#qpP+T;=@H2P1G66@SH%C.A)AGd\a#*AE%Fi1(PP]W_+W&7uQ/p'H8J?`;+fIm6Pl#%KW#jd27U&80r']DSq!.cUhl"gC19luh9(4\-]f&noXJ[f#VmJt_lG47)87mW"e!J%`7%38mPkN`*a>p]]SZ,\)M9p#HoG@dOF@0RO)rDSTQr3HX0:#boMC4U,:(:n69<XMh>a1M5MPlWk!m93IIV[U$[Ig+`\PMZ=ThnOK%$%08m84e-ge+6t)g31RP-coLe@H#PpH@@%an`R-?BO!M?Me_=PUWe$Dk]/r*H5^adpop_\S";3PL+*4ZlbKT;lK]@!XV3#dCc@5if2%@"_k>Bt#1X37dBHW\O9Hbf_iPFd2#s4N)66pf&1Br4WUEk$ZuO_F;\Q@K-/$)d)qH*`s;-=3,MnHMR[Qlk/['kj$)W+^S<D-^JNP%.XO(*j+p%MX71K:P@R5eH\b&>Z38BDi^],dF([Nqh4.UD*HHJ\oC'CZ,GI/q7WN8kgDq+5fP48?*HE9X(c^&/\J450;[miCM8ceE%OVHu?%/as(=^b<mYBWEC;J_'lV`u[P0^0l-ba]S^K@*W,]h9hfKICPA:m!4cCQ]\-]8Mm6pKk7#RY]]rmOgORP#Q=L"Gs/U6NTnG%MWb3p.pVfNnsEpeJ)#Ip^4@)$8YTZMS:9?lCa#>n77&B.dbcCPM6RKecqU2eBQmoqkp_(O-@(?M>\ob$Q)'Y+<R<N]Akjl71`]>X%9Y_mea<!X*nr\nY,/k8Xo86VYj`kC."uC";[d'S4'8imk78Ii>$[>)`K.)!Vq[/HnN'tB-oI7mtK!ukD"`_mm1a[:Hc=A6r'C>Tk%(ViYM*e67d>\MX+7-9=Pp`s8D49f9;D<rAJ(:3O5,0%kD%ZhN/`<S"kJCk3bM9ePRM=RX9Qj/.LSFGU0U_82AM4+P,($U!/&LiHe%mL4"fKI>NkRm.YY`di<-lm,_dA,l_(mMHpjp.GJPi7(?:Ofjq!CtSi9>Y'8I`3V[!g-G`8,h5/uF!:ad@K`)4+;.I2Lm5Fkeq!(,%5mO[c,%:uO)g!naANfj!32s:h[)T8I:AZXc.U*gfE(HINa@U,+7#g=/BMIJHOEq!gZ^GZnM+(:fAks]G\8XD/XPk1&6C"?-:u/Pc%X,^NRKEe4\TEJ)>&NGJ!jIrbSjtNh@]jt;s*6=(.S5oYP!7j(:I?<[pN[KX6-ms&.!D^ptlF7uD01#b>'K1Q2n><.,>,!>^gR\W<%38[nK@Pf)=3HpIJ*Y]K$KXhAP/m1qT]f-oF3H\l^K-J4QV0L^C:]QU*q+h5a:@,;I*Y^VSe_]hhaH1;0GQ)PXA?[\!?`&H""%d)R%7LtBHXU8=N6'6^nX.>.Z$33[e!^.r>[Ku2rK*&hH-P?7>TV)db)\3:++V-=M'JNWm["0L=,)B46#6dd$7IEkT7E3DROjNlrTP69/%3[cbZNM,42nXok9\f6\8"TUR@8e29E!V+&G%LU,jZj7-H"^tH!%uU&_iEC,A:h5A12<)cuF&fHmYIM'h6'9!#6#00Y5looD[#5HP%>VYcpHr/nT(Wn].6'20mQ!<4"!`I3=](P$T0T_@0g@[a?0SCrM#6bh.%W6Dc=JO%=nXtC@1g*GHa['@@P-]U65e90D;T==jkS<9o%km%B>,$4L%#DFm3X)1$K?j;]+*Y/SX8d8-U-kN>TZ5s\[js\?#:]QT@U@a'^@sp'Rf*@!A2JtW*0XY@@o0Ldd+ArRAl(Gh&K^46l%B3*/7a['>eAM.7/'EDb;mK\GgN3_J0dEo\\+sOWO6JqtZ_a-Se-!VQ7'S(p+@Ae`%U[lHll(EQcQKWZM*Yc/(Oh(:\aI'DN3[S7X%jVfGgY2m+KS-E4=k`gusQ-@(leZR72nDMT4_YIaGF!ipDIG]"3U(b6eitI-@nCOE9l#5r\Esg&qXN.'nLF36]D1[4V*l]XASd?U%%hX("3kc')g586<M2ILV8?GH1Z(ctl]7_tIM+D3k,\XU2G\Fpi98J2_::+egt8Kc5BOZ&B&>-r-Wj7Li:#P&.rK,+0)".#nViFSG*%=3^nX+SFJR@V@jKK(cdDRWnWb7QGFM$]`XkB$e7rJW%ZV+L\L*<AZA2#C\K+!D!W7Ajth22RDsolEp_>"Ob*nI(KDPU!qt34jW[Q%0EtFir?I'*j"+lIS#L\B5@^3Y(m7@..e!HhB.ttP!+Vs=>0r3\p+EK`+2H^24g^J1Aa"7>lJh8_Dc^=8m."Yu"ic*&gL^;=Tl'hb%U"@Q=]\B&5`_,/*P?>X_<_d%*-I]rW^7_F&&l4+npqXn8CfbJK`$LDVNkiC(>O_"eg_"mX=l0:u^rGasI)OC?J*t\LAnp2ice(9s%n;B<-3qH$X<=EXu7.P[1)'%2BCeM,A41":+p%b(OO7t`:N]gGVGpM>rEB"<>RDAD%+Y-`j._Y^eFB8'W4mIIbnB+83[c2pF*UA=^%H?C*!P6VgsT']*=SUk2)$<"lY"D:f3"5uDZ]]B</`$;P!&O:M$p=ODM&<_TAoELJQA-+g]*C')pSEn`X-W*SI>e>,OUPt-mSOlRC%:mX4?:%mKe'Q2G%P1r=/3NgNk8Z&&0@,98O44&!0?*&Gfe[FS8=M,oYAY<^V,GjRngJU=[PkV!GB;OssrDR9=aEqK5>9rC:Z's?]%!oap:#YZi1bjrr)<SLP^=CU7;SnT'n$&[S\"=02>Tr_MjgDMEWmpJg<7urS0<QT!m.ohHIJF@_mV83AUD&k.gaLJX4fqAZSW)p9g%nOjH_O?G1>W_)kEYRj`!*HZ7$%fe&NKVo.=+m,IrW.P*#&eNU%`GGW/>\$l%lK"f0h,27:p28ReAD8kW[?1p;HEDb9,4n%=i0t%3%`[reU93I\$\.spk()N%!+O3KElck?[OJR("e1qZ-,)'/HTGJE2!?+$DohM9nq*878f'rmcY95X]3P5OF9MRB\g;oS]_?EA^DPD8(%$?Bt)l/]$JYjbj2>$nW^3+XNBW+;KS9OjGh#-5'$W$-^';u`QF'ui&85.1)F$]]7D,1'pR^+BgO%&=@a-%_T?=tMNboSWGlpf5#K%,%N%;H,J#60>WS-nq>mhF97Wa@9=McOqo#(:^j]S=f8L7>/Bh\b[*iD@[e6H99N__d1+<K8TK,m^-G>&/kHbAm*ZoA88BC_,@F&<%)(WHqr/Lk>rm7mDY9QlF?@hdP6ea^=oe8tU2=`H=H5#0"oAZ+#,jR;jKlVbF.")e10SiIZh<61nfEL=i"fV[=)qT%4JpCcpYi?.$%B]>hKl3[,kr0\%"#"f,f7#Fg!CQ1Snbih$GZ.a7hi%P5ZmA.*-D,N$eg/$\K<C-.TWlCL]RNdBD-1D^adH;*t)EW5YK>fhYK^7ok%&$%uHr+7Q__E]t@nrYf:%@jU=HfZ+^@4=edPlY.%m9)YsfEQa2/a)\d2<`sD"\^(X"eLe8p.SAj"Ot,T<%N*N@g!tX/Y>J:aTse(%_$d+_PkC?%S@_aO3\P#?*ns#]<6(c^,f*g2+&"WNm8DELPMdLBS`Eb4"\o=4<U;$-p@D\rSgls$3J%]nFF_9f.'Gf8f(\(&-6&S-%Za1H(6)dqZ;E#^[D$s:i_)7eeO*([i#:cl"&Yhg:hL*<LY`.j+X)kR3p/b;+)<ECUHD=;&^FgX[jZ_1=)@U@HF\\H5GQLQW4Ja5*%hEY3;9&',Y#1)>^(G?$hNB=](n,"7ZJ<QsIAct)]KU36o..j7\gb551/4HcFN^k_BSLG6Bc$n9B6WB[.s4`P2s&IKsI\ub02q!1&%l$kpA%%J`*:J?gBL@[PW&G!O:@13'\"i:XpI:IXHe3>p9P!F%PlQ=V-.)LdOk$4o[9YcC`?,Z!cbaN_*5@?AYp;'6&KP*lLERD=T%37Y5>P:MNbHkXGQ>:=ZC!.nY6%dJh:3crq:huG`RWG3NR(8McB#5nZc:pghe`4<#8'[R2(9@s6L,3c1Y^os"[m7,!0+Jd<*YR9"4%A)OG<=LBIR!s"$D6N)O\_oHs!6d;[?7IkJO7GEL.!n&(6l3Dn2X+K"(KZQpDiX]TNCfatc7tAA]^JY#=frCESp7(e$:c/dm:<L#@%3r5]X-hAf+#R7Fh&49["DF(8nEuc)G[<Yh>Ld[0!nJbLZ8:eiYBjq8h(ct?n?RfGSf?KhPdqgt.S>:D2)C'mMY(EUQ[]"dKildg5%Ihj]kB_4AiWus/(YOeVc.Rai_BbeX)Q[3P0%SfnhPuJ;m&X,kBO3>Ta_4ZCA!.IdCJmO#Ndr6&(&Vul(T0%LEYbI<QMWup3jE!$X%/-;mCeYn,!XLCio7"`G?)H&ZJe<LT*[1,BrhX-NVgD;'qU;k9EDN7L40?HceB:DAA,&26.[d8X:&sK,($!"><`@,`KlLkM<abWWC%?;R_m0O9?sS?W>6EOYGm%rEgeBhc9mB7]P\?.=J+&4m!6+XEFDb,N\'8Lf32(':n8eHj1HhD1I_?j`c[D<`;bk>F%)r"o[9a&-G'%QNU?O+cAg/@"FZK!i@,P<ej0:*2#Kr&S4sH78`Os8a8Q<KO?C!\ZJq^4]3s@!D*l[)@IpMD_-<%+2D:H1qi*8`1prFK(;:a@0U\9%eC^_FWoGR(9/&$d#Y**q^OTTpMO"j)0/0pF5h3/_SF^'-$DE4mal]$MXM]bnGRaqK"q.>Jn=n![P)Clg'L\)BV1Z%T<bm?7p+2X@%<X)@8jD@[tf"mC,mn2M*MR4%%/0qHlOojOGF<Nqi6eeQuF.gV\Fp#Z&`mTEg/*4.15'Pce3f0fXck#>*gkdsFZ_WNt2^f6:(dsW4%TB3W7R2MNH@0!+bKAB\</X=/A[VR'>]+3>9Tm399/Z3uk;6c`FUfGQ+V$u6;g8udgbL,Ym<eZ41=,!Gu<QGYp:kcQ8"SR(W9&8$p%N;A\*;k$\5AgU9'AQ1<<5Jf7!7>QWQ4A$i^pGF^10WJG+$+t%aG/6/"QU?@[[5u_%CN]3^<bDf+:3O!*"TI6iHDS;HjU$efWF3A:%%-;oV:b"-k4YNd3E]Y<g0<S<l0JgJk.Ok,nXjT?^TqUWsWIuU8:*7M?GjQet+$SXNPGRl2_&K-tPdVX7VomAHQ<"UXZ0k5nb'ILp%7f.&r.q$3q5P"_c's;#OgtIgIR;C-jOIF9Dc-f3anZe6Qo`ugYGF!J1_h+k>D`;'_i?dF5iXQ(FZ-L6>)_Cg/'"ZKQ0Bj_ZOCE3#%2)/u`D&W^S5cNg+1B9^)8?m5M6%&=CS"YKU^B\.<]8qUY+-Q^6+!)]Dm-&]QKS(A;1n<#T&9Z.BekE4g>-`'g'+sm;UtE'WO?fT$%$!3.pZ]@_fqi:(q;35S_HgthCH3O^sD>e/QCU@$r)n\aPB[BAK"6^dh^$Y%\j5gXULJTa&`1>;RaGWj0k^B6neEEeUZLe.j._*B:%U&K'(IY&0A[.0A1G/pXU2hHK2!s`0bq1N261&,>_:.5OmDZ.PO4NH;O!`/lXDJ6=8Z>CWPD/3P0[HUMkh@cJX(d-rTN,!G>#sgdl%78hfZ3Uqn=,BeZ9KV!?(`<!V\?XJhmS[c,e6Vi<%RG7\[Hd$B^1\GVi:Ft*o*I\ee9,ti3SH)H;d+=1FH]5eY-FN$B6N4NsOA<`;%me>ka8UT)QG\*N$o_ec&1its%7[!+U`>S=gGU!UG#I=qi$>23f`Of>QE7Nr[8l.O\DPA!NE$-eI<%(W*@+'mD6,FUb\JaX9Q'h3+%(1MG.^S7/1&1Qt.4)h8@A[(7BZKrmgBm8qL<N#DTGt:lLk_W+FkLl>"">G)`of:KPe!W%EjnuuS8o?`kGm*'AZT8i%+W]7k[NAKI%XK<-,4.j]X.uJJ%;qi#HlEm16rD8.Bb'BL]I[Q4^fo7J(\7a)t!XffC,p[m!GD6-WSC%HT/uj*7\as$*P:k1o)-D"9RZAtfY@c_f%b*^q\F,*m#T*J+HC#$tKF/C,OBAcQIGi3/>-8AXL@uHh0O0o?F]e-++Z^UA<l7/Ose'+TQ<Z(Z.@H2OVIf^+\d!)(Dg,gO(PWpk[%fVDYJd:JiERbFN3]*&9#`VHFDX>BrXX;[aO`$FTSbA%Thau6M%Y,bi)kqXC$WZ!f&Mk/p(*jf.Gg3FpabsH`SM)S?%bQQ=5]nHm-%%p4!A[QDhFj"iXMJnN)9%SkdaGCF6&?2*hUgZ.pD2/a`""2:dONS+K]N"8Y0(:)M2ll?!1hQfHTT#3uum(iAA$AG[eds1)En5BMn%7iK*2+]u5j4CtF)Rj!sprk&,h].9X+&-]`(]9X0L4$QU0b!K8!>T]l)PL>S_JeUZp%mp"tn"k6^Q4I6K+`"W$E7U.Jf.a"/)D^o7%YBuE,bY6T-.(`^c3t=5!l&[cV:2WJ;E)d87ZDM*sF`QZ1R\]NF`fu:i]gl!\8sG)YH=9/Q\8tV"4BN#$K,=4bk!;\T*Gi:Y+(9UF%kE$DqF=U&XeUT$HcB8s]fM(qLPD[pM@&e:-q0Sq"Ge\]kU+m3h?oD'\N`e`lLmFdl.H6mU!OK%lR503Hc2K+dl^+7;fu,^<;U`l<%Sf#U,E3WtjnR<;e:1;lq.<dN@"IANELu#ac@\<&Uah?NBK7>7GFcFaP`'7#g^Y03fAU174J'$`G4BI[M?_8`8O7+D$<Z@+*\#.(V%45bSYN'5UgK%55L",iJ%D:dYu%dNnB]:_CdC&c_9R7#m.$g<KucW]3C60aBKie__4<#S;"B,4.m`Sd4#Qp[Tc7#K'=j!VWr$4I<W%OuX'&$1R^^fT>GXG60n@'&k$m,cfT%O0@nkG7"ae$c0sgDAGU"CSV\"Y)krcnG)%3U?CP1?Ho.@j*,KYr%>'k6gfG50k\Rde\sZU%X#CkY]rX$/;X\RLUO_ST^Yn593\p7,*J/'i_g6tVHuc8QI6u)d-bTRm-#YX9jJgB4+oG%TIl!u;499?p$R&]bn+m7CK$c_T9+@OG%MIOGG_2.KlJ>5m6.55RiqB(X6CMi5JCL1GLV5`Sl-XWkf!fLFL_80;Q;so/`.7\_!4T;>2>">I5#;+[D.BD_SKA0A2=.S;<R3%QH%AHl0cq>HE)+OEaA4*F77*M_mH!15%m&?Qb\"#t<J(]Bs!LB(u[*J:\<4>MaJp-I[m&a8Po,GVi>pce0LHc&E(WDdbFjj]'T!Q`=`%\LF2[d"*R0bS`mC+W*?SD]#!:?k\d'qZ,hCB/LZ,-*I+30;Jpd0K`mWFHJPNI\9XCo"rE#E9]Ln;7P<JK]A`"j:4Q73A2lCLb>a0%&AXh""E[Yt2K#KJd+cL9'X082pUc^#/'(mhj%H2n\mqsTBhq^lL4GF;^B%K$K6d6J.'afTOZSZr.qri$lnq@=YJAZoGbS\FjFBk,%7AceUA.jKrisc7$`N+6tRRB`+!9cQBD6b8C[T@o`BT+[DktUOSS88PJR=2@S3Na#LZK4#D-7o:R,VG7=0a',AFBRB/!>Zop9:TY(%"5o;-?:ZYaJSOg=!HV:2[NjZ`=:B4>EtB]-<b<EV9pDpIpS^WFUDUUOZed-1ZGrrg3\Xg%=r=S!1U%,r%FftCif).X',]r?NgrAa%IN9PGi4(isfeJRfaRZ\C-^DRMSAa1r%#Lbc,^Xgf^f^dQH-DMZn]2_IrE`YdWMQ1HSMWSF/'FWA+?a,oU"s_1m,kPe&m1Z'mS'#`%k#*il6(L5[5LD`MXEf^S(&ClI3`q51i2ctKZE-J]ZBHtneHj0K2c2K><r"Z=)kYWLF`&_/)5`]X`4gC\>gU03#$@Mb:9XQUK^(B+%j\U7K7psah1>>Sa.V7_s!J"2n@LHai?A_G\9;+.46nPm5E:a>C`f)&[6<]'M6PVTW2?4Yt9>Z/EgCZP5HD!s3iNW<sCBm,Eet`f)%%7jL(&I<L`Nm`K]72!aAX/n^nKHqooO73$:;JY/EfJ2QO\QH4opLZVH;-V700C4>oZcc2ek9Xjgdo^>=Qj1kWE7X9ulZl`Cd,ZYc%S4u7n1lR)20I4gQegkbYl3=[oCbmdq:ofDR]&i[;#!?LSj&br0;EDtr_R3&;aG5siOADVAL;OgJRiF@_$]a/7`4slD:=S[sO(=2u%6V]L9$:6b\3J5'\7r?&m.H9hr38nUPD53kf$A&F]c9Ts-W>LDf823d\7n3-lBRm<3&rWkH>$o(.!Q&NL'o[I[)@kj4=BLaj,O5Zm%3Je#"("GeT[SX7^@bh:jRiH\ba:>1>X6?<<bC8DT0LTY9g9!X>KIXb]Q.b1oj8u<j-uC8C;GY`tQH;NPpG(,"lDuPnJ*9EGM_Af8%q#mOCF5u@4*s-[H'<k\s1T0#YU@qWHgfVMS.-_GC,t0e1GNgP[X_tXHFE<'45:#Ur)>QU5S`O.j%OC1B@%\h`8,Up=E9:9S^6b&S%(F$!2.8pI*`>3H86Wop?J7'GANc'mMQUPrc,)]caiI[@eC="*bPn'<#N=)PX'$o4'q5Q<L",JmY+Q<XUXtETn'7;LT"2ZJRAfhCq%C:2VcQ>`lm@9dn#PRaKWW24lj"AD*DiYlI2jf>+T`se9e+)k=kN:W.S?gP"O8I-ejeIGdl(BDOllUqJR(ut@K,8>L\@%P1WmK:0;%5)$+<DR/?_N@clqU\$(U4<sDg6qAnr,)YGR5sW``J\n8VqL#'U/D4U#'Io`$R/-JN*XbbT$AK;1PSM#8K$UZq[GaMJcb)7s1Vt>^%i5_Zm;2AaT;QQ1/c@"/&5PS&jq%Urb9#"9BUQFS9qlQ;]#!AQTh]@%+]TIZ^Y6E)J"u2RQ$3<i0[a.1')An*CK!gc^ALM%Y*[MB^%'XX_TQV2oq.l29]]u60nqC:S-S[GQ%7h6S+i1B)1+)TPADYQj'"leZ7ku$sQ;H5@X'0/StA+-2qb>FIBZKSeh@'Q9<@XUNK1,7df%@`]FA"q^HI_o8<a`s`N-,R?%q4Yd;#0-%2t73\["G8jLVn`&4I`EA(!.DRupJcWF@7dhHl[ob&5ku+Ch.\oC=aqBoXXlc^\NRG_=%`"04NeUuW\6j7o`R9U@A`8I_^!1>kadX;MN(9+0mCPeQNJqZWr>B&.BL1u:9b:?_Z+;WqIq;c!lQV7c:rCVp1/GZ:g%PC=)G)=)n%@seFGR*Uu%JH3(:a;;B`-*U]NA9'7$+WYe@Z[?\R&Vq6B#,`F!'P'nF-qdC#Lk))g,m0c9KnU9s!mZ6B@Qr@;O:IEeXdMXa7ZuG\%6M7!C''YLD<@]G%d%`O^#;<IoHpAr<_$DGOAtk_.dQuL\(17RW.$_FIEK\7l2=0?5;"l@Y(g`Rt`)(h4F"KL3L'p<L_\[A0T^`*E%QU/T8gH!!ND5f:M?L&"G#uq1s2`uUmqVroYl7oOXdC@Q!fN(!a'sPP5Lr_4?g5e!k!t@Pq.e0"^.n/uRP,PUSF<G--)A[:bL([hF%ZdD>I3E=AC*M>n5#(R'oKI"jA(aktB4l$jdE1B0Wb<<.bc2tm@QR"8]p`M>%/eS=P9T,-rWZ!,oamDLO.AVPo&'JiU@:;1Mm1%cq%AR.'VWM9soJ=Pm5hfD@9A\Xm>Rm^,T>Tj7KZN?f#X)li[Cf/I'Qnq!N(M5aj%]$O(U>T>ZMYgC#<?VB3G)&X?]`V3pW"7:!Y7@PW%!bB>dg,2o]AS%lL%QM$@<(!ARS%SADg3r0-$"IIIYms#L$54+]e-gd;"k[0g#0(sjq@#qPfQ65`$&*a`%+Gce&kU18<[;#`-B*4;%.GB$),g&dL#/(B_7kBQ>jS;'R!t?&idg^qhOo6P/%7p'P.rS\J)/o)-j:.E647uiE)G-q;b%kTqclGZO'@DF7@2+_VHX3eQN)fSo%>t18)#-rId.JT#d&C3cb5]DmHXq<'jD4-5o/VQ!:`;)t0Ei*gX8=C<pd8ZcDNfrk]7R8YhKcjldC4O[f8GsH,IO$DR6,8qr@L!t^%d&STX2(3!-#G,o[&YJb$rEF(M]+')3^-T)s-l:US(tI!!i<[o.4([&&6OjsTB2HO8_]9HM!AG0O!ARXeS^jIc"=MsBr!&`\dK-DI%1$bd#,gh1R(r/mhh<Gt`JPo1A6feAuKfFF!rXlCTdQ#W$:PnCK,NHcX(g7j:&WINF5Gb(-"Ff#5K1.S\WH&Sp;1r+_@<3Jl%O.-:%@3lPPXn8p>A6`4qPLa_Mq$(7rqDf$gp8a_..%Tm`)9Lk]-PdEQ@TFaP.%><$ktDc@1OR*+$0bH3!+:E:h$aTpK`%Z;.dS?oG(L$M%=B'ZA]n@E$+$C."B#I\MZL`;U_6Xmm8mY(_)18BUm$AMeNi"5uRa*lC/!MBH6_sjc)^_Gfb/YV=Ot%c[etAA79dG50(J%`cTE5*'%.k9^eGm8X/9+k,?H!W$BWGdm6V1+MPZ+(#ReXUGf9KaRm+EC2c&&T=<k_)V5=[V3QfN$i`!\6li.2J(#]*ZNmM&TT<au@;50N%*m%RA9%%TWJq2N92F1C*`m28Eq30V`@Cr;Eq',-D/ro9Z:5hMcF(1lK<1G%''h7[(0QgQ<pE-At_?t^r?rjaXf"([fM20/u4,cIZ<'>%P#Z6NZCa0f9ghbYjAR%+Z-(\8?9e#P>lkXJ!88/F9lVo\$&H6H4<K^tas`,!].,4m3fAOU2mnY,WZ?m-+;824%`JA2[0'd,838PL%$XjB/,6F4=:VAqklKRD+)OeU5Qo'sO)9E)8UoT=EWDPRY/L[*UbWlY+%"hGt<p5t8:U_\DDJ@EjB(.>`qm;`e$5rC;>dUme_kA[:%[<d;\NS43McaW-LJtZH)#`[WNBSCT"n1HUeA%!tD3L?/Q6:8-452.\aJojS$T2kC`.g\aFi=\RAC-Zd18@0D6gQeU8qF-<*m=(q*%0rZR$[!$d!K3"68>U8e[MF1UiDNNMrd"!<\^`dD0-H:OI"n_U5S55giQ\a>qQ!+K2@oU9+;`(11O+C@p#J(6C`.omc6@qsAd)q8L%b+V2K&pBjH^YF?6L??r*2=U7L7[eBqE_An<(>c2<3HG\H#k^CCa?mIaj:S$q!#&3S0/Hn5_Mg(T<*;a\!s![FQ(V-KJ;C;V.u9l%%$qqEmV-fAq9Xi<R-89bKYX_2<QP&oeZ"uh$%_Qu#2DkP63H*mrSA8m(A)A`XG`B!N2-qtiW8&k8iJ+d<'Z-0`*cr$8i1LQ`\nrXT%/<+:7JHbJ\>D1I.7Al.ZBi&Z_];k@7ek":"<dtX]S'e@9RT"GKkFrIu%%in@3]3a"\[*R[MYR;<[Q5!K-%BY3qBF,sg?QeG>ZCdM%RZJ1hVMWMA1MTb%30btPSs]!d=I>.CM6ucq634Ml2"Rd^KfZP8(0rUV'_T8fPYptl*V_&LZ6XT&A\dfPrW8eW3KPX$,B]+@fS'Il%EZ0_-`Z6a#'5+lCK"ao(=t\U/+7(TJa<XMI5fS5<%XP=9+=K$<#JmC6Of<R*[>eUP/YT#7(\m,2ZEi[,JIuRh\-"p)_mkfF&HjS_%+X8\bfL8fm_h8t;GbaAhc.rOM;IVnZ>O03e"C$YY2JE5kW#E4.PZi+P8ch%$&g7H-LgrgA:*uZC\b7Nf-kR(*cn['r6CTq.3D9S4%;,Lg<@C4>L,Y0h!(i?I^Xe2*40+=!bOraUn^!o:_=O@oDi%L5iLW.)#-[Ah1gWY![]u7A]?-l"&J_Vu&crDfnj(7lP_qC\]lSXnS%NTI78n?!Z_=OrPeb(=c<$e3'pmgSgqTFQ?n%cR!AX\[4E3g_>uUgFfb'.rhEjS`Dld#"O4K@M2&C(5^Oe8c3,>=PhpZ+pJo]bJ9Q%@f7ubDm3E;BWEA'mZVuidFjC&C9N29/c^j^0TZL(T'm^hJKc$>-ojoR@/14];/s-Xn:)!#KXOqJg6)fpA#`EB]qjosQ4#O^g0TJR%?e(u.Lu4u2>T8]2FCZW#Z;J/:.cGY'\Rl2@jR?<rAGJ%,GRO0SUVuVF2)Z-_B0X]rQt8FXpgo;do(hX1Y%$ZBjR_<7grU/XBB8\:%OgHpm<jih8i<#6F@>pFm+C%soBPK(mT6Shj)TRJ^Q05a$me3=(Pqpomf7Q6pC+ad$,LP%.XnO%=b(^DGe*^&HHX^24"7X:O>e)7-%%8fq@'bp,HKC1d3*N?Jq<!FX`c3GHAK/]N]MZs0)HRHa=72?tF`/8j@U@4E5$J:IT"rh*dP:AJ`D&&rXXbI]bq*Q[MWN'A0;:YnV%eYE<;d/nbOaNHsoArAc'9m?>TlG_hjNgB!$h_;R$_&5OM;$])21'^+j^-AiR[nql;A-%jNTG#$.7#qL*<h;ACBp\5Ws0MGPCi\<#%[c%,creK3ulWn5F,QT/sC#=24/U9g/gX8V6O$0h`1X5>#fqX#PlDA+ff5J[h"H]$O9hH`Y9%G@_-DQYn!/X2gil$\TnB4+`L[52k%/:s\uMOY/]nKEht`?+Ee"O7>-\rTjMMfKBd&B%#8m/Zf:"uD!.YK-g!_!$+g6,;4TR\deg\VZGf"@n]_*?E`nC'cHRF<F\7B=JBF%R)oV\M@h3CTTl-+9M]-$fC-O09sNk<WHs>n*lQJ",FHKK$JOiC9N)(MN2MEe_I>>0$JT%V:^3XT(r+%cfn9B>BTPTCMV93$PS2eO%e.KLBXNi?E03(a?"ra?G1on;+;["Y$0>GKXP0Tp`eBmiFdFPUiHsrnc(OUk(1Fg2.7dq6"+g1f1[Re"p'MNe&^Zk_o+iJi"SF,-=%N^$JC.j^mp$r>\G!eS?)5WgO\FV*/tM&"D+`C1qZDt%4SgNj4h9^qW&6bZmG!@>;5;qr^jI8!$>%&VGW"(\<A71KAb_6pDt*!_:R%DTV2,GGb)\SN^W`m!c_o@50acJBLZ_=#n7pBmP(X)1\HR2W.sX^qcc0jC8p7>G3N9gaBF9/>SF5KSS1-$&=QI9-#`rK>!;H'Gt+M%"YW1M##P1=$.WpsER/6+;B<^qAIFp4e=E9U[YO`gdjk&V3jNHnK[?[O8t-,)Y`&qC@V+Gd#i!/1>"SG&!!&l6X\!9*!1Q`D<BStX%!"tT'a4A1gH$E\`7%=(im%l!N2up>HS^#m3?=HrN4cR/>,@k#%(bO+RPBgD/#2a^;W<1U"SR!&Q)Xm/5.jBRsp_LAMYcBsu>4O@T%]/'9W?t66jHOrPqo)a@fTu)-gs$\OE^5Xr<\,mC:@YY.A%U+N_F5/Y*0aZ$rS`2f`gd_r<X%VTTE\2QL9'/tom8BZ2$k5U9fmgtM%Zp)T[5b\;p5=qHL#g@7o7$1TX]o3"#&>?U>V$/)IjTEq(K_@B11/:$<#bqIgS62]]7I#!fdhN<qXhA(BE^a+JpcL*AlZaX:?Nt=p%")SclD#t=3/DYa;1A-C;gD>hnih4n@-Qk#R,-dsXa+FZXLj9/N<Q8<qUL?XDJp#%Ma?XgnV;u*J8PWkS$3NHRNSBB>K]Jd^OWZ_:%*&U<YHploM-io3":BROTKeQ>+(Qk.%/lsEL=LdF3!'%fW!%YiUEZLSMX8mLs4=t>A=Z[NJX^*rE2lE]4F!:ts!:u>+P3,QeOF]s,%j)kM8q.bMa%ttc_'Y),4N:/JgRio@s-%^m]WWWDW2'=<6FLmdmGt[(SM"L6t)9ZCt6RTT6&]uG9M.lrbE>b6>ePq7M>b2CP?Xe4-%(.5TtUko=e*[-WX,b<+`Xmr.tFhhZ\9pA)hR67%[9IIe*&8Pr"FC\Q/RUmk/k)M$#RobaRJr0=nlWaYt87W0S@A6bTGo5H.i5&pI%J.6rF;9_Rk=tQV^H?DHq8/@lQ"rFO:e\etY8YLADaulg71LpW2ON64ph\9tg,h7RqXpbo=9>H,a.&?s78SHM1m?Bh?Di7]uU5bUr%]dWu?Z"P[T[\<e<JnU+!(*/i9SUhfBK_*.,//"+@X&'6R(ePqu_r`?Z19Mb(?NghNNQo3PKUm@+_l1Q"`ZEMNC<+6EkEbGb]1.(p%h"o8cZE?S?0aVZ,YZ/'<,%X$?4^1l$M:EB*`U<p!!jQj[^[C,?V+LhO9NiOkOH=ns@6WP.+;1-oQS[!$_Lp#]Rq7QAU0t[AbbML:%Etch<J5&@oGgMb8$BjL-U0DY,VHOHlQ]cu>'mPdY+;hJBb9p?@g@uXId":uE)cBVb^e5>.0*](YcFf$0F5WAjiH1_eE+jKu@V:'g%a>E'>!%[c9V?Nu"JPNrR[TA%8X(FNs*7bt:Mrj"M\deEUHUEf,N+LBmn'J&I(kNOoRdD$0=q*f)@ABNP-.$"\*j:mr+Q16!rKXa/%IQoZ$kr`,XqkOY!nKB<[,$fZ1nS?/W:4$ofU+YYoctV2,%WrT>mW&[8+*mgU[uQjUEu+IQXFdm)fS+Iu"Wb,d9_/ZZ1j,dt!?e7*%+N,HlJ3fFu=G1QGDb7'*3>i/T1P(-*9^0qB50.2b(b6t);B79ihM!@k05]EN2C#.`X)9%f3-G*SH`8W;UK30BoL35?qd*4u0X$.3%.T8)JEYQq+F5O##DQl[%PWI,&/o>^.f17e'R%f2d9U2h_,kJ:J=LN>g]"Vl0o,uZ89/R*mWu`4I,7EsN(%ZBr&H;8LaAbN)W1f6h%?F8c!K+\_d.9ha\k`#WH9S"W6g]\,IJ=jjtbGnE0qtnna'3%iJo]@;`VfTk?lR*_)9I+RN#?/q]Lh<&U7!H[N$lU"pHi2iKZ+U=1%R44U+gp`QXC+m;-YS/n8$$3(T_#2=F&/o]lFp]m?$P`j_J4D8nFC"?t<Y0*`EOm^N>Ks$RfVQq`:Vp/EYMRTI/7?@%U/,9U!E'eg%)$%)rR/''Q3#"mkT)W&4c7S<u,<&n:Fn#44J<<2uHtWe]_6?plq*.EK/uWKPV#_6r9H1fX$4PYSAk=lGh5UM33?;=SR^t"%<=AtU%'MOrDQ-QUD;:;usn#tg)<7Y%-/8Y-qaCAIO4's=q<=F>LSh4\_8[lJ@gn5P\U0+TP+njQH3Ufn"_-U=jCuPH*`@d+.bhq]"Nac!b%U$]"e-$6YX.&\_u?iUrWVVKh.F4"s5LKf:eG\jh^C+./:p<qU_m]lN0f.KJp]C&&mXPa(C'"pk\]:ngZddmKtc.j>Y+Ge.dgP!L!%ccfKQPY6rp[ZKm<:^j4V..E3>)^D4[M%.Q][GQACL1Xk,RuTad\BJRdH2qUn.Bk^`SXWU'Xg,FgP1\jL8$iUgLXCT>&3B2o_.QlI%WeMeh1L@'umZf%-6P\lc8u>(`SKC[+h@g=k2%0e>)c.<!iRi7Z_+p7DAft''j$0"&KO/8.b-BpY%^Z4ujN/Os<,74-*@+>E1$EeR%DBC*929%#4$CKm.#?YkcW/6c\i#A.M3uZ0rG,QQBroe#`!-[#@^TS*;nR/AN@5V&H6bYE3HY[#0%;C[G=sA1+`jr7j`"$cEX=<2Z%#oVBqFueD\8\8s33N6AgN(>-`aE)uuJO^m42%o[0`1gl$5p;Mi9#Rt9/.jbK-\JZ)>(V6hiTMl=aYe`0>k/=97P>\lXFRsJ\V2(N%@8+-GA5#3GUPht><cN>7cmH5^f0qYJ6M<P*a.n1E!.>*`E3Sib*:/,Hk&<1$YD0Kp/`i"%J8Nu+.`S$O/c3dZ>teuV"03nZh5D+5%93C#%*62p2c_cXs6I<=VTQik^ieG[!"rT#CE]DGlon]^Q3/b=m2L?ACG+(]NP4G_FE*ZAsX%)'Dc5'P%*$F!-;?oqRc"3#rG>PR]%DQnb"9A+:S/nAR26`,(>FdosJL17h`db_6d$T]<H:b0o\(o=VijaK8I?V./P:ula%DOJc#GXI)sK!2EP0i27TVSM^_@[%)8(U'jh%a[)^GC4+67a?Yp&(4OPc)F-a>W$G!]:pR$qeK-=?Q@6cO*PU_gj<?)Gi4jm8NbM6Rk"/%G,CSFX?u%&'A1dnu!c`X$WYWgH1-d93%XqqW0C]M"@[=h1U@U:**<=@r<KH#LlA:Qo4G\Pes/tH!%<+X&X6T(3jm7&+U`=<VtC]GE+.ioEZb#3uLGQ:3SUf7YDI5p8J+`C;h%Ifsc@&XcQ`?_bHC_/d'bKNPn97.O/1f[kAIiZSB;V4&9a/9H\>?"h3gOQ=-$UsFes**\uOT\*/e_N:T\lNLejpU1J&7LOTFk>e?t%At0qKI3P,9N5.[_#iL!0=sA@@r7FGC4$;M/o9iDc$=YSJI\C5rh-s?(e,lDG/;f+a`Q1`<UsW@RZ.ZW\E*:Ng0O@Sf@%lE$4&Y-o%W-\f9FCS7lJtg\f(*"3'(I(#7+A'Xpi2_sROaI84j^N%<M+PAL4</BurL,cH),\M+EUN_,D.=pP5jZ;E!j)p7Q@MIJ=Tji5R*S7>%8O]%g=<q:-M@t%;1)M)E]^O?&e<)+-p17%#\c\T&@_/X4f.4'k[NLB>(r8e"!9r"'Sti7u8W5Lq\%uCQbQ;ab9aVf3_1T76-6^HJ%)W*-C'T<lU^3Ib%OIm!I^Ng><M%p;c@/O1%D!o?[G"O[4gg"M^.LWn#/k.^e,_)Qp60o50@`"RoT^$(G)0V5JSSm)T=7:o!4^3/D%DcS-'J-D#$Qm)Ya4pls0K`R;#7N[c!SW)$g1u`d#U8ahKZGj$uW@siu%5QYEU=eW0-u$V?:otc\L^j:5!,"]*Lk]auLgi`c[g0=N%N01B4C,i:"MqM9p+meTKSSLT:;NTMb0\D<c!mSTTS-U#JFhGI%W40aK+hae*fdSHsSLLieIi0g:Q*aI781Wi4,dB:DH1bRtW4H+A%6H#X;;CX8M%s>5u!&P$%R`a,j5KMgs+`8WZ*"hnW6T2KRYpL_ifiht"*sW^GPnIX^neE#X(tKFl1)$t9C+T^!e0E]jGXF.h5mHIr%s(CQ'g*fqOeaQb.B-@:6CV5;,"UneT".)`?nI(n5XL<pQ0/sXXJr7TQ>h-ChR%.]m`B7RL2l4aM<iI[CksJi+*VBJ<P-(KFfG3?B%6kGaB:&qOagrNk@7Zt]s<Ir#E-<lX%Oq;7rZ<H4nZiS_r"siBl<QD5N^j&R_VSWahCN6J]cpW:l2+a\;Gp0HF4&VuV#m(/E@$`'0%-_jB=CC]HCNsSo7Da[II6/1oAV(N4M?#>au5.m8UQ7kJ.)_^67)g<uR]]-;0/5!c:XXGt0^T2G2PDQNDO-k(9j8F*B93*ub,"ZV&%UA_JM@PUS^1!jQM(t[3ap[2\^C:k7:3p!(,\C7:?_e/oE`l3q)Tq7K2[n0_i1f@lkMIIT"[\![)p4<?_T5euZ\/]PkY]'&XZn!'[%Pe=dVdYL<O.]_\e+^n!W/$$PcoGR_)P$o7T/ND4Rr1b9D<KdA&m;LR\0akHP#N$rF/F4s+'BZ,7$gO>,B(*MO/6V%&3"-Q1ZaVK)%a]WF_HWpKuA%HP'Qr5@UkYfBPg9ZsI1JiTnJV=gMPG*)QRUUY8<7W#K5fbA.BSuY"Q?`j5D:F_;atq!g7Lb+3A6UpH2*ihUd'%eb%Q6g-A>+m"++a4eJ#38BY[/b_*f@a?\T6$u@(`\_cef7/#4!Zgks.Eq-E309`NLc%pDL9:REBdFXb@8X@b5n*l*cN-2(37O"S#XA!%Tn<sEidbe=hcLmqZ1o`[Kp=%'c9uU@kG\Poe+4@""uAheBj['@c0GQR=j*[V2IOJ-*CarRjHIDg,Is(07"-:-]4&[RG\GL3R`ukH%*:/k#`g.mG&dOl&AK-u0;Z0F-/[076s)GBS$g?>YH?^/=ih_O;#c_D<'-ZAnX2T(acs`+mSXj4r&gI?[!_Nf=$.olG/h#FUKRA^D%?8N(.,]@d$\O4(V%<'Z4W/c&<BYbU@j+U-X1kS$l&M!9>PAaTGeuo1eaGK5s=qo#RMAHja#bF=9R5_uI&lu4Oj'K#$ZT6b>3j^,R%7oa8@r*\;V<D<)$%:HZF%1j/*.Y+S8%^`AT++ULp`=ApWBF]S_5b?hQk`Ql5JO-A]81j*lDj%XFMo<4FmO*TELuX?nk@dO)b[Gt5%^Co>.Jt_[,Y:0.J+cSrA^:0o<@A3I6o4.A,5Z<Y3!=<3@P&6[&9`=8]^_.M:'m:292/X4X"NaoV6)Em5"oVsQ"DfF/lm'Y&.HRSd%UP&AJ^KI-U[n9]p2%u5]TqA0-lLU&gEo?U$*"_#"GEpB,_cXgW-0KZ09P8bMj-do$'Z]W:Lh'j$!*lnEM*HD?/`!&eN)Gd\WDH*S%lma;86Uf?DU#bmTU>h)b=IF"Ye<G^K!.2\JM(AfBG9,QkmOEK6j7+%cGPpT;bfK1g-om]qn6)3i-(&bX7][m/kjeWj%o7<XDGK6]%qPLj3H^61Ek],-@Bt4k'Yr22`Ih*$=Eh9WeQ1W3ZAYV#NdkkQ"_r\_W^Y\JH=^PV/b<t`gM^e.(3^"8759sjQ:MSlEPcjGlKCuYK%o,"TfZmU?Ipq$:5$Q1YYfWBfR8VG.Pc@G^tZ-!$\0-5?s2.X`c3m-YV+,P#KdsjTSf17&JlCur&Ag39r+A#"Y#";cR=ud0([:$I:%7,AF!$sqRk:e5YlfL#:n%?e0/&6"p^n3dKgpQCWa6i:jK-VO+V<f066;4JC%[^[Zh-BhNoJ0Ya%Ua"&:Z/nJI3BIS4AM1EN.)^b$%q4eNM/p^BT+P(C=;MTd"RVnDPT[;Ope;1L,HiFY.-<>VgC;S`I4]^lRAh@c':c*-iPPM<VFt1$qWlZMb]I'ao2on]oD1nC;83&[:%FXL\)^22%@ae1+m,!Nsi10i+'k2si\1@hQ3P=58iZk[JS7'Vntba\E5%MHj*1nWd06#>.9.&2SdOU]U9ga?SQ:O+qQ_u#,JgL!+X%=/ZLOYu-l&rjbAJ-V7r=G$tO/o\tZ<Z]]rM6tfu\#qb%+UK<A?lT,P8Kf_qBDC0qcZ<>S[PE>f.b#7E;0,Et$R4hh!6F9,!+f)Bb%.&]o'99njke-+#AcE-ZDcV2TKFYOO,5&+RV]h6[LQRi[G#`o3Jf?N1"3YbjQD6D?<g5`31Bs`Gph0p8Z5BXD/V?7HWHafVJgJ;,0%:Ij/8A(se3mAIMP:D<HN3k#!/[/JM?B>T,_os5pu:N`itM)Di?@Tc99EH_6DBU`JupX@N5:T$9K3[gC\)Pc\tY2<#L9JJFjbrONS%pB^.\Urr0%HiFYL[EH=oZ^9.uebSaj>1@)Vg4!cl?Yhr$rI.pd5HVAdg)r=W[1R:3U(>WLe7985V>FuWrA7tJPp8bZB'cFhgJ:>o%:Li-TMs[F=mAFeRqgLaeEGH*f,nJ/(mBM;aZhn9tJH69ogJ@PMCMd:R4hb!r$Q(I9$Ye?k6aq&Yqe6]SD*K%W5P8kXNOGIjIQpQZ%:T;Ce:CHkpL2N:9Yb1&t\T$)IfL`(`75TjD5;cTH[\#V::Q^a$2c&e<;:e8(pX?tPdpi2g)hHf<e(&-rIejLRmC]rZ<`++V`]]RR%TeUaL(6_S4)n!,Urh[R*Y?=$3,hd9$0L*jUgV3GQ@D5\(Nd';*O\4f:)6d`8]1"$j32ghm^/Z/a2MjhcW%@7NO36POEdoGD>*j$(%Ar2*kQQ]9_4[s#E"_j-b<FJr;(0a?V7g0L3Oc4da3f>(T87P(Tc5q]I,TMR%X-t/p6[njA:i^NV.]=?28`E&#8P#5]?SuUR!2jGj%Q>]';F-[i3aA&(/Q,TNK*%H"DE$h'3iF9A3(="=J>J1fPk1#")6H)dK-j2&'g@Gr-`76'7c7*"Pf<2R`T6C8Vs,)eaN1I_?+h05S%JOl1@Zr,#`lWTSH5t[/F-6h8'=p5su)'nnVY>^D<W5J`_6dYA7?19T[MSi&V3R7C%An$g3QF('(*qt$"$/AkQ\rU]mK^<j8Kfa2\%V_XGea?r>4C3F\7<oiD3$#)O&4=nEM/Cr;c'q%Wa#ft"ZfSDk0(!Nkg?rSt.j^gCi8*7DYqXo]Z8`gOrCp^/=-4Zi<JrCjdXB4EB%M@+P8)CS0WBUD%S"=D6,Z;\jj4>+?fi!0E"F&D"8=>d-*_%f'agQ&>.d)eDn$\.M^S@oIjO]AsMRh3qHEGr*akpn2O>S>l&3AG;(%`Y<$qBNSmhbgm5nD&1'k#Sla;mQsPp/>5b5m71Xe+E?DGJ6;:8e&n"O/K1LF;H-8TCUA2toEdN$)$ps1bTrJL6s^Qr!mpN@:Ic$I%@#IrTdd^kb;`$a=P^*GLnB14JD0aVp-&_\V"FCEPV<!3%@N$2r*Y3cGWa`A,U#Wf&QOksY-40MiPaKG3<O"G]!J'qrXN$*"To%.u%MSQ8kBjV+q+-i<q1CUR*cuhD`#4fI%=sp[cQ2J4F/15I?m;\E,=V586E3s!^mlkEb0'Sa8]ptATK^=8&+Y.T35`e8_<cDtYCJ4+V%'[0ZSo*FnZl@LPt\m0ObY>gT8dAF)1JY=Qa4',5ZI\i`HbeM]/AOiXM#SE[5L],jke%9N[Fo]uoBbrS*B_,UO)UC29Fq_o>J@M/m%NaAWHdDP[pU5<(*P7Gde.;p"A4Yq2nd4#Wt`1c;gA9'&`kmSm0B9A7M!KotL]V+"NN#8"gBeg$)HmgF4R3IE?)0&!-/(Ic)/AR$Y%Q(6GsCpX3l<!A9#6B2"LG79u1W%n:[W8Z,9qA0nt=[<5U-T3'3%<Z>>-k&h=NDPpY]Huk:LWi/P$(5SUQlAYBat@ja56`mM[jb4B%C)p/ee4dmJI[up^XGT0u^C(tE^j89*_=fOA2mQ,X>W*g*X"0;)?!l*m;U$ZiTO>6?C>]jDiH;nP=[1K6+dTon(/nmsM)e=d`;ha?%C0&4)FhKC):I6NEV8#]SBi=REUG#`.&<3)SQ0+L]>K5rc`)^-OF_&jD72Armq["BlnZG<mJ1E4[lDfN)!GX7OR!D'H8;0sCD8bFJ%k\Vikr+(Pg*^+>K)M1o'pq7B%A(X]\*;f]HMWi9sX#hS9>]cW+60iNc"Qbt"Q=pmD]<N24=KG@JqbZh1*h,HUNGX]^;p'R;329X\%*Pa_8/Q7A$=ogEU/B\B6fNu"q$a">pYGjZ&%bX!eV[O?=)GOr2_?67[=>MX']6Z1::e@KY:Ih_P<")i!S]Jf>LL?3(YnX4`cje/@%0Jttbr.sI]^uY7p?2GGODhB8':#8#A+Uu"A86'9e>ukoS8Tmisd*"#[-+"G@T_`6IS92(r<D1okF[="<8JEa:m]$BQ=9Q^7%VIOg%Jl3%NY8T]FM$a\s#`!E<_Qa(h.]]IQ\&b>A#ikRp+R9fRA\]Xa1U.nL`iN@n>XiW=pA.5TZ!1,1d"'ON^gfS.#OF7li['d/?rc2K%NqZUqC`"X8p7j%3fS]o</Xi)62$]+/&3&a%]snR92P7.MW)rYNO\gF]ctL=_&N1N=?')s$:]]$;1bhg3X`PIOe18m\(.M9Xp<f22%Z[sKXM^#]OZorIe-ISoi+)PPK<p`6I#3m$1;_3T[Tl"dHC9?Et"\o=q$<rDUKJlbbZ2tuEm=U&2DMSo1:(@ntfJ>,%.!>r)020*`%!1TIHChf_X+^r.jNRX-W0!r=r].HH2]-N;OK#ab3@]O+OC1.ZpU!YjDl:%WnV9BCYlXZMVK<hbe0XU"Q)UmtW8eB,]Zb]g&n%kuG%c)%?m3p'*:2@MXEK$mXI=;EY--s(jpShh.*Tpp\'=]qiA6lIa6C628qU>754oXKm?%U$6![8a2q>]XEG?$2i<j/ML.DO@4ZUMihi%+p3KTg-Os.pkl(67O>i3KMaft"WmQ$NGoiAC(/VJ.+BkFB%Q$WGJT]/.5CO>!?7ucJ#c$Q6$;*onUXeqfLb3l]nt9bmW2XEWc8)=%XkJW+b\nct3,N[DT_9;h1je!ifd+cS%["<Lp0qrQ/r@P@#>tO:ReAaToH>*ceHn>FM(C,ig1,eFm)8TShr>Y0D%o>HH@YBl[+S<i%VBG!+HAD)16+1HW2^Q+`Q\Vi2\I'h]H%k;-\n,56<PK,C[e-sfg<<#ZKG%;'LS`%gZCVpn'qHP!ae[Q?p_<pD,j$4ZmB@\_UksJ<%XhbS.KmLQU2=&-LK3=i2DQW'38I/8*+rg87ltCP-oFgu/Cccp@d3<`simeZ@Zt`H>3ZDeKWp[9!BTOo@0g-31U*8?XU7&lC>J`s?%NFBH4*k[^SOpOEFk`Vd3%*fZkQ<_R[@\ok,L=fP_P&qg1Pf06*+@;uf[:M>of?HIa.F>0=XOpqg8EP&d!YLZNZdKG"He*<>;a99M%5C/1I"q,r[$@(Hkh5eC>6A;?O5Xd5UAFgi\1QR49Z?70R^3\fQ@11XV"%!gr:#7)!]TH<qrJ?8ZF3JS,=cDc[K\_S*OSrQ%W!.=N%L^Os@RG'TYoK#YmY!Rj!&'Kumn/p'q$l)4]eCkEAZA,V<_lQHF0F%al3!*S[\Cj>iL8":<=fjB(:<\?(3547b`!%]8@%AhnDD>W;%;qmWj,Mju>8*tU!-62t6mL?k8NjpjM,K,.jIF53mjm"B30):VAJ;B7,L&b#/ZEFpldn4q*b87"tji9a,k\@>[Lds7(M!:"+!m3Ak%"m'n_L5mIS+=/[tP?MQY4s+[=XL(%<<8$(tj7ZLC-lDgKAJOoUHJ)[m$!cSTQ=m=!+Z'uiq#1(nURj-^&R<YBq?UTa%Bt*40g<Y$%K)9)*%!r+6(m1\J5L1XoJgVbIni@K0XY.Jj+#&WKLkX[u<gBa`TaVAupTp_1+sFF&KG"eHM*`c,K!O%MbLE+aZ5o:,ge(!pMB]cN%JHX_I"i\%a78Y&*3BYo'E,%FMEdVJa/DQ94@F`IrZ4J:=:jr'`<!K"Ir9[Mt.Ob2$=Ua1f0uPNS9[cY^X[l4MP.QfC:=G;)gjgS[%:pM&n%>nlJ\A^s6WP8O=]BC-^G,GHklsD#l"9eF)GLgFa*Q;`%MPW#D8^Fl!,HX4U"PB-!ST,;=%(E-$'tP0B_("%.l=s2\0r3NT%e0^Ed=dC<<RgSQ]9QPo&i@.NBX$XL_a\LWj(%j&>"@KM>][k8mU&sVi)U^pX19d/4H2*-2-YfK=pK+Y(b/?iGBm>dhHH&(2,C8cs%J7cL48^EO+V^Q*e$c`\P*%(q'*[=(l[qZj<-a=*Fq5;'u+p;%8C^2Y&5mPd<B$Z6;+@N;[L=qYL0YhQu@bis]ZR<$5L`KuA"@q:K%;MWGhG)<u!`6+H54W";EP2n/1Tpe9G<m+$#@e!-U37aB86G5a"YDJgjk>?]WXGPK^a4^>5gZ"GSKFDj8C_S#WB<cAr\1>4!$IT7V%6("q`HW2QWT-h5ifUSf/il1*qlA*l',SW9I&k93.3kN(N+[31H-@10lnD!"%XgkUtTc,;[S^on\^1kS#&I(6V88(^ui"%;$ZL,qk%Y0jg4l0[%ZrQ(DedRiZlWGRU,j]:7K8gfXB.BD]OW<IlE_E_32>$:(+:1hR>fNR4.hq&%h]$"oD/9KQ'0Qf'a8c(iZqUHDkH>@_!%PpZE4c/$1.JgcCRFWJNhr,o9O:V?Ic3Wnu0';)eX4?uZpdK(LGd..+`&F34?1#>K"1$^PV?P@II_jJ!_"G4+c(:^Q"AruhVq@:BI%B$@`[ElG+OF<`NG/i]4gM(QapU-K'+c71ORm4>8%44#S+L9$CqOe(e7TqOP>QD9GfbA'Zp2=!O!7]cK@cOjRm)0:SWUEjkpLWIJY%0F?9P5f-oV.)If56A>c:C'?RO21RrFd)*,#T;5QQ9tF-Hc$Adk`0rN=PM!tmSLnn!@u*R[elSPsU7&>CR-M"<<N*/01*rWG_fBD[%cd=Sm/6I$0EfBc[\/<-'&sn=]e-0,-EE5#JAl.[r*HZ!LIqHZ9B^gn>X!ZS=U,hVJC^#urb<q&E4\:fVS>qaGcbqke%8=VARlX&^%LIdKML.K_qHq2djJ;'0M:j[tjnbD%8/E//!`5D7f&o1tPfjl"dcA7,SZZ.74"X]hpK1W.>Z5i63DFSIUWj5aF'.+G&VD8m;q])Bf%/G`t@o3NfZk7=g/b-$[10V>RGMSY+I'=FoW>msGs:Puf[S$*Fad<#p]1LGt.iLR<29'!ucE!ju=ftef%'<LlN@3q52S8bqi<Dkkn%XVmd=B)KMfntKL?eMit`-hQ`uZFrD7FAm=$)Nto;B69IXp"Z*U>=d'G=.D3a'G?90MhKQ"CgFA^fc;A*9lS3t8S:@e1f5bQ(t?+Y%Kc3BDOA6D=&rQ'.C9I<Jf8@laTU7YK(2m?.QH^89#Xu)r`k7d,%`_I?0i.17BV-*$Ckrg19X\@OOef>KJaS47A2Z_eBM3)31?$%A%P4M?t&4eEd_6_X\o.S\/,]nnf5SST<i?)Vc:))hn<>QG;#:*8mETuD4F"ni0d:6I6pP;a$7MV@s/o)d:&Rt=V?IlEd-Db$@TUZaj%(XjUM#2A^r>P#.P2E4tM>4=:@B!VuSr$scFhM^e4.5.Q)[YtlI.V88ko$1b:;3fEnCdOHY<N`+@RQFts;@G9@M[IJ?UF^;$$+IrY%`6PdW65j7tc'CC'@MOdNWA\KQ&h3rYCUFLCbRHX?c*5i@RjQCUb$lZUl'?HN$KSk>."nj&eu<p0j+qGMD'?11k]&Q'PGPTk/-r<k%Z6VIWSn*U5E:KY/oGOs6X:i-kAI"uTg4UI6S;Qu=+3t6riBYa`O\ueX8&g2e^Tpi>"F\IrAD9PWbV\0ueQ)KJ<Y>1-!JB:/Qi645%`i46_#7YC7$0dqL5$1C?Kat3@G%#`\R\8;c*cc%N_b@H(`=:?t`(6Xi73)&#,JlJshdlQu@QTI93p+n1-B)6-@PuL`pU&M0^1C=K%=BjDU4^&AC5F&kZVi98^<FmAJ:%))i$hI>V\.2DUUL!=t1k48U$rD!+j0_tu,E^t_.]Pb:SX.:(,"7l`KiqRE'qn\N;[%+r#3BJC%=\##@M:H9=RBBn-<RV]sG2-U1@Q#1gm]9H$^ctjSoCB.'7]RBMT2U=>,-j70Coc1p;(^ciWY+P1gRTgeeL7t@-)n#EqE.YB=#7).%W2RF8N@/o_,.=Fnl04#6@5+anKT#Pr?mZTM/Zp54&0)-s7:hZuh]%;3"eTL3Yqn+EOcE,BbA@D-RYZ[tf#4Mr<KS:;9LN2cqe?m9%Xkm_+lO261hIaW>1:NfYJX^-]fXpJthEl5S_Ce/7\V`-0&TNS6S0q`t]oZ?jB#c+SO<W29o1>>!7maBl',jJPmmceOYtV;G<%hod%5qp?(&N:RW5ibe)<0[a3K(GcT^7D%!MI6!l2)Hn\:-IaIkM7IS"Z;YMn?*7U46].hpuq[#)2VQg$m8Umi32=^0KP#BTeqD?mGP::%FI*BtA>LW0=,Y3NE\3cA"r3d7JFeOSi.DXtF),4O=nR8m=q37V;Tf:fNp%L0gK*k7>"kJOhI"CYLX:Dg<JZWs$C3K^M-.[=ZC)!=%C6YdPXF$_XNK3XV<LQF;GS6\k/m+PQR=IcSd.D^;@[GSHXo"DZ-tcCu<QNTVkR0;tZ*DnB$\5<FJT/9:^W3CKGD9MP9aF,7hSWf%%-sY*!pE3O`mHEEhYO<uUYN.uOMm`0i.oX[MUk)s@.TTcsBJF$(kuIN.;<VgGAp)J1YTnSQNT_oa%9(9#OPZf\im_3ZRRL@/kfX`W%!3@>DJe:DL%KPdhK8DUf&gYd>j<C1\L1Q:_^uLM8*_hQ:+JH9?F-QA;dkthpVca1hA90W6+Q=qe'PG^=\hIO55s./0GZnirAqh(F%?Fgi,$8_%\CgqM>CIT(NMV$g0a8k#W:'DFuB19$XO`D<UmE0auisYsbUtMYV+gFD,U&e$aP6\^qfsg%Jaj%RHO,O)nf)l58ZSs_A%QcNa>1j,NKQ?'q+UE9uc%pe72N7SH_.FsI_7XF;H<b,%m8]<j=iTR<\G`3"%N2rX`@<32B&1%4X[QlhU_BV\dQ-E$/>BU)5JS9<"%k=\5G\0NP;AJ#8Cl0/n_a<[[Y<WJM+QtOYGEdSX"m4@t,+h>062#;Ld[qWt%9*>uCG?&cN`DFFVZ*l6cM-F.flCVaT.re/g6QXHC%fF?97DEXL/J:`FlAYCf]gY@t^Wh3tSOLiW#Qt&^J<@g.Y\[8)*.K-RkIOTq%@TPs8CkmZK,'Hh>]q&kkPUtNU3!9ma9h@h"2PVLo%SB8Vmm,Y/A]%=7!_DN4^U&lnDW<+@4c:1b"/7D,m7bb,%(+MQR?DVnnZ:P[UcuE`)ONSRj7i6Y9)6h:<PeqT(V`>C?.u"Y>"5`1Y%c"'9=j0UEi5%L.cE2)XQ_/sPHp'>N])/_YX>)S%[WC8C.]C7o,1MRY4:9(:?3O,8_OtGJ=)5c='Tq]`A]kd.!Cd*O0;;=G.HY5F%%BC4djgR`(3dlSqbb%O(\3b;gmJ8j?%FumlK(+]C8?ZE#`qS8V%_op.EpO8_u'n&R$<$R/in;;5l[O$ogjb'45dQ8)ARQg;t3I7oo%Z@rAo%3[2GF&AF6KkIFZ:,Q_Cb%Pj:e_$19=19FJ/2\hsO`/1@Xb&Ca\1kL-H#FE'@k?%P<c^?LM@eCXWH0T.=`3n3<XbC+1D5mJ%Tt_K0Q;fD;p3E]86-G7tl;^J7*d&="/.*Ujf5F^%[5&Ee7"cEHrG'1K,h,)1QG6r.]%.AL(.]ls/Qk3gWN%PEF]fG/'6*?_buB68%7$G+\Q'R#q2m`o*(ZUl%`q6RbWcBm5KBu-.<m`8%;=apI=;IU,1.ueMBANnVY;R7J>-(U%1:1>35&,nni[_kF;'jVW2Sk[221^E%%eiLH;lLgV'cK\E'+<p\[mtI:[":`9&CmW8s[mY&sX:)?A(8(A2H0LfX.He^]>^`[+#D\^h0ln.rXR9j9Bch'NnA&>0=</P1esRD6%;:ZM.\I&^:._&aL(&g"pp38/,`HjZ_irpX04S)k1!W(q`XPPnueLUKFV?mg-7VRjYbIndQh1ORFg`WHJ-FstCV1$aC<jlNm,Z/:1%l[VAGEkh[=RD#[?Li1VE<`Za@ZugtDXF7q<l`eW1QQq/l`+N2"8*!Sd`HY?6liie?PWjk:(,`i4&YTnm!f\F8KAtp>G9N$ii`5lc%+aQ<qX9.X3Lr<6>QX71=:k98?6$s)\6G&E"!)kP8[YTO?\hkT;_'jp:]TNBU%lN&.lEepC+jg,)/Oncn2LtIfXmBKGX#^WNZ=,Tl%/[)]2.1(m7S(Tk7m)#Gh(_hLN]JpPmq,H1.4MXqGXPcsZZC=ZnM3OlGdN*D[JH;A/ft7#`l58b2oVU3a^0gN7"1\nj?$+s@0*ZC_%YaIAr+IATG->@V??t0m`1LW:5ZS%]rigM&(X<*]$dnXh8$YfK]ZWXd$KGkdRni=&PMale@@PcL;L$"RQ_c/O-E^17PJ:a6)NjOCQ%Ai2JsM%Ib%C)LufVKoL2`RM"`)!YnOZrQ]CTu%1HKpk)A6!lN,:Iq7kX8Vndc)MNFAV_#$*E0nX@5a16iX^K!Y;r+R@s_sCXs*G-%qKB(t#Ig3:L\^K";`M>6Rof_qWAIjne\!5&Iu(OE2.gT^h9i7Zg$A.dk\^M_%>iW.4f]GFmon#8W`bId]f%#:BXd=t'*kl6c<A&f%4'p-3-bq!T;nXd-`I7@Q7^/u2[1SjU%oAc"bFIiZkPPlJ<0>+V+.-T\TE7^uc,/`[JD^i\3@g","hgsqEE,;?J2?2nXt3F>NJe!#%M0'><%^7FA#b)uO/7XkbUK./tg+S2R0hkoU%&hTgdV7=rN=.MY9rnHY@'3'>7klN.JB:*@Ll)oEDNj3%EgYU3#&ca7[2,G;A<Lqq%0CW)_8[Bk.>pX1o!b:2`RY\+Xf':L8P8Jb-;0W::kVU)gYL@0r:f*a-Q87#/[1BO`CXQC!W/AD/=@GqIW'E@SSJ+2C8Jjq?UZ<\m%iDRb`P$C9i%BM=5`*omUC6H"36o*VhGlhU5;[0PWA]<2=9(uhOPLh@`^_dR,1B2YfX\d+Z%0QbL5*a["NS^U.WOJ=)ar?o25l4"#%Q,0V'<7&QDg1NZg3`#(s``k6<Ha1be!XW@IYpQ+k@DRgg!o1<tk3Toek&[^Wbl.;0(,88LAH:XZK;3P2\YO'Gk*G/,VIU,?!2)ng%+`,m$i0Cj6PJW>N5K0GP8-7T!aCp,=EMN`9!%O!hGElhV`Rh7"?$HZ_Cs7DrF;9%Y-)?eVXN?u@:'\fiQGbhC$G*MY!B)G;eAD8^%rG6_70@QcJppQ`N6@!'HCe5(<9)GTbKq$=@oo:u9D3U_&STn:+CpNm,Jb,N#<o=2GDF4Rea^/iPKj[36$eog&F<T54IhEqF_:Y(8%0R!QbK1.5OfQ:Z,pK5D0"\%0o@TG/Sq9fH#G;kCK_<M1],sn!r4?2(eLcCJb"h7*]ZE&sb)k8i:V--`d[bVHfe7@%5=E(I!2jiq;%67';b=G=/G3'(;fQ,+K-T=pj4\Lf&!jeG_I!;E>*dOkNl_*JjiY#5-#b)(qcDTi0Pnt<5gH[rq_qBAj4'5G/a\aP9-(_Z!<a$tD-%WUr=f[&r+;K`;W'r[^Au2F[tsp.iKE*mqjE-Qt+8)W326313.#9/.aq-3]72L:@gbRmAAE0P'h<rE^#DIYZj`)an]0e@QX3!Mi\B%N7&VD4b*elnBn%_lEL3k&&ok-RU_2mMWY?/6mSIX!sj&7+N0a97nqes="@C]CD*[['Kd?WMjISa(j*6)(n7[)Y9qd:3TF`$.b*]S%iVH]cT\tcS,';<lT`l8<0ZO;$!'/AqM!)$>6AKt9YstK$3(LD25MB-Obk4[s?0N&ENm-@NGj+Q5<3P#lR%%hm["8/RWZ/?Bk+R^!%U9_A:%0i9lULXn77WK\>lt]#OKodKCg<N0L5T'`?m:cFaHH:6RMOgk!389*''rj]f_1-9cc%3NEaPb(X4o7&S4!)"MPuQH]OEIT0%:).]5NE.XH8$Ru[lD@8ALg.G^6f`>6l;]TR.dO1J9upoMe;KhV.^jXn1_%>>p`>`e6N+N1I']]U"af')5_/>\!cqteGD683c<(mW%SSYV>S`XnYg8NK;.M+-fe'-EDPK9kkd7\U8FL/+8e'Oq4me3$AK>[q3B[f<L$m?YreBHOcAJGIZT5BAjr:dNlQ'ETKV**C^(_?bR%7Tbc)j]3;/n3MGng'Hdk)W]J_G7V`JI8lMnOg>s2W_@iZ`/?nslXLY3(eiF#171E4SJ>Y>MK)BQT[VQ'`p7oKL`@ZpBXa7PN)3_N%X\Z%SAoJZ:BQW5f:@tpJc9T5(m2E!m^.0@144;^_o4<#O7'E0?m^GUQeI9_k(1d1$C'_^S8@ad]>a:ahm*5bQ`/'j\.W#aUG3RZ&%Q0EsUK==PArKgYkZC?"L-.Lpp/Pa$48Ll:fYdbgXe%4tT""K]"FqF8aj]Xd&5;!l;57*N?l@YLpL[Ok!Y<_\/&Ggf?\r!4f\HJSW%;5<^d3&N1dT6(W,bHf]XW.7ka>/kg/G@Pt+1<(^#YN22g"Y*QV#dIKbb1+k#6bg4CBh)>mgQ2sr'qG@IA'7:/V"&kk7BD>IW4esr%b0cW_hDNKd]r>$X@:QQ^Y7/!<`hnDGY&ScQ:k"JJ8ra7OgW\fB"%,#(2-,ln&jFW3AQ9V"+_#YfN;X@:mZZ&^jSS(c@lWeClRbF]%G,CMf&R>_u^1?_1lh*lh'>:+7UIE(B;h77Pm+0ZEj=&SLe>r4&FCJtB.od0Tl-\^couq3+<U@%h?s'^7%i2tn-#uW#@U[K6as"t+%G,8=bb6Vu(+N^P`bl^]#J/^`@+qYF*.TRIi.#8bQnN2+oT4%t)kQNUGh;n^tc?X(7[6U%6!@M+!^#!,tBRpGS#ai"+h^h4c$q+T8%+^r6()K_AUhCaX'<bjT321!;T*;4RKN!<ObB%d+?fm:6n6'<+;JUucCb,%O[81rC/Bng#+NiALW6U:-YQeZ.+!"0CRj8^>UMFe5t%AkNpEb`4\q-?MkT0GenUCET7W^[l0$6k>d56]-ceAmBni4dmuZS"I>0R+OE0SPdhoR?6>>CLOU4%XiA0%sQ,L=A2:#-%FT)UdJ7f%][]kQ6^!S%B*?K@@*)hHKpA?%!%=Y?^94J<*Oqdk-ACjceDeZ:3"l/_=N*Of[le/b-o[eMU'R_DY97m(*,,RO4Y]@rU0$caI$e_S%=/8.G6(;l$WrnHJCgAuT<9V`"G$clE%*d(^SC'#fhV$uX9`7IP!EYqP,r?J7XFf"Z?>HGU)M>1JY8Kf'me>:='sc!)6='*^/1Djg%Q3)WU!=kO!JV-pQjRI=c%CXse-!)m[*ZHf14DQTOi]N[SV'og=*c[\Glak\h/XsSbaN.Ye=JAPa/4'Z&bc[CQ/eA4cg_*UlV5L7W%6]S4X56K"*(.(S(`t_Dfj6:#N[>;_<<Yj/+em3edbNQ#6EFZNM@"d)6c;B9I2"J$%mS\[CZV.d2:1C+=c&,AkKbi`P/4IZ+KX.BR%9BfY7*n+T.rg@^RJm4[D&DP/`!$K=5G&fF`=oeQT@'nN6BjIqK5RgX$KBYe#=aUFK:b0>tmi>TN9S?g48m*?H0-SoTOh!P_F<guo%QrtDTXMK2e'NJiJ+-5(iK,JO3&M&u?M.<po8,M%p"t*-'bPi`akdj@>S3/K'OQ"d.V;ro/3)BrU#8`Lk63\]o@'S.F#7s/iX-BhQ%,]gI"TuT,]"]]`+((W_`..B_-MGHsK.<\%b5WEU`XJFVs*9$&^("B;dDV!4lJQ[]?;00%n<l!T6O?pd1FGq9;K$k7u@4HGd!REqC%2KFqAbZc)!;bjMO041c$dAk[GVUrIfPBp?:bu+"LYd>:uK)1[5/G^Ym&>L"0DRA=ZTV$lGj+[H0'<<d0/qb)oW#:kRS7fejnC#F]%XOm5A0&(2X@U3Q=h6!Vl6qA3E=Mq##*5^#k]ge.+9qB4E.8MWqbDh%aCW,3uC%>BM`ZH$lKs-i]f`;"fb&l?!n;OU)c>2*1d;3?L%$aM%@G\GH`-3i%gCg^6IP*BM4eB&&`j\/2\N^^gH:f`GJBGA+X%SE7AQXM;M!n8`VGnqpb$43+5LkX^NPqXP#R+7\fUlIq!f6s;;%\%MNL?W>B9r2;;_.Q_*s<874s5f![%-#pdQ#?rDZF^NKK\QfZaGaAMG#8Um)r0:WTCb+YkRg98jqoltgV!t`YZbM%/N(8S(il"Cs%]]3i,+XhcHWgd(*8?c]LlEgec'\VY'BJX'R@C)+,);/V6olAE(1[G;l.n7#^]:[Tkf;uG"?&2\/Zl`_>7(a9A8(\H&ZF/_WjDG)X%N34tM2NA!BTs>DQBJ,Q4>C7%g%1o.K!A&+@/^;%#[Ap@R2?;]3meg$934>3H$_bLE&"J=d.g\A1=1V"[+0%9@U8Comk_(2/E2cqk%C1PGH.&t"72?J=a:FLo$T`O5NMIA5m,W$-KA?PDHfEUPTNURnadB'?b)GsY.KFna4QoB3F[$`n#LZV+m'(VXj&buQ$Qu]5M):q>X%:"#*Bi%Y;a7*cfQ%[S,]4X71q<R-ZJ&'2W9KSoGDU*ZOc_6/F,gZOdYqF.MA9WJLe$UjV8$G8q`96P;leCdfC!3Rl"qbY.*BP%)0%bkE>C`_R[-`RW=#IdFo_].-;9Jt6XOI2+*9H!PB]*Ll4GqM\XapK29AO5Z6;+s4V[/)\Rt%VJ/FTtB,8Y$Ji/jU>ERqKAeD"eaYW%Ta0)#W<!!$5V+V(.X/$_4pja6'GR)(NHWqI0u;h"?C&O[asr'TeqL%VWD3[p7To>fWG9_hBGN[L2eUd4LQ@6jHFCX_0PY;"P)'QR%*kA!K'&k*i&ZYn(KU]#kX]_%`<,4=DUmdl:29(JS'GY9cA#s5,=MSN&9uORdA%Tk>ZVM*#h_$;qG^g%iJ:N*ep%i2N*XqW!P7>e[%(8`<UOCh/i,*Xq79J`?(=!$W'R#o*mb'Xogj<g1uD@cedOK]rY=[oS00FoT^&8r5?<CQMBqi7it\k&fj!u-j_`8_I=_dZUYB0rip%c%VGkfn8LS.u85uq^<`%H:\cKX=%oq/m_5<,8CXP!p0u+&/>KZ/l`kn,smusJtrE:"g\/Lfnc.@,ke`^,*LgoMMn0("-.T*f,9-m%"n_XW4lOWC&AV-%Ol_PT*dl(fV@Ca>W=9\6SMCYo6XB9pK65WSP(#sEl;b;4Yh2CRHK9e?$<336@4J:S_TLo6+`ekpLIEc)'!1FS%^*FZ`jlQf"/e[K)gDhYA78<+"$(j-a9geO"9T@H*Xnl^)(t!HDDMlD>]pOZ,#3qtS):=CY4rTr;dGaF8p7nqtOiOu3'mOU:"'!Xc%Cr+!8e;A&/>b"X^Cj^s$Ld.fkdCe=djoa9p&/AZ\@F0UJUQi(:/#%;PW2'LT.BbF57nF<Z4E2?;5:"N^.Y1mI2`o8hBKK]Kbb!?h%+sQ2^H_]Q/1j?B%F>?OH&@RTb!!lVD.Cq-iU@UOrjpKe!_reP_hQcMcA'rjfE!c&b":QEsp;QTB78$_N>;YU:<R"i-X*7N9N\?^,%L2ph'daqqrUYN,8ZiYKaAh?OUr-6n_E7'A_VLdQ5'[Hg*1m%<hG)T56>V*Wq^n?8NFR2j'oJ)Te?o2XN<N6q97jAHdi<]GV!=hTV%=E-o>(VAY=-rt+=m`2S*j[*F36uqem9u<@3p8XVEM\/cb2=6.\Z!b!);T3&;<'=0(=oRd$9'_8/lA;WE]R_'fd*AX<7*68$ci`8L%ki^D`_c2RN"e$buqs1bl(HF!Y(!ITI<Bt7OXknpP#c%n"TFG7e_ICHDCa]<:b$ri7>`#!Q=%K8kl24*Jh=tpul9H@1%+KY9$g&lU%504<N:Y,mT'!XbO'a/Sr-aT]In0lQ=*^D6mFRsZe%!LfM*&po-20OH!"g,Z(NUXb:_:]e=5+#P;/*AJ6VbVm"_=:&YJ1D_!CY-ZZ%<t,`cP&O8a'D(nU(ueM@YmQ2BK+eG'9N]*WB(ZW>c6o68L>e4j@14`E'59ogYBr00Y*uL,K>hEJ.VQ]]VO>tM,<HaP/rQI5S8$(^%T4bKnlSXr%k@!^3M6*B/FmL;8?<+k8"Y6-0QHrKD?(0B#H<TNr.N+nV[(1RgS1"YuTdcfbN+1pd&h<OG.>?LBC\7NC(Y,C^ICC?C%XWfSIm7]X34#"-S$[)"G/`a3?Y9q*DTp)_?mcX`c.ZEXLf<U8mcc5]M6:GnZN3ipK45-d;-JcX''-[:A\I7Ab`%K<sjRGj$`*t!6%aOjoo`?VkZ]OtP-P51pIQ521_84J8']qq,5::5[er!GtXdZnYXn(ruc8qaDaG]-0A9"UdB$Vi.:Rug5\Q)ui;(6>sq'@.Uo-%n[?%,CHe5Ce"Y:[$XjTNK+fp,pWm)i,4tKAehOp5)-BN8j]=3)cTX"UD1-eGu+i&/rN*'9pmK$r&25,pG#ti/@MAVG=sI&=>@LOA9@.7%G2uCDQMeO30#STZ@*M<'Ou]rQ7o+`U]+E9DI@;:3TN1bWoXsS#Qte`B<'^Y`;-+NXZ=87k&o*e)l"pc\+TbM=Ej[N'>Drep]ud8-%i5UcsOrZWN.S^a6?T%_k)j)&1%-Zt)-DBrAQ[h^he_=1V2?&5]`cR`g>*]dZ^tH>e_GQ#5*%<Cu#W86oW%:SBJMA7^LJ-GY:?A;D%=sR&QGEp5sl[bN%/'&c#gdmrfdC[UPnWqUT`!Xt0F5Msbn\K$@iIF_ZN3i.;B+-La%cKlrrA2PhZmld\>EDBu<\7f2;/OM(dM9/N%Z%5b<,B_9QmN=H3M-m!ti.;]Q9g!aYeq9me7e1pa%nSLi&uqT*=>Wp?8ug2]G9O%5<kh4!T0ks$'\X>j.W-N1'bru-e9jiG2HU@>%^g6?Wc-c=Q?,cK;dgo]k0V5FOeH129m4HL*8sDS0&]EB_Db+PsL_@4T(ca"&:uZ3B1p1&5fMh1h\cVb:eVNAPl7:Ec="H.Ll"l4[%D"9RV\-9o&D@B('*5s[7kr]Se%[\5Um&J#j3#/B2i4IDXd(B[RfRr!!!?`Z;7+'JA`B3Amd`Z#ISa,g&PA!U_W4c>YR4@JiOG'4e%BJ&#D`?Ihm_#^esK7fYH%Z@2)gTGXtOa,t00>r/RM`=qJ8%57XSm5WT2dJ<sU+.FMbLc!5X0q48FPCpr2!SmmD^jPeO#hWS*=]]d%>4s'O)^RFJVR(L:3MaM'=.\?Q??O1qA6RKAdM^>fK"$:lTF=5Wp"K7R!Ac8j?AXdGX;f)T5d/@tWE2I+K6]^+HIgdWTPlbC^#RWX%[2em(ela(+hD#[Ej)Lc=RpSX'dG:%$Xl?E!C%Zj.H`!"_*"t0m1@MnAh4dptAA?4D$1#&'i=E3X;)F=_]>DL&:E.OaV@YFWd&'e3%4C8K$X%Ck_'C/\si!q-.&@tpm7b#QEN='2(m<ru]h2cN'#%ad,o7E60HdsR*(@sA`JV&c"Z9j"A:3JI^UO1RBd@AY4Nkt-`)K@NZ%^,`4X**#,%q>u^TD0'K.W^AjhmG%=^H1-9],N$;Lh(4('Tk3DEJGJj)BpMmta"DQ?e($"WS'`EYgh<D0lLCIH;R77q1ndc5]2Y'D%3!iLMF<*5]Y/`#6qX8*"CoUL1.iSP!<jGs%9s%DMH3SN(TmJgHZ,&2-oemTmWO3u?&rf2ge&!Oj0r&[?!%Yle..OEJ%6R<fZs%A^%1NU3TSQ!N3WZkW(Fj4^0^.87e</^f"2!-?AV$l+q#S]J0dNJA%<9R/AH)6P.!a*:#:a6\'<@REIKFe@c+MLH1*ZG=ch80.da683%%0L^E:McTR->WY9i7JDj%1M/$U@mX:LpfRm8pN!JlLq+a^805lU$tITMMU2sdV2q_s+`cR32s>Oq+O%V?f'u?n1bX@HGRXGc:"hSJ%eh:k7Asd@clp(R86DFs^qBD=s[Kg=A-"4Y]2`u8HbA(T(NY52'[YhUldi!Gi=L&8Jqs>\g"!D#cYJ/CK,dWg3(7LB0ZJrikL3g0<%O6";\@<pLmj@#^(E!jmDZ"HdITK)Xq.2Rhq'Sk?2Am.#X1f'PVI0%Y=r42,q[%&S`Qp77p_>#n@o6lK'2"%@_gh>YWT`n"U,OEks%Jek"fTu$W$fptJ4NV"OM7Ud*39Fm&nDds>^gc\)Q7\.on.S42%=B__mQUC,L:LH6md5W8j#9q2J#nqoCID[.0Y!FNV@#H56.e&'f%"pK77=fD0g8>]ch63ECuUbNVoKKoQ=cS>0EcaGhtFGrNAdMqQ,7kf,Hb!8kPDMIJu=9VlH&E'u(#CLURkF/ODQAR2Sl`k1.7?o=A%q\tNN)NeYIFE&MX9T&\kZ(*YG*OD')$bGgagYgr5VercM&aNS@\_%W`a1Ji6NQnSt&=g&f&n25.Du!+?il568Y(UQif*C?uSTd$-%s0p[RIe)R;qO\j7S\;LZEVo[oPInHomRi0$D4dA+c,B)KldaP-jn<LhhL4<?:SrVks5ekL%k%cNU(MkSeb#28:4N'-8bD*kDLT:p%O$C5#)3t,Q>)!nmV^XS'.BD'DYdcZKO([I:8G*22h^UW/mOGc9hYbb'63^1'!TdeuoRE(mT/HgPRs't@V\5V(0ZC4:po44@C-ON2%e]jF[F/B>+j:*LmJ!"E3V_IEg8ZfLVXNRAnPd*[S$S#An)P+/6SLAo6j^Q]rV1c0c(!<pXY8GfcS,%Xn/R9u%ff#$]*3=H;..(uV%R\5mB3a_5lr5F;d%u?*^RX^!lSphmoa[go&1dI3)WX>Mld!Jhi^9.,N:k0`#iO%MF4\`q=ji[C(5FLe;V$Qr/5&_"QW>tSk:';>Q%1mZP_qI'Mp<)Hql%gr__f9@W=ZHH/V^G.0]1d'9Mp;<U0@jZ#C<'^@e=;0.?!D@DL&`XD:>4RsiO#.$I+9gfebsj;B3t,Of9:T]s%m>Dt</C.tPr']s+A3o4*Kdm9P3IoQ1)4MI-_p;7:4Nf`D,'3<_IK4"+"kaRr+>HW6\g@Sd<3`aR4u:G/p"O#o?t'6CqZb#2p.Z<T%Lm"X;nfL_4A6B#Q70)55)j#rb"9jjCpK`[)3F]9Det3TJG!-q`P)U,9>A$Ur#QkWKc&&NS_K:Ck7&!@r\JR\b33)9eM&Kq9<NmS.%E<fhc6P#so14+Uh*7-$!X&R8RTLfNYDO*[^YXA=JdG\Y.a;Q>;P6a&A2,/=,3TJC`IreMQJA,s0%-DlDVkh?G$!p('@9*k4M7Nfl%N0Q8PCTA-W!N=/j^b8%^Ji]jXL4npMOpWW#3;9bXb!EpP1t7P#"dLVF8'/Ofjf0ffYCHX!O4O7bMEWm(P<g4i;c:f'I@%IFN(S&Y%nc38+:<1Y(Tc>KsGG>g?^)lG@cT:u8JB"(J$be%&*^:0UrBdG#hCL)0,V91(!-4"DatFrs787^"$@R^9e]l6>b"tAFOXDS(MmCM_%WH\_INWpd*Xibk1B,l$e>_)L?>TceJ?dW<o+W4[YAZHks";>(e;bQU>mEVJK$uQEp;(4Jo<!6D)YYRX*q[o(d1s3AM'd1cLZii0l%ST;)S3*@!t8od]S;0fk]IWtX@1G!Ma!%l81Vtbu6R&[/$c0^=57@<2V-=s5_2g?Xa#gCC\GdpBZ/q5KHXQd%VQ>!ut9&AKs0"\&g%+efg:Y>At(mR@GJ6J\0if(Yb`^QW_^g32\9SBfjuj0#8o9mVPA34159V,^#(k%WQWZ:p.=!,(sr:Vn5]i!V]Ea,uo-.2_c0aqiR+%VkYe:#KKg;dg(i`+/gKZOS1Jn]%C1AFjoZ6-dWh'$l+Vk/m^lTj`hI(C&5'H\>]+(GA&M2S<5pSClP0LBk2Fqghp7dHF8pgdP2?E%G92^WW+`((+J2&.34P^YQRfK).p_:2S0a$Xe43\6:E"ABAameX\uXfmO2`Xme;6IP&pT.ZqFrj/3n'>.QEFJ`KN#16GWCsaSuA/u%$_RT8OMp^:`Us)uW^]jG59Z;0RXZ96\KO\/VZb!0:35O?r@bk6g0GT=SsP>%OnuFs0BR1ji_LZoj?F_Ng"j>kIX63eI<DjmC@ec'%oF=e@N&A8[H2Qp_melA'k+28'HZFH/ipr<!]+Z[jmcLEG_4OO'5*/S+HrM,b:it87:NofQVn"j%\&.9oLE;h@Wu+(`9g:&WW)F?[%%Sc9'i5tR,?F\!n5)i)@AiN4kK=,lg.I%(t/^i[I<*ZPUO'<>(`3#%MDVI\Qi,j!i7"gi0\aiY;EYP`[j57s+TPX;;nh!]2Z"ci?%>rK1/R'^[#p,F6jJ0JI@JAp5!Dc'Le09/ZP.g<KMa.Pb$d+0519E5"E9AZ%-!QhN+HbE@%0DB;`3L4jr'^Os$82d2`5^9niBS+&O%SWYJ-3%@8MFks:[!nVK>J2!:\YGn[^MRe\")Y(CVs(`Sn;SFhPN7EI+EbKH/a?3n$P&R2uYa`g28"g=`n6M61,%.?MbpjS^&)aGg%YP#M'3YQ+t0b\oVVgr\*24C+i$#sB5rB0uU"tUib,0kk!)._n,\<cOZl6UbX8;/587QP"@WQjqZ^cIB$D&+pgm"jFA`%nH@s)!]G%;J$&>%qnFFbimbm\T.2$:n2gu@2Ns+jAf6f^I<-%DmX;E6pP"[\Re\2?;S`p[D3(U@ElsG!&#2j<MM6KUsAGrQ-k<)H"_GF0=sZ]%X+Ft&=;(b"7A19!VANGr!WoJXONI3?$H]Sc`PKonaZ`+-_;N;,Z&'YpCX(!K^d@V+aS1Os>$,$!_lsra$@4lfkn:B/P=D*ZlK0oO%@E"VYi<^]ge1bI,O@WYF%A=2pgkK&fL/GgROrAq*n5=im86nUlg&148k"I/d!J9%FL*ijO7[%O]@Qb+,g*fXGdOD)$/"%o622>Mq%oVBtG"m_ddl>k8#'t`bfXQ_$u_Il+6/PWc?E7'60Ze4$-"Kl^^=C*O7l=Pj`bZ[7l;/1>$l37StfP_>Sla-g0-^Zd`N,^gIg4E4S%`gK6q#fq#t4^+o-[O@Y;dXklZ]"p]Y#>5oM-WO"e_S.Fl`/%[[NE"_Z9@uU3.:0om;3>4_5*GS`^Xd<0#.m/D@*fhr`%O-s'eS@U%Ld)$N+7<DQ&W)E>lE2/l6N`VdI_BFUFu$WGcF>SoXB$<9\REb2XeO9a.@(+AN%@a#/WekO]/uYeV)_hB_/%iKBhrgV/%<\dK`WaS%d"!qf9N?X/9k9P"hL`uWZ,VWIMo+L+9X;i"OFn"GEMWrZ6UiH2$F&nr"HOip(p*j\49gXi(L\P[&#Q056I@!o>`tCaN/.b['Xb+s%KoV*EJ_Z+,Rj&!Wcd8W5&7NSq@"^j/TI-h]"d]d7MGQAMNj]<!:mDWX1$19u-\u^i!CR!!CI,4^g[Z8EGnR_#0OmE)^+@c-VDJFK%YpqH7;S`Ag\E8Jee<VE>kH.\[?QWRjeu$Hk5bC5mo)Pq=g=QsO)_A*X(tAO6A^r.J]/9dL,C.'VY*UB4$lfg4\U9ARXS0=hiIMai%)m#]`_;)6!/>hCb8`4D'C>*G%/q[M)_kER?NHBujOj4d1BY/YOC?5s?R>m[=7r#k3c/!._K*[6o$7]upW5QM#,Noh'eI"bNc8&ll%ar8GI6kgl!8CJ9acq/iZA@/"?"hmfl)0AtKE"T#4QormXf\GOt!OW!g1eF(-ar>bC[S153)-[9KpLk*DZ(D5*@h<JmQs12G[c@l#%jMo7b==hs^F2BoIWmWb_^29rMKVZP*>?dS>@5*rG,`Do]CPT_Ce__^D'2#]"TJh-7`H;,TbGod<"XAC3Qja/Q)q^/W(HTRtb:%4r%_C"rSP$4oO7AL,Fb?"i1S(\M5a^e:(YkHT74pJM%%2Y<<:YF2%LPkN%oAKMtD;EsI_]s\o,uP3u-=b@h.k8E5oJ"9QT(d8/<?ZrF%)!snI^g0X=l%^4^r`je7m!9<"4(/nglOOL9:;jhEp;$;I2`Z[lE46^P9-;l/Ebu@R'f241CFIZ;69[KSCHrf=ATq&kScmnu8Tk;N%C*H*t+Waqbdo*G%G@XO9I4%+Q2inH*i/As0SF[+>BVBk-P!J:q>9'DQIr*suEWoDM]2Yo;QAu?>A%E_e<BB<-3Wl8S<#&+HPba2#%kX,$q3QTmfE&o6PJ77F@cj=cOjkY<HW5>AZY9!i(_Zd^W;V,^n;d",U4VYAJ"V1u[A)uQIhAIY)<`^OY7<g]O5@i*7b;,ck;*s>W%auVsQUsY]_:8qVk;fB_fUQ^#2%agWl,A.]H+u_[haTO:\jG^K(B"R/)UW/rH.6_IJ7KPGXZdOkW>99N0O"CYmk>]DSZ]uPhI5'75%";R%Ynquur4!^CA7.H?^*2$b<OA1HHR?RuX-!-9SQ>KW@'G8YR+bLeR:2QuLSGn("Q1\?+A=$?)?9X:W5#-*.KL%Vi8$<J#C.p$2%/$e]'LG>eD@q_jYZ=YIsUQ8_Q#th7/&B/m=#k=4=Q=LN<@0*J3"BuGS0ZlO9)mqfE0-01i#GWX-'Ff+%L_9pNEftQ"R"bdE-W1]k%:.1EMCR?;Tkk["<231.U67E?cQq'068tIE:kbprebCJa!&=a2Qh@\QUj*+!DLpJX:H42"pMcIqErIQ-1"=D"%-se<oERkHsM=B&=%enk's?YsFM6</^HEqUukR/!\!=16QA*R7a8kb<HM<"MPEAVH,E)Gt6)d($",QZ[@Y:&X_#_6O;\4j\eoXkha8]jiau)KiTdB$X7O%"gDX!RN.1;Vp*4nnX.$r9VQ)?B44Yd,V2b)=r0.B&Cs@unj`fQ0h4r)"e&'82naMK^mJ*:G^"!Ak\_bV1bpI+Je]Fk$;h*":]]'_%\iD(`!]`(0R0C$T.8fasMs&BC#a?9@"O.tY0?SR;nP%G8n+B]+U/&c`45ub4S=@X/@#a)t#J\`nNB%>\6>,__Zmk+NnSXZ!BJqcC%VeO%K)F7+Q_D9"Pqq1.J<Op'"(6q+s2JWchFg7klgK^,QYmiBe"D8P<W:%[AHtQtQ:`X4]Xr6TIkq79Z$01-5CA6%/iL\73,;.]p%YS'5Hhe:m1]A"[FkecTM)4oH9.q\$8`SVYF]P3H6_L)Z6+[?ScOVij5!^41l!hb5(4Ln<;EK8b;cfat"@V]JEm)4nLKReD73NHnn%R^r0I0?dpC.,f05f77Db%FYNG,gnST%G$mF74&]h'(+r,G/MdD?2*pZgj-)m1nQrr\_4]@Z+W2f^?P5"hj7L;cE@]nq<_6BgMUad%)YRmGfK@hMOS&('i2Waqs.l_:P%\D,kbs=OJm/LkXB=c8;G1#$\SFP/&?;>2Z4pkZD!P8=-Ze*dg;FC8<qDSVRdbCU!#*Ma6"Bet%euQO9oa#M[!""H)9_gYk_aPte#7=YG8R3sej@>EW?u=TIMqGlf15[o2&e#Q()mk2"OA31(CR(Ge?OpDCL`&[aRB3MkM3h(QC)#A:%Q,r9^&Oj*Zet]t%FmjIO!X#*9Sde]-=S5N*oZNY)%.#2kDBSl$7Z0oaU,8*0Ls]Z:`N8FYX;A!>'3Ybt=qG>!@9]iRntEceCOlcm%jDCkT;7>e.X*$Q0113JL'JqM7Z/'pBB\*KK"-(AIAQ$@iBZ#Gh-\Nh*JEUS;[]%Qm.j3":aqD5,JJ&d,RLfpiiG-eW>g?BL,gd8G%h&9ZfQl0(r3@iiFgXWkT!?&$(&jclNQtgha&2nMb.K`l4QSU@#<V1$"HUNSj("BL!6-(b"[]$c@/^I9E4$']+Zs$1;/\lTsS1VjJ%e]MEiR^9e5?p\Q.>!"7h]%bcH)?Um33GZb.8_a2/QFJhfWpWk1VAM0'a2HHDeh7>kJ2`)'RO.o&'4Sb/L=^W\2=fHN*%`n+^A%99%>YKIW@d6f6778DDJD&+?-l"#NNR3r-Sa:)sp&+:kr8_uB_+j6hfXT8X!/4^7GXJL*Ce,NRfK@Z@6c+AL[P64UKH3T*@Qn>QI9oA[%`X$U[kR<?ri.tYP@S##Nd?g[sJ1p2ZGnogC#]VK6_76mf&oKZE,>NuF.X\.^X`ZSRVK/pSqc1EpMUYnt`;1UnWIT#-+Q(RmfT/#!%muY,O8GJgl\\@obqUTl>kC32&`2n[e5<S_c9rFV5I.:\Bmmg1RH[C)5i126.f2&lUScAQIlK$WA\+s]][b\WDs)/kPn`]&nir%Kt%jQ?:6WL!JLp%?;a:#=[\D16JEEjp=A:XOAF%j/I%jh7Do55O:"ikFt]1n\Mh2cmEeJahrI:FG/H*ETZEjSHjGftFNN-^$hm;=r=9%r^^:OX$Y30VL-\1Hjr-Og/f-Qrb6RsHb4RlioFq1(#u;pAcMSelKj8>oBf1c]\.1_[jRef.B_r$dGJ3tm[e>\]fXp'=5g&1St=_C%?_3n4=FGS&]/r6jfNKMsXm;`4g2gk%%I[(Wm&n+Y?YVK"8'atSVq:<omB?!q0A7!1-+KtXf_KF]rV$'cQ$mti]=tf-I([/XbAgPJ%_R,Z(QnHO0mG"1Ms(pf,Wl'NTRGL]Np:m/Gn^=GJWi>uUm>Kf<ZgGYgo@q=SDB@JC0jE_BH*^W!LM8td1MloGh`S>lib=*_3(H_P%`KL7n:B,%[-fsbN+$Cl?)\,e@qT"AOqtS83m]5+3^\#HmIJj@Ea)[ZW?!GSdV$*g#P`eM1I\o>#_]p1neo&h$SrOK[e.eEHP-QO?%^X[2[cNi5iApF<^fVj)d09'r%s6)ZXoCT3s:7D2D)qHnYC"R@4?Xapl]]VTBIic(=$hE]4g4q51Gksp"o6$+%^E)cWWdOf7,aca=%#>Ztn1r(2H:05kiI5blHO,:J&N8A,a(,!'&hUg_/p;2"4[L(8-`6@d!SViU`bkGS()e3/9Z%5b98YlF0WQgKUD!kV1TWH#7$!hKI%&Db%5H(FiXJKpP.CBltGIJRU3pr*1O*<-s9J'%>nkKQ^;iE&e_]kjR8=d3(gVHt5(*M36[s!*/"FIOcKroOUcSi;jbUq2Zs2SYA\%9`MiK:,bn*?Tc"Zb6t4B3(D-6fDaL$ai\BXQ23WADrgr36>p5o,1rg)9^RFD,ti_tLOjfb_*:N"qWUf)s2fh-VY>!gBEoFXh/1Q,%Ts[<a-uP,r;ltSu[qJ50Q<Wk\>(s@lr,u;ke66]ZJ'*Jn:CnMie+E-JEe:M=@Ql2Seda#MnVINB#1(q,a$arZ=AN9P#N+)>4K+E=%+1kIlQRd&lIh'3iZg7TQFFOcU&ECS)/*+cqKK0TlKRMO!PgOHRj]gQm0>>FWH5(,'[/40O4cSii<Rkej1A?UXAQ$W\;K<1Eb6,?I%Q`l*i3n%HBQ6.Puh<<S\F'BfrKt_R`^\6_-jd0]OI!YP;UsD2Kr2Zma0<b.(S"ED\4?Yp(S+kt#9Wd(IoYKQ8Vg%<2D"7D_U[-)B%3hUtBIR38YcZhrD^Y23ZOhN>=?&SW&ha<S7J,9!>&&!1-H[a[5Z+L!_Hg`21s*X@a:<QCtoJY!o:Y0f_Ceq6YB@F@d5>!Ztg?)C`%`E_D=Wd=Qqk3&3=Rs2GYa9)50%DR&Wo*:c*Uc.]+bL-"5fo,I6"5W/_r'nT;GT2Xar=@[F9([?IUQ;8f>YGfCoAkoqiO^#5h:-VW%q%'[Gl+_`'gq9p+T$#:^f%s*<3]6]GBp!8hq:FBg#@D;N4utcP`R/9:oj9BQr&dHaVcW4ZlUH7#5_Itb&,nH$hg8.sKkT+t8aSZ&%hd5,UlFV/X<-J5Zr$]Q.D^_Ke!Z3*\IIGigc[5,ojg-)Bfh([]pn!V_-TN42(//sq2J%j^.e6%mkdU5%?ZgV-f!g(spk(eJ:L?p3%p]l7kH1nsrroZM<m&o6#_tS:i6_Z/,fD0(*Vu)#n2cf\oP<ThRB)6)>h<oahmJ5SW9+UU#H2PeXA=>lpkC;Vi0O:>OEcst0Rn83G%G'eN/r"XF7DaED+*hAGFc&aFh4V>:BnZD]$q:5J0)V.j7IsmUCFe:\Oh8^Rc^u'H_mGIaZCSGbB9Hqu9lj1q)H'N)E^KoskYMbYU%T\Z4['^q[L52Y52%EH_;ZPjj<64kB-X)6!"=G[of`eVfGZl$QI^8aMCTQAS-q)\5;[rZWdL:@"$pQ%]=a6rm!mc(:V@G?$TMT`c,%5Pt&oZ^'B&M)YH0ni_:lqsB[@((W:ajQZ()`J_@qeb8_1h>W0MFTk[lC/-B/n_HmGgKlusBf>5OfsC)5pLr0(rJKrG\c7b3;g#df%<VjpHkKNsWm(u7?[s+<;T:_WZJ,)"h`'51+^P,r]djF#0=9Jdq_Jap2GrlJcEo)0KUTo#YrP`Zdh7Psd9@pefeHS,8ER-8L..CtU%m<"PCH";-af_Ro/Ytjurn%@1n1;B`WQZBG/!gb-dcVCpH^0sgJJ]goV*9*'1`THkhg)(#<MAS\[K2bO$KIDAErSS2LZ"ihT>;_gZ%b9g#j<Kg#J`HU<L;MY.=E\@:ZO2_^5T']:e+?05=(FOF]^WtjOg:)DCQMNO\(%(f6h_0<\+aO[kmIf6d^=0fuN5Ff5lS/`rVgYV$%qA-j7I9YNNdBiHI2R0qJT5kL@1,1=Xr$8+ON1=L=!pdR;Vm>N*n*dDtm%1U]iF]jldGX0%^QJY"TRT)=hYm9+?LYpWGGgei&#Z+I%kNTr#GKThl:G6&@=O?]/PMPCa*05uB]"U0bSN4f0:<r[?4eMB"2qOgC:G6nf-+L@\P7%*:F[?&Hajo4hmH'C2]!pgJr`7lX^[AP0%-g9^+kPKJMG:CBX&bChX?R3A\ZLO!M.rP]]o4IGYr_4s&^W'F81@[do8JD)BS2AI;`=4O`eF2G1GU$GipI\e=G6=E-8&3q>3hno%%h/5Ej^AIGRrpbYj;g\$>QeU?<`S'C+YI;(M#NCU$(o1k!p-X3ql%.Wb8E?H$^J269GW,RJo79etO*i8bR<Z?Uq2g=iFQ<<`c\K!s%diQNJO-sI$I2F&'<cUu]9"o]]`Xh-prqPPlGCFsaI_,@9r97-(&Uge%ocYIL1iu7>];t>eFs!6bs)gQ)GuiqT]Q[taTulrd+JRh;%-lD\KVCt#YYhYhQYKM+fs0c@*PR[ER)dXWddmm46qig9bT5AmdJBc8,m;X5>3S"%fG5nHrJq6CbpAXmTc,Ie+o%1),>5g^73;klC%^Jt.$9>)WYb17@.hgOC`r4p&"gYks(&[M>'22E'\S*<]j^Gn<eq!5m$4;s(,_,6)WGi,NM1UqsRf*_$'Kql1GBNIQ&F`D/Ci3-2?%e=f*VXcqnBcT\tsh@Voio2Uia^[::Yr:a:Xq8;>nr9X,pf#,[ho?2>hd^&W9^T['C?El#aqbHm!W&8O!EX)R@G6l%aiGZ,r9Iof#%op5fp3^<N-ghP`:@J'k6%m0!r(uL].isi3"2[e8c4&scP?!)$eIS9RSe=mI!"Qm>RDnkHn\5tN']kOSp;!)iQ=X#ZP]j62!hpQYD%$;$kJK@1mkQlNsu)rT<[7FMbW4mM'slea37.";E4l&/d:1OQi`h+i^nCb'oQ!e'YZ0du7^pVkt-q%\%6T)\Z]hSnNYG"B8dlb3N)%`3;'`*"9;^)'I^@"2s[9#)K`p4oNc[qKb*?:JZ2t:S5@Eeq^`SC:@d`F5ML:$<6ja<nkm@o]:T"jn@d,<EE/2V^(uu<?ph+NTXA!%dij;Jd[o@tH/RcKo_D1"rF0*kr"e+5P@!HkNTc-hV:(b090L:5-?AJ?fG-E&S;=<sGsl&HW!l7F].OpbPYLc@mG7$u*uIr%GIG+(%FKE-0D6Gs*VE3jk0=JL]_*.>]qX34!2t"_SoAe'jET[0YF+1c"rhpjbe@kkJNbM&aq>Aq;Ms9+@j)BH<EB)hX*;/(K+*Ccd5SU+<%1q8n#?r&^@QceIL:`mZM8:7Ujo-"=qJ%c%9!58S./[lir0GE_;[Y2C:*eW?fs)e!E2`9jpa"@,m[RIsn%I]jK^Y55`StFiQ]BLIZ%o$<@gJUTk(D_F,LL@QrEJdm:VWAk(lD+p#'UEDP%^CEKFID4BPr#_-pjMf*o+1mO-e+:bP$epIV&Z23j^=i0R(>[$[NcK>>A#@NI%lKmSBGP9iLLXXq)E-:lmP1dN*,MpHg(YcR6/N;\LV[k%5VVf&X+.l6AhVRWpB__Tu;rdV]%p%,>:V4?Ro5Dt$M-\J]6p)sP(&F)S%.Z(5'a_(KMVP!G9T?&5V:>G_FTV'*\-eW?$Qd!pnr]="mr]pM&P8'u@s.Mb*rF@,V-cmI-s&cP%BZA@IW!7qg<L-foaIpesK%1U7%Y+To[SCd6-dr)e2g)U&sSMf[EB+1E?#mI[$>,>BA]2kV-m+_1]Cttaf-l6-(=QA#oYOu?drD'-\lW+T.ePN=][7j4g_I*?!:`c<E%2A"Ft/XRLg#b%XDhGGu6)?\OR_k[2EkcfKB41T[G`VB0LF'*ib.nbkkJ'tRrVH/qr=8,krlFU4sC1.']3IN<%o=OV[BiUkU,DK&6%RHNUDA\"AHrk$t*P2@<nK5%0-Pc!?FW4$e3TN7F!4*AjRohfS,p;rpSD3j?o57:ZtnU#HXlt]>4mr:8Q=tB)hY]7YFr586fJo3JK%b-UQGqQ]p*X5EbLeGUd,>MbZpMTl0+e%YEs;,h:tTC)R*:H)Nto>u*gPB6ZY3qkgHNVi?c]=lk0GI#tNpu+jqRMW@M1r/#q%pQ#]%SXOURgfMb%AF%0lX5!#7TZ^ALHA_IXhjusDfUcDS':@_>lLF-OWoiX2f3Mg2<+b5>drG.t:X@1Y$PZ0XZ[LrtUGtF9F`W9i*oJLr%+2DM*-dQ,$"atCHhaYGEL10]!a%q0UgQ-gT_8]QC2FkMDU+638@#rsk*3$%5]AucqH_-c+U;tO"e1Qf&?</ar_XA#dd=1.kV!V_h%,OVNUoQBX=cc;YbpZ53\ZU*dsqfm=5]"Pd?q"UH<VeSDEcZD"B@UCKgnaWE7c1T@g-#OS7pLLi")&\bQTmJaGQB=j6UjWK)g2"j&%@7aO$P_KX7B6%[M<0iAdc"Gj1n>nHS*hRA6(>:kGl-lggT3bl$2?/GhVhu8,"-r2MHN3j6`T;1LI/i9qjM=Xko.g5.h$*"\h&VFQ%rqg%Es5s/obC=g#DpG_+(W?9MbDWF#^dIr/>r1aAoTT=1s8*T[P=d,)7^`*c5Mo=MGlIC+PMPY;?OJKqG:.$%_uK93pi"`602?]R%[-N4Q]t8\3)Y'B-iS,?+T=6SRcd+8iG2"N!Z^A1,_3;Lqj\K7=8cBV(l)3j]r9X-1m_lIX^?#n&b$CIFR%ASK1Z/#CYAXC3FP>l[%07SGDE7a7Am=#93@Jr4]LS'"bC>GBAiU,CR\Y":)qto@:p^LlPeG![gre:[=ARkE*r9A+ph7nA*eb<N9)(r'f5Mr'G]RO#7=,09(%47!nis!DBpf@UJfk/HnKK/E&om:TdTB.)X)`VJa/iqVPoI!Ya#GIi3`FQg3>:Q%75dO+ga9Gb9$_GgB@9_Eg\gfH/r9m6&(N\S4Y%^%lDMDk:mt&Uf.q@XJkgno%Zld.ham^-"X?(q'6f'iH6imdQNb9,kY6e^Nir8NT&kIWkJ5medrR.UTWei9Ye`HFE7W>B8:i8(751%W-s*Wc"h'AB7D%\e$48jU%]K^@naJpMjqu]ajm^6-dTk7F7\C'0m3;CO*B@5mI#o"L.jh$&'iJh:7e%aSDWS&Q;\]b]jTWcm-^HO%TBsi]Vq2a:]8b_7T\$laj>6@I]jfZm2D\6eTcPg)=p&)7Z>76Kb<B4&iTjtEWCt"`m7sg%Dbd1uHMZ1a](<6;!r)IG@G&WFc,n4R%2uS!sie!`0;IjGP0.QVAMn>GpGFMB'DXY$Go07<4bpQ^bGhY#<c(=b(p@e;TSoD%)O1DVXT1Y[0D5WtDq2094iQn\SNW+6=gp>fo%k1)Qnna#Sqq2<GaKn&Girk@Vg9S`gPhoR^fgN;&>`KJ#YR7:Kf^0p$JDU'=U>'k:0I_-.sT%ndt_e^39DbeU3XlRTZRjTlWY&3g>%lgLnAV>gD9M\B8?S)`lPgC'QOh+DdYc`D%HY41BdgXEcKDEU.n34V(U:Q!gMf,F++2_E0R.s];\Y%=LIKhjAIDl1'<7\2h=$g62"%^+Xck#2@&g(YdaT),bDIJ"QNXrTX%8T24mPYC1eHH?);Yop1*b\"?mXC$`:?&)ZhKp-5mQM;F,^*d>Dd7>$o9R$[g-k3:p7j$)=j%m;=#&j_1X`YDSlU?!Z@@Q6Gj8<<r\RgP283bdu_jX4*CLR82IM5gE\Mnb!Fml/ki)U\E;&'tCt<Hh!7#[kFf@oQn6&/dfs1]YD8T%'nKk5Q1Ek)GA51-=F</+E]O9aRiu^\qb$:B,tls!E42A4IearYme;5(WR/!QcHC@n_6W:rPI'XoH[gG[SsK5ph7\N>Z+FM8dCj*D%BcjkPO-"eOY-uYO#]+j+Tr7(\#3U@!ZJfXrh,h^2=*K^C?Tc$8Vdi]em,DXOfsP[!qdu61]:ALEeP#TGpTr&h+'kK)5/4f1m'B3V%BYSTX?+WV?6Ku,JRo_4h1$SNm!!`j,qnr,Dg$2WehR31p8mA?'U$Sl2lYfR1=gr^'ZFb$q;n60=H@&62Rn3cI^\[<nAT-FJ4kX1q%4/-9lhf>[5BA:br=RIf3q_r";r86+%mjO(OV$5s/qX".>^*Q5PDZSh0Vp+N*fN7?[GP:6<\dLb>gp_m6bjFZZeU<?Qb1p6llDjUU%[l#UXEj:&b`@I7$Ia>Br;V/NnW9`:q>0jnlSr2<.hk&^iaf*_]]l+J<EOaNkNhFEGRBre-]18`:4VcJqI:[CrhH\soZY6:JgZnLY%Z=tZ"6ognQ:XAJ^:MuI'jIt#WMj%@jkS8t]h`nlXgf$)YhH02_H[GbYl=Ik]F0g53=1A(h$5Il9bre]R/,&)*($giqpJgk7/S$?\%^0)m0!I=D+92iCmb@r>oSH`dJ+-lfFNKrsm"7KT#],_,?4:3_jgQ$nAL-nE,EQ\8gZ#66.m8R'G9HZ=hClD;dQg=OXG8FHJk2u%"%)l]4=dE3K4E%42To4">=@9&WUs)p=W8)F,h.?CMr#L;6$L?S]Pf^`UQ?,qG4js%[N5=+7&]8sYdJota\d`VnJFDml/U_)s3[oD,M%E/1FRmH<XkduJ_Hq9*qA;@+0t]WZh"]RK_9Ub6c&CK@+-cj(YB](p#Z+.h/'[*171bb+7iKF`V"C\M"NoVm=,HjW"_p7+KO&UQu`%(6<qm-AM7)R2E<qC,5R$].Y0Uo4`,D=;O%CK>N`h'L(aj$EmnJU)NGS!R30-=4b\"YrTR..gDQfpAJ#JXp&.UZ!R';_19o5i3rrP%8`!*R(-hWekedpHH@MshN1rdjo!a+@+9%=N]RBPKs4@._qW6sS^NfK[_NTKIhs^NIGN(i7oO!)TrbZUe5MuJ,-Wg5tT78h7lG*+t%itqaA0E0;4r=?B!rTuiImce3t0(./O:O`2!hu;Z^DZ2WXJ'XJ]rno1(oAP2tigMBehY6Wr-_J-Jf6<fk4ahLSci!bA^3oLPJ,A/B%G.YLR\b`4^hu3;up\sL1s756m:Ts[<J,TuXGP1pL3IC;4qa^\as8A(\qV/db]:5G2gYmY[bMW<:o=KPmo&(n!d$1`]OM?/=jJOrO%q;jj?C:sNBqTo35h]DaUqVU?%*rP+!VsV()P%g*Y'lXZo.LHfY*&*LLW*mmW0d@$GG5%Wtg:sfUm[5,`JH><-g#p$IR-@^Y\U)Dh%WsbnK;)pk@XQES'IcFT.9!!E&%Q;d)AT%1DPj.:ioB+Tj\T.Tpf.-CbZObVo,<oO]qF\j)U[=\FMa_(hh)S.+OES'ZV9Jq^8uJGL%?7!RXq9#6Z*6usPAZ9i[8c6fiQW)L_9*HQ:bcl9Yg:9sk\U-`aS(a%doNTmPXQ@;bYo/C@XietHEmoK02sSZ,U`M*7p9g03p*dIt%@(^TaV=$rFXkHBfD'M*FFd;AI)9n#'=mB00Re=Al7fH(,UrW<&P./o@cLpU**BPQ(k3\JICYn:.Xdb8fV`/[De\Fq>f:@ng?`0#g%Vm@"qGIhgrj#>Sm<KjVn)'uoYf4fFP[@7Zi<.Bb^0:\B6dn":_Y$0g7\Y;4<I64"!gh=%7?QW:_:8LQk-g0)q,Y#@&B'2?>M,jQZ%f$830b1#4@J#=75Q$IZPp;j_lND8L?4,("*\A68+g<gpa.PKp+b2-Dem9K>8WmL#$i1@s7e]SI`5rq`<geLEoPa&1GJ^(U2YgD"$%Y.&;`Ji^U4>ebY-"a$3F2pBF7*/X?2b=H@GmNAIWbrIYqI-'8M9(]\VqpIUjl]c?*g24Nj=Sn\*<W+sQ/q7E`!]nk=(=t3[qu3.$%kN>a^QM(TDq9=&ZnncSl[$6!R:8Q,+FX<\Z@lF&[\QeFdPk;i)]pCWTG:3B\DFjSWB&#NC?/D4,e2lpf4<<lphXs$KodW;SWa*8a%YB]2UYp*2mZj`M.%!9)6C`<WRBn^XYV>Fn/]tClDlP+\SF#Dhs.lTbbQDE?UCYQVQXm^)oXg<60gZd\fJkAe7s'1Q:S`ZUq"a#'Y%Q4@gH1]Es5Cc;#?0+r96dn!0rp13.R3O$uMQhoN*:o>8\aj/LqJ#?:((5X&5E\"3)F$9?QSdFcUjE>%q-`GLBl#_?OjE=/X,':H/%<kc8H?XN\RHG0?m("hd*\c,\;kk'aO9Bj%bOnPF5hV2+IhmQMA:2dViT7NPV@Y`((gF5ZJnZ3d)jk&(lDl;/mH7#)m:7"PMC8V$X%oPVoXf'.gUkW:V`=Q6'$^PL\q$Z#9,mp)pAh-r8QSZ_X.8t(2*k"OZ7lL2+7SmQ'"ri@Kh^3JfZ]t1sPcqXu3ns5UWVE3Pn[4$-c%)rsRpBg0u\\Z\r;@`t5s#46S>hF[IH_UOp\7jX-UQS%WM4.Y\ZmN4WddmF(.48EKX;f@66=MH99hm,r(XCpje^'1*B2t)d*9PrYD%)VuWS*m``NZ[TZ`7+O<ClZ2;:kj91#o.JT%r0=MCdX8j6A-_7\`>IX$;Y.#)pAJl2ngtr-pYG-7p%)bW/FZ`I[["OHIi[0i93FBe%$[g]T\\D8Qr&(\%?Sq\0ANELBq73X2^0Q0>Ip*?[Fap:YYSlr2[5l"4Enob,p9a=+pUu!FI-'YXP<>&rs7Kgtn2'RcP>^tbj8M*D%@]-JdV.efAVcT_]C>c:>Yo@c0moQr,Da1Y5c+pgG:R"1/nCQ6<AaLi.=0bfuA_gLo_;D^:D=&nDf>d!k@5[9#q<7b-eRJ$*c'S%6%&'_o!\!?V(3U#(B<1-Bi"'81RPfg%bI+I!GEo39[*n@mgm+5]YV=3$2]8aeBpoB]A!/=CL``t73=<tK>ce$EanbM;1[d_\gYHHQJ%F$Nm+EFpf+2mNHr?hZ*qnoT8H5<=[m,)aScm65:Hqp&b(=_N$R>`@=#pRR3GjE"JWMXDWDM_=EKbL';Ri&$l`\N,VGDBFq6n]O<2%ri8LZn@]Z5n(d2\7cF/a^9/M\ACSRDYtj'B`gga-JL/%/7(HTKD,kJ'Y3pAS?h-m)4#sA5WQhpCmEuFedoh#e=]hf.Q(!Wm(nNfC%B.j!0qEGdi:P,uc%t>4a>K[d8cUU/hbcll5K6R(#81a8P`Rmei4gILd2XF\)/S6%LY!]QUpSfe&L3P>Zs13P!@P5YO#k^ZC()OD#%1=,m/fiFsEZu%D^DDt;\kMg=7]_G=&NLV-.nS*^*M:>NhnjiN%MR9L$Mj/%nrB[Mr?#^%O0lsMbQ7j06:J7ml%gh:5W,=B&fpqLj%!k=V9Iig%g_[LES,//O%0mn4R94*Glge?fn,C1(+LF6)F<bd'#oA'jmYB8qd396CnnBPr>%<#b%#W&uMqWrp/o*5`Ng@PqLi7a_D%$m-I_0tOc>4""Hk="YRrS@'m/%o_q<Uk/C<dd(^-jlmnudSF@U@4:\uIT(PR.]G+4%ApSnc;[OZbA"H7:/<H6+Z^o1^UIFsN[O0M%R;MtgU!kZ"(.mcP?A^Di/__)9C9DuMb)P,;_;1!p]lN/GGt'O6a*1-[O/kZIWq8L!jnaE8I#EmRlN-o"0uDi8/McV@H_n6D4iD1R%/;nCdD6:H97XMWNA'El4f=p7*?080W3Z.*TT48u=j4RGZ$Da*fiCC7R.9d$MXO4`$GB0fDh^6$e0Je1;ncjG\m]f11Ahp[/dS$n\%U]1ld3$jR7$ta@=rgYRVBp?ET;"7;U,^:&C)DU1mkW+"a?-<SLeMFl,Ym,u]Ep3!6e4m^:q$_-qE,[KI2S<ppi?<n!<O*CLXe=qP%h"LO2#>UZaF$QWrI5a@=-,rr-piIb@m)HodKVZJ0o"]-Ze65,UcZ"tX.G$;_;2m`Df'JCV)R5gpA,)+jYV'e/5dm2[lC@Ir%.`n!%M<kU)OA8.1D[>?<bDV(`MBpsQ>>EFKJ-IqSGC12sdNdGq=H*9T/[>J8/d"lP,(%r+5*0Vb:5<,j8@[-WEV9:""a%.l[Y1;$?i9bN%\-o5L0'mHE>C)TSX9J7TBEru+brM'PWNZ;$QG.6oPB!rbN+Tt5&LNY=f48B(*dU$>h>Qopr_MEXl!I),X`(D)]glO_%,TIm8Mihn%m%=0]&hMCAi9oKee[ae4Wb8MI(OYtW=j,$qIIUIFok]&#3\+6'L>9oH#ig^>]]#^rNe5_Dq)\M:+u'p6-L@Bp%#NW<kC,ehOd2]m%8K'I^G&l,5+cmGco<LMiGf@ngckW$o<>"cnU@XNY1D9:>^P>05Op>P`jGuL<\1bSZ\)O;fq/!^E>?t]r/?n8N0+t$3Y/e^ITh%`d%1:stZO!N2NN7g46W5J7u]=?t+qK\B1TSWK5?"Nd\_Kk[uKKF>Ip<SILoe3dklY(`UGN7oPm89#S=3m_e_/[U,pLDOFWT0#^PF/HD%P=`[B=AOifh;L+A'(Z[oBKb\;qAEXYMo:@YfUImJkX_t&3uY-<eV?Tf*;EA_4M1^OrU#'*gaCdmQku?BH't5s^=[MUhA88<FYh=W%=</ka8#\=QK]8^][;.";dlqZZ>&,BA<:(%1UtBj/S?rAWL[a@rNoA*1O;YWoOkAl-fTGXc(,gZKP^PS$=j1h'lo7Z6cikjV;Tg-9%0L+t=K9!X+X7NY5b.%kX`brA&lj+MN<I8(a6ReP=oIHJ]M\-P[%fbAb=V#(<%R$8//%-LVI=sDJ2dPJ>[juVc1I%EF>O.#R4cVBW%W1d-1L60<miTF=/A)NHg[ZUO5"rPeaf2tD7&RPK'L#OU+L32/VFnWKaG*#W#]]l1j&+P]@(A?^m2tV4-RpCm6c'rB9\aDWqMD+,S%=(u=1]>0%Vf]h.VoXJjI`l3bP_AhI$/`]:EfA4ab$m62S=d.*\20mppF0GAs,5l5II!@k#e<7)t?6lCQs276fJ=i7c2r-bE4,cra%E&W6/$Xj8V$*tS4K5`rU#=u4>4?RmP?Ma2%&<ddbMrMZ]a,u8\>^gIu$Vf-8_NONc/i;'c!t7S"5]ib!Ac\%13W<QdI@LK\iTp(.%J2n:kL$%^ch<o?Y:$@"&kHaV<gag7^7Q]!aS8QbaVI)6nm1&F]aOAu!*oDYeY[Uodg;GLRInPFWAJ0JmCHI1W/J<5'l>Kp@/BU<b%($%b%H_'fC+V?.=K'#51&eDqpZQY!C2DRsK?n!K#64e-">Pe^6,45H%QU?'58,M`]"jW.99`cVfC$090cc6c>/4,cKGUc:Cf=f$r%R"GVC%$rI/qJeFM[oYu,oQR,Zk)g#SX]T%9/*8(3-R%jLj-VkEiLPW&O<Hb=I%LQPaV.5c3N2r+(3W5sp-&n"5hlQiA,Z(7ci-B3%,$'8ZjmVg71%g*FAs`BOFI/&Z*<mS@8HNfL[?b(3mV_[]r"B3SMIbLG^OG7ia25u(+RGrOg4e-RpQ_!t`mlc:[1T;QQ;(XL3SFqO%qkKH/&KgCk%s.0#2?pg>@HZhHOH:=i5K$uk0Pk482;EXT@u5cP\.;"r_Fe0O0l3)W^HI.fHt"0Vha:jS)i(%o"^NAh6I`j>+8mPA%jOhPF0oj.,@j>)&Zq&EbaB7E"(4D\kTPl/^>pg9VC-+l$&[ER@7>USuZXYgiO=1)%CinQ)0K=iN_a[*$!uPD(J[ko^4>=be&]0Xb%knq^h1i*mD;KC.!aX.</G%7`jaL+U!5<m2`fLHd2T#liMb=NYtPpt*_Efen/IK@ZGoEL=GnkE5pO\m/qfJjN#FFdF#$ljn%$JmI_%p;`&8'ZgkiS[!>iaIc/G4`1)Xlt!,!"D!16NX*<MJoE*8I!+!.5Rgu,88K-RPO4s!&HhTX:rf4NEPhPI-h-X%at\.uM4aN]@N(^a%pWd+s@g+fu(_CQZ9rn@t=;&Sn,j(H89UJI1jI1`6bF$a?%IYI!>7S\^_MdNVn$0fOA:u<3`i/i>/5m%"3[M%)L6VBFb5j>UiJ6lN%Ap:oS\NgZ3RGYBio$o[<Qtc=-ENoSaZE(m%/!g/)\UqaT87\=P(JZO=G(th7Ccjhh$mV([i%@M;lcl'^-!r/O.'S#@k*+I_1gA?j%gP<t'4ScEAFh)u[?+GI>)+3fsq5_0_D+rImLV0<7[_:$oOKT0QH*eg7Tq*kI58rE$IJ1Qh])$^NPeu+!*kd#bfO/7hm!QBN5KHcD%rI+bM4(]rkW"Ap/a!WVT.[<sYMo+0Ebj_06Oce".75E5o:1_8D86.8a1^mmlkn!]Q<b-S\'Ku?Vi?`L]dXC?QWRjKnm>%Md_:gK#%<3I2$31f!SB>8D/44;5)R$`o7k`u$=Cq2Sq+o?SL3m/VBcJ&)Hc\J&Xg1p'eXHR^\<r[#>9(t?7riG!H@Sf3nNi)F59f0P#QW`;>%[XB2k]t>B%58h6d:hj:SH>C#V@O6O!hKgY1:=gF=QSMNNSsSjUf;b*(B+s($Esn8]H[5mrW&:G$d/rXfk#&7Nm&KZ[Ubu31*k'3%%l.f[OmG@\j]2q@kX"?o7]%>jfle,Htk;p;g9\SsG88Re;X;n,#RECM-MhB>=/qoe<9][j:cX1Fc\\JAOHDhT<d^JXM:o/!+Rn\'[%HUr_rH*suFWcLBj:a,;M9K]P@(Le/sQH5I*_b7-`[gkk;cBt1$2L8GBj?:#upbH*6G&'JH3P-/&WjIhI64@eHg3e/c>m0!M)]Z+h%II#Y^l=V9k:+G^<DM6Zp8Bb$-+$@44`.cTsX%NMRKs&INC@(&e3fV(2q87VJPB<fNC:$q%>,\%SZBa'*)Zu'G)4t8k\Wtd=1MHZq%S6UHcjS.d/;hF[SqGaO>iL!6@1Xb-(c%073hTol8c*r;Q0M8KK2^3<f0k;0`5Wtmop(JX,@_ah1C377^&nZ)K<`3d`@$O4uWWWeA%36XY(eo)2r90NP]WP>`f%$Ra#&@sJA>Rg.p:,j;oGU'l/q0'7fEPh@bPq4<'aL;RFHsnO(]F&(de[J=>Hc,tp^?)T!mna>4UD=De%@7rQk%K+0Gkt<QH;IMLp!W>"3H0R2AUQt)'THPl:E#e7-jia%3pV>[Na*5nW9!4h34)&[aM.M)/b?*jOm+bE$b4DuY.c)F$2L\?>%5LUYT.:GA$,:fJ0&Y;<g'S[;WnfDC>UTu.s]gBOc(*%lBD@cW8?Fp%3r&uOrT^uC`c0=oC+aHmNV2'g9UHGJ2TlUo8P\sLJYNL,p%fR9tfT#/l=k5.d'MYN"Re43R/&:HVV:r2b5iE#FVY8IXRF#pTTK/LWB$)%\P6`H?bHCJhZhaY]AH:!s=L=Rrik9.:CfXHCY_ir!*%(S6$mPWlk=QdM-"NOpk&<7\>J-/;3[j&@Q'LTS?ZnsdgjTNZV_,u\?e@i/*hm9`KK[X#VT'CJVg&51,e(g,"EdDp6nd]I4%?B[@W%@K*V,m3`+o]%;Bs34WJsZdpc6K4rJ+mJZ;-H#kO#_mr]W@.uTI1:S%K0(+sn]>12`=3S^4T%J;e=mm0u'<`6bC/8E[_Qb.`*t'9I%/tC'M3Bb<$$m*jL2KI`K"p9INL*V!XSO%th.j9Z.g2+[Q^=U43#Z*jLBcq!,h`o\)@?8"^k3FJkR[`X2F+4fi,W=?^+&W4^Egn6r%b@JBbXj40Uf,&^^gDZYu3j/<Ng&j2[m(IA5lF3#DT6Ti7$c,$'+Z8!60UGYIeki_9M$M,B\tM63CH-q`J%C&3M!s^r5&tX6a`7Z4%()]6o6PaXZ&J&,3?O_2%Y<$aK"n_""OVk.EPde7j7el\\?"i*;H?j/=r0XRg2oPZ)A"@Mcib0-3,^aas>ZU:-iaAMG-aI2+9!Z<8%6ANn!(fb`!\dDsB%>Rad4cR=]8.5^qq]&QnU];4b(q6&lqmYB#]F&(<Y+(Vl4"=%l/3&Fk-(uJtGs_>qG:$!q(,I.Z&Zm$"4"9f%%#j]On_SBG9A)/Nd=.("P'uG4'4?F5=1&J(TCo$qcA0nU('nR"USZk4<bZTjW/'n3+$8]$_@8LBq5XVE!meB;R`lt7M9jFj/!]>)0%$i9i\<&K-7K*sQ5R=:uJU0@\,ggc&?KGpo,1==!Hk7nM,$;]bA?s'jB0C8+f>.1Z?X%92[jknW&;/I;2NC2T%4L3C^^rW+7`l>S-%+YpXU(Kq5Sk3FPBBeP*m^2M8@i0P%Oa8+7>FaU?bF6%f.%0UUoOV]@*$o_%ccP`Jj^>@X^0sH+t['pbGhO_LurT_urI_(P\].&uC%%f!:+N^]o=&J1-mLmW7Nam+i&?K<(e1'6"/e_Yrd:I(cG@'!qVia-ag[l.[bnpl5=5LVeiq=<`"TE=;s358\34L.p0FJX1nH8HBK%3:7.n$W3MCH2:A14fT"@2jFB=fZ4[=U9CZ#"U'jj5]r=;+YlO*A)mK&_HlL%-Psi"*^Zh%O+hL`RTTd4^t]r+(."m_F8e&\;4QiV%\DgU472T1?I*rL?nVs!p[-i[CQ/2W"_hi)DoTp0,>;Fj&4ONnd7Z-<"jKQ7hM,lT1YtPSFnCkj#.QS"^QCTMNOCJ$7ju-bqS1'\Y%<=2Ml/<aYoVfS1C(,$11bC)<FN[eD-:b3-%8?dJe8n.UFAp6j+:Z>iC'$F\OO&u-KQ>LHC*87/i)j\g(KrdY[E^[:/6AagYcM2OS%rc@V\!fr\MkZ@L=^lum(%q31U'OL3?j4[Jo4rN>V>ZeNYimr%Hq&Z=!1P@''gBjLj)c6:NI!o,S+1C_rFPZ,slA7Y"m#R:nlLF^6%FSi_"*m4UW=f:KV;[R/u]odLKO-rTIL#2p_'aTqai!TnoaPrm4eu]ecp:9d/h`ge]%II1)F'V'd@ubR&_j)d6IG[K_-BELZ6&;jC%W;j?Y'em0o`Kn[der72/5A96J$QnM+CF(EpDL@Iuo:bHc:K#4Dk"M_@5(ngXC*XQh>NoAL%ok8(jc'R2<8I;:l:C8;5#gA4R;1g\%e,N6ehfFq4T7!TKmk`M3k;)R_WWVE>eIP[SIARp#UA0?O<Vq4/HhnhamMfCVp*Ur^:3o-':$2!_+0+`J*;X'@s.S_lcW'Mi[jcg*%]'hH*OJVXU+0+bp'Y]V+#9Tt#0aODNG.\12rD9n'qM63fBn!",gs"^hAX!3;WqM8p$C]3m5?&X[\:,qWm"_UY(6EaXeaQ?-U$BAc%#4LgsBl\q';"[pJ]\u%R4do@6>XEq=3crKLpG:@9q3GHGchBfWU[p'eqk7bs"Ut=WpR'(__\WmPlj@l<B%R46pA;ji?\MeL"WVKP%N4L<CK\8Gg4F>4JSq-Cu&:V6B01o%1r]IYL47(Q:7V.kq0?tWZ#9-L24irRUkK;Soip>Pj79Op0'XDUCP\5ag'(3s3b-OGLB*YQk%KMJRuib\T_l"OJ,0Nahcn0OiLb-OIu./p5/4+p*U0Zk'C4?GrN[X0JO0$b$DjT=TX^-"LL=3H(nT'`k@rPdI+3m8EmNiZOYP@A$f%B+%ZX<1H*^?c&+AO0L@Q.*qTm7;o89.f1u!q]5:2:;?Adhg^2?9R1deA]+Hre&:A$+c<VFBYn[<h1LWl-bIpa;k>"=.>.2Ta!f7D%;4Kdm<-5?,4%-'Q?XDWWjk1f7ZU`dY(T';V6ufXolXlm^m"ne[bR2LT`S%$398Kn6&5kP%E_p7H?hOrNagRbQ4F;$<5'c2'0$b#1%=oZ\9m*Wf*@]hT4[Fq03(j`'.2t&``cM"lF>Prejpfd?!hp)`)4n6m1j$AX'YJr'YnAbBLp8C[^l$PSIQ,rr3c^oA?4Q"EoI?WNk%^7FYh_%*N@%].S^9K2IqkV(mIEZ&#9N`FSBmn_ln)t2P7^3=^S?GLN;9_`rL?3Vn>6=4(de02ZS^[lXairM*H::XgrKGSM5(#sqS%U46#p*kYt2X;ISH%>Q)V`l$YPpq)E'1$@ij.`TARdGXa6j,jo[8(4FS+3Yl(Mi)MP_ToXCGZkjBDPaQTnt8]T0g=h\m)H(C+2245%WYgNhjN228_H)Wia'SeC@beGuId.[.iU7uc9uXWO.daDh`eWZ9:9S,SXLe]bXr%]I>1QY'`hub%1ob#4N4Pfl</_@K_#I!Fp_7Bm%7)aBr]_).k`OL]CriBRVS8ZtS?83Mjc2&kjN8onj9%`@mU_VpPf\e^7VdD/BV&HBH(#o?ALG)@@]4.<,qLV\<BiU*jm6[ApZ3?Ji%NF2E@8]A3Smpaucj3sd._-$Ehh1K4'VN"_5*Z<.CRC$G9s3@d^W>H/[WHFXEj%f9r6Kn<u-E%d]c!<9e/&ieW5'[$QAV5K?4@Dca%0.Oto^<8=gMXfX^2HV[tDLK"WFs,\'5"r.h*598VQS1MXMK/KPeDKG,%BgW;k:hBa0ch5"M3pWK\AMb9RBU$ESY0G>_RlM]X;E&=%+dlfY375a:RdiVA(e:hNqur0r<fFXt!#ag$_.-Q*LPUm_Tjlft9)=0tESUN.EoLe5N!iY3@3*o4</aUr_r8*?j'u6O'3C.ig_'&]%(#rCNF>D*Z,C-qNXC=:)oDcc-F=YAQ>b%8Q^T/4GNJpQE@bcs%KQ\k@:bduUI=\$#T2rq@F7tM0oC"0K7qC=LWFC7Vqo:%d(_=-+%Cj<qoi&V=H(l-gap]gJ"<JS2oiT0A*=`q7O*3@e"<JS347:LaJ*Bnj'e#En%T8UYeXub>i[N5:op[kK'h:chWC1-ngiU5Vd?X]OH%Fa1F=qVP>/pJofE;0DZTb5/):LV%-O7-FTVl>X3jSBI86W"*GaiT%I=<p\/4_d16C=\4*@*?LFI5MbVo4rrdHWl+^^8q0b[5.rW2%%BBu2TO)GdlL:KS0:c9h\6Bn95u)@^l>UsY^0f-P;K]KF7e\!(L\k\*:VAgE%:bHtZhROC\=]$C[H__FG(+QLIo%0R/k0@s4\]6'%5#B/o-e727o#H2`*A1q9r*=I?@+FjU</2"-;4Ls8po"JeFK377g@,^-[_JgP%pH7&<en;piF+Ks-`mjha<$jlFgrsf=Z+6l</8'n%h06'><3*pmA>Dc_n#F8-k;(TQE47a<T>ma2*?M<"9X?e8:Pql]3df#_9X-Y6XUUoj^'&kqq\T,b`i$G(=F@ld%X0kd8*?LJFh#':%&/5)ElL7YNSC=GIpXir)<ZN7H?3TSmWa-'>9#5G]-8*<#K`m6'N2K4RR_^*8/Y(XUrrLKK^pF'R3NYX)OLJu7db\'C,P-6mo`a88%jT[hKYI-03"=Y)2^ADif*ikNH@)^,:jU>=tYkMF^?Eq>9J&f(*b;6Ok'7R#+@3kA$<'&Ikn"g7EX5LY)^i^R%Lt#qJp'kbg>MOf3%?2+TsYk=S2FFKVA5jf-+e>)X4=R*_krd)6,$.AITqX!i]ItbEq:kfb$q8650:?6L*]Et):Dnme#NRO#s(E;DX/0g^G>CfPiiH_ZD%]<O'@Tc%8bD,#1"jflmRT9QS;I0/19Llp=HDGGEo88n5T@)-u2LFhAF`9k>D%+J^YG^WP3=QfpA?D)OkPWck6c::4tA;k](LXa&;%F7r\&b(ak!f[dLgmSAoZ\39MgrbYI*M["i-$lnWU8tXpen)(;#a:J9(o34QSoT[(P\r@Tb^X!k>+o.p[qq]a?@\$!bRCjtq[$E'f%715")J,+@ha#iQ8G#R"RIS'XtV6?ErZb66bYj2()ZMt,r8[^'Pk>BW(3H\cLHaXuCbU0i>H>!-Yn%]ZB9h]-;U:ah!Q\j3R+d0p`%IIRsTopa`S+i_"OkM)ACSbf'M_kT>hP^Flb&!IJ?)8AGsCIl;DPfEP>gkfs>L:C(D,+hDB<)%?lR6+[5HG5HQH'doB[nM6J"I-(\%djmh2-i29ZrG@o0*[2b#YsSiS5SA:U_@1SQe$pu]<ip_0n>*O.@+BR<H8IO_o_"E]Y5Nr(5(of<0p9Qf5Ck0ep^t?i'<7"<[%MJa%s6qi63i);`fJ(02QXu3,/VOsmauloIU"AQt@NeqIX\E*Fl`3<?0ZUmKP0%4-6qi=HDil_dK8dDTLA1fjpOdT(KE6b>HR;^/l=.Ic%Gk^,aj^T\*iO,YVh&fdW]f;_]eE9UslBk=`.[4:]BBa?r$WO6hY"]?uA'4r\')bS$@2T=OhlQS2S,JA/&;>."?lXGI^Sc^cj'lE%%W*I%dL+s&6Hk*l33>q._XJ$BJ+hq;%3bh..hl5IP#@ebB^5(Y8,G0p;?e4^5CgLEElUr.J;NuP\^<p:KT>^Wbp\d^_>G(--/AK0p%]1:8p72k`,R*];=pqr04`jde`IV*(Q81^CE@X/*c$n7LG^5%X.1$$OVbZPddVOps#\;,b(Ib8]X7P&'*lbaEa0!K/C@X2qe7t/*4%[&3:54^Xe.3]4/NjjumO:Z3'`>.$On/<<50]-AtR#S>1s^0*Z`YrprAKWo5A:b7eb*euJpqS[FD>g>fsjj99nY*F+`)6$^II.M`-%rOOb$\UWA%ZJ<dG_d4`'o0a4HPh1Eanu>-^-%7b,,D<HA\9<:<O:YF<UW"M.YE(mE@4KoX]RI?;@:$\Ri?JKC/b*dd^SbOQKT-7d%R"-\'L6XU1N4NuERt2LbEMpYKYMG'<pF,n",lPT^Gj_&>3UuLS=LoP[,)?'Nq,1o!Rb.*5Lb7N6U'WGWn=KUM0Rj"@X@ZK,6,$o1%b63a*lgFA#lbV41L4'lTCV:d%QNI$l&MXg_caco.GoU65X%29,V+*!8fgrUDqF>J5:Bk3.Ko`)Sj]:74Y:>J%qjb2Ro(/]UYCrG'%3PD@Pqb4(:\+6,]UAi4%p>!^ELM<k+>Ee?$iPUPq`P'`HZa*KCb)lFi`[cnWP0\OmDW4K\6HoN9?#N]8`EI0TW8<1'kY3QJSaVh>%$`?kjiMr.]g&&g1j/uYQFHgZ,](k'[0;W13H1c8\cg+'+qm*WZmbLBB$_'l6?<k78]9nFmr?S-5b/)NMq2LN-4$9&c`SNfiWsd1=%YI&:OrOt/H+03_upUe,*S`ZV_mp0dZT,c!\4&:Vbp",8bNMYIfamDPAIX>9m-Jm&@\,B>Z\bm.uI3gOe5FpG8I%f"dkFsd"ApYsR%c+PYU/ujnpUn-;#YC4a)W`eHO?o9U>XNYcIle,H`nTn\(WYG.kP04:d-WQu825tV<>*1^TgO%Agrn^;Go=CO]oNp)S\*P`Cp)Yu(%e^!:fB:g!EKUg9TWgkuJo5Br*?JHuWR.V^?Dj-S1*K`'5+-Sl)0)4Kfd%--6I'6dG]RJM\jG-ckmT#TqZc`554h$U2e7_/F6K.gW%IuQ['mI94^m^n\[2"i,ukipr!El8U`mP8jAo<GXUS@/8lLt)to[MS?A[oPA5Ib,^K.R`ku9+U>b+FfV\>tUa+i6:!Ip!$!@4!%bL%Y@F3VV=KIggZ^n?cUph.C,U!:kF/6Lf(rN%qfTU#kK,)6Eqd29ZFUpc[U"B*:9QqG6nZuHm\,HTpp%?cFiCtgI/L&[?]=r)Z<,kO%4P>Wk:HOmt^UF$kIIXnsMl'h;cJZEpPFHSL[<m38NMl5Xi0K:<ph)UUcE"?dH>3?_[V7=^riBHqPDtM1bG")0Nij/?&(7b?D4@H'%oS>G5i.!=;De^qYqjtgLXCbPl2W2iXlVb(<8`a1DC7!00oGb$T9!Jquah>s]5DlZ=9<ogcn)d7RqmUot/+qFfQ;>daahqaIUqbt2%/H;#V]D7hWjI=h)Ts]Ae<JpV/II=-d5O^=TXr33u\^?dMbUmbJP@MA6o7KMrV"B+JF.M"):*FJ&lq-b7i]2M@=Qnl4Mq1J6h9Jtc%;4TMgG<U4kg&9o7q(DXDP?V2A@\lEaU]GNk,I,DImJ^2dW-"^EE_ig'StpG;f#*enY41U[DT.ETi)h6EXL454<=]HZT*o@HlkjnD%0>)dI@tf5Xc7!?jaid;hI4(AQd[0jPq<p.,<0'8jc?\[=qU@'Dj??OV&`Z1)ilbo.QebB9QTtd;3-[brl0V)gpVa(";[8T1D;oTV%q"_M#OhFpoOb#p\)aCf=%qJ^R)XuhT?8AupNP`B?MmK7NSP><\4e(uK'49[e;sM0:]9Qh]I9FqhcNKC2hp\o6nKkmA\2g%8RI38V%ftZ:1+bO^Ta\jV>X2Hs+[^(76hIUD:.lZp+bKn?,HXZO@o:,HOoZkorP)hEe,K>H-G*tR>HL@#hQKE).NS4&Km#'#@$m8CrIpZb;%MhtE]R*D3CQ5cfgZtGPK$L+qeM68(IN.q#^K-`hh<unf/TSU7_oMdfX.OG$[+bXrDXd#(Rd:%^i:hFY'F)#.JNW(@kRr'q7iiFi-%SVrK90_j2@pEo;HfojO)Y1'F&&7RU`OjrTR<Qa[CP].:m55*K0T$,`\kKdZWk&tJ9XufG?h<MDDUm`A/,Bs!Dnl:k-k9#@7Sc.XD%jn'_NSB%fomOrp_nBfCM4<:%,L:U25eB^'!>R[F5-aJ@0Xi&<3B!n&a0,Di+4'U*rJKLJ[D*6XTnT='A33OCd.Q>V_o?u2[Ej,,b%m]9:*V(Nk8(S3;F-d,<!=qM&7MO])SS5d*e(?R`d)Xf,!)_5:cqoW1g>CphK4r`PDid3]]HLYLh(AD_PL1EFGOF:9(,;!h^_Ke/X%\QiFD?LO,F9$cbs6f'TB9Vli[PTn:_?:rAdEo*t<T$N_3$]WWXH?Z,b\N;gt'4pH"K-OC;+/\4EMn?$^7E-nteS_'eh`i_M5'o5)%?`_T:/%,:O56G21-Y'4sB,eh\JbHuP@-@H_pir5g/NqXr\%mZX.qQ7I=%_:u_[J0GV5='Sq<[_9_D)pp*\TC_lPa!>W+Me;7!)(%%WW#k7;^Y^EA*]lBi9-S-Wi(M0QS$k)>1fF'I.?HJm%,`H(NY@WBRuoj5$^/M$"t9uX)KRsrcinf%Ng;76r)^3mD;B[kc":Sgl7J:%mohD-X5)(j''@;+Fi-?qk"5OBM#>`5YH2PFDBL`&/A(Yhr0i&IZ(B#I178M3OCS?fk%jj7,IVUb<dm"XlY^3cUD8fKZhpp>ghn7[%_c$(WTfR\[(#G5+-l4(s$ZPd^A)SYRO<dlRFTQ9Y4ATWs.p(`Tp$7#&AUfhF@."PdDjTS_Hei#7\!/dVg"jo:pKV@+7J)AR9tccO%BINYV=6D4<T=uXnH%%cb-+\5JeOPtN$>sk#Uh0mJ4eBhK[p/$LrL`uTE\e[3U__T`\,B::X7d=a/--Q.DJNMSDW+SQ6ub%"ZL_p%%,Du$c8T*d*Z';V<D2%o>b'%[%qmB1Jf\J1QmVD^\LXl'T4a6Bt]\]796j:ar8^Ha(mWRbfk&gOD'._1O9_ZYjQ!V"@Z&6EgJ4Qr1%%\1jHfRkcM$`GQO0&XYiiK5p_)e\ELkK:n8j2kDOHe9f4UiT`s]45aSBliMe^Ft$&!hjI.;;Q)f%qO#$O79"`]TnCoJ[6OM[,d`m%EPbPe)lRSSV!fdMp\$5_DD+07%tD<>q43Fs7HO[4-_L^:moSV+q8M+5eLU<WWl+_kM+1pg[h&dV[TRpfR<d\[4kRge/q8!N(B](e%inJBkZ7KjL2:\`P"d4KgV3W;[R;D[;C!9T`"+6[dI!f@lm-j[2;.Ru4q1Fa3`H(#;gEmh84q1f2U51"K+a$*'Ir5Ii"KrVF9q3P;%EER7lBEc99OYSKB<o1@.5f$*=VG]#mbe>J%SJC_CCRbf)H6K<9bY'+M/^7-^l23o-_If#hE%mKZmks"Dg"2gB%5/%'I0!B\[(U]E%8"++?$!L]25bp:h^TH<u*iu.i8lq9Ub")m1F8]M.ZkB"GIP!c(me"ZDC5,ar(Lj53_OXl@HCT?%h$6V#$t/md.)GdXqkMTL>&GB/%?42b]R1A6mF#2WEU@t$MY*gZ,`Okl]@]=Y)];XNa]R8eGQ.WeA_b;=F=N^:TjWPG[o+fZnFp)Z:=?hOC.=J"j+G>AQ0Re1o<\(X$%9@7"Q]NiY7b<'FP];[^94e@"cHn1]G[i[d%HbJ"jQjr%4Gj2bD2fU`Sg=a3M/'>o7DC)l=R!*t002$1I4d/%\c%;(@c_/8E_Rk3Q%-rmEnT?G?CRgV3,GNa#r^:kIX6t\RJR2pGA[8=PMT96II]cr(+AWH9$4Y<#VHaaC[[BEZ+dU_P.[ncQN&n@_*=kJp;ph5)Pl-XVg%m#+>3l?$'ni/q0:\NK9#8F^S-e6n]rg[=`:k=!H5bZ#5<[3%_Fqo/1G.[[I1Gqe%&@%g-Z\-Mos,[G?>CA_T;Q)s.i2#!Q5c/hu(%O,nPM(]"JN^Q%)f,UOq'KDj>R)n:LNK\h,WS6IWOcBRZZSa2!8m5J+=SnCR=[(Y*N;tS!&c'?rTZ,0a[kY1;NB1hM_FmH=Z=q$J<%otIi!.q]g,j)un_Q%u2;YhAH\J9XG,LAZT%n?C@hmGR>phj9t1Z+"c6r(\\gCbN2P=h(>]a0>Ud(T:C&Z>H]V[uEd9SSWed2V-;l%.LTnZ_Tn_'@l(jfhE4(M(L\RNB(iW7H9kjF,!QR]1U[.Fl<G#F:JQ,%`Of/GJ`12S;dtB\ie''hH?uTlNZFT;AMRJhASM)l8fh-H%EFj2:B()?SmoOD0g/J>hpS<jSUN`B&&po,oOgJ'9d2N/]/J9*%lgcC;?er?pe\5A#;t;uGZ'FG%JY[,MpIZAhB!\.sdO4IdAAsiR%qn#6/e_3D(g%U.52nF)nW!;n^ADss]EC`KH"qTt(6fb=),bjo)&$",B$li5eq;Z^<r#roEfB-9<K;/*2mKKbWpU7q%@RJtsk-Efb%)`E/OSD7m%&]84A=FBpJlgVG_C`F/*mrJM":+<o[(6ZD&*jh.NmOTu59A@S-fn+CI'Ys@*nqZ&I6UFaF4jX%H.S?s6O%>Q'1[N]A%C#V`EGG5-5>,R9^ad3p[926:Gli%;S-$H-;D-$Afl(>BPYWG"pWUa:1+sXt1_O$7_m]m>J05sc[Vn(9qHQ3YYAuQaI(&VS>GIX^G%M@QZ#\:!C.?@G6c]$U=ld#`-a875R'%16.1Dc#l*E!PQKfHHCKiXT`%k\"i/TI(XV,W=5Hg`\u=1D,onq4.Cl$u&%OKYG1lYHb%@%n&Va9q,=ipm1bR*d+J$b1KA-P)fZp<+Kt6hSTAi0Hql]_.C!LD6<8FBG/*"bl']0\5pZ3`_g9nm7\FTB`MRkS!fnDMqSElq;_aK-%ONimCrsOBE8F!&7P#QrG)a[N)MLVt?X'eQ]EuEDB&>-,]IYU&dKZ:li[b2++<iQjmrP5[-@bmHpZP:c&4$*1W-"D(X/)6^:E+$^L%Y'83C`tdaBYuqnjQHqbtRVgga2G4hL:#H)g@0W03f.qtOaR$Q3[Gl)l1<L<TTCjJ>cjkn).a8TsJ,Q28FEG2mHs59l,A/F=730-5%gHR')i&2bNY_Mj8%7>MA%Cc.s"1OcJWnaNFpYnj:@[9*s&_i_q/ao2m$)Y2`Fi+*#jdBBI/H/gD>FfEhLU!r4^"^f>a/`[!r'aW2%'1@E&5Dr=<0/YG1WOmL'eLR3M,cUOWnWGOaO$6;Z^CR_,aJf:m@sM_T]]!PaTKUOO<(_()GNHhRoT9!Mc4__[3%Uu&l!s^jH;KIe%8?pUogNT&q(C-[D&(\Zt.n8SmZ2/l2=)Ji]]s)j-ngjo]eAUN$Z"]6]8m<BM\#qmQNS'c_5;sCnS\Z*Ln("lWooCh;i3WqOo&F4(%Irn!cK<;6X`Ad(6?DHN/okNUN3cQUUj)0lmZdmX!p,EA_TEjbJH`=[WGkauKrGIYa[$gtnnWT'Raf6;s.6l%c@dlqB_%I]t[CY:O%=\6kT]HJ:T&X6(aA8*hp@iCWMg-\H#HVo&i(Da:?'H;4FcS\eC=N]b4)=>hf-fc^f*EqeEN4b:Kd1?Rq5fR+..U>di2-(k=p/>d6%D;UMo0UE>5^"W&%VYd96FB(:P]I-Z+p37?#Vp_.-C!2@bm1ql<)dhg<"EGVC&%fd[o\tK!.*LLL`q%EoH]_.grX>*$Tc)9k]ihJo%j]6)reX@3^l5O4BG8D?X`(Zp'OEQT+',oL_IE3c!E]>cdk&E-m+)(Giqh+]-[uTM&j`(s/P<1>`*9?j*Bcj*"XGV'QE-$LqO!^[b%T`+7?;C]=0RA>>rj`.FrNo=KYZuf>-h'!A&L-\sL.A^6n0.jj+W9O0oL0dn=j6Pfdr:T_s;-c=gA'7=W@:c.e]ReGQ:#ULZ3G6Q8%DX3S,KI*B$(cb:(rO$s-5oB%SAKdQo1:#Su=dX]AnD*fK/2Z(;R\[#dC?:5IMm'i[JoP3]?Bd)a[o5-A5T]1:X9I_G0NLs%M4<;+%FFrBg0G\;X6F<&t[:>5*ZH4Wk:JX\mY!!OHnD;L<Qfm[f2>hc\`;KJ'>0le)q8;(E*3\<I4RG;@I/$VbSGMnOs/F7#2m+g8B6`X*%N3"AbBe-pi%Sh)uYF>[f1%Tq<!=!=mE%(p/$6N>m(7?&[?7C3f(OCZ#Hc>8Op*"ob4FSc-=L4<7(2)R\<HH?c[3?-V<6bjnH>JN>%ft'Q..JpQHU_lbrUn+XZdaCh+PTQo0#t[_/J+EIuh<i)IWEpfSI`&%>BC6;\oYj7:jg@U^>/Z\k?=n[n9?kG.R=_/\e8T](Ca_Lk%4&`a8b3SR*\4CCA8R$mfibJJaiVq,f,rBe1:DY,E[CO:0%5tL1/$cTO^>+4N&Wq&sbGCR_Qe-+-WpZ'q"b,l$f3;Z*US,q=T\I_%%fBcEe]hj$t0@W8JSY/4N55+\rcUDsQ)PRijQ:d;7C81m%MpCX,-fD5E`Oc\7Gc/plVM2+"6bm+6@iLOING^0;_b;A#F4kO7+Nm.u%S>LA`6n>q_X/N5S==(PG\WG=iX9tCoPNiQo<+WhkWY@X#O#'1$=eBbGAN(6sJX!:=ZanN5;W/jMR&[U:3^mCX22C^469++!LehjQ%X(`WI0W@NQfB-/+#l37<H_,;n?cgcghhl?+T'coB?pGDMTKEViVfs2@O"3O>q5XN/+RA+N:H?JY"*7"JF2mJA?@sODaiDYXFs6PL%8,;j&(Olh_o)8OR:I3I%^YJ%;XY8?<V<6P+4.5M"Fb/8dL@nHG<Zf'a[A&%G<9B2o5p@E$guODB9:\/YYEu\!g(HD:q3f+ChI32K%]"P]`qH/=J+;\PFji?^kM]=qVTX8fJ2Eg*3T$JEgnkC76Hd%(jhA9Z?]ur2;m5GEB7u8$#LL[$>9Fp6_'-j3eci74-R$OlQZOC"4%[rg!oBQj)2YKsDEs&,!@aARI[QB+6PgQbO?H.;c\:T<16[@3^Ps0DZjnqTXXi!GHZZlbdunX(^'d<K[f"5Pf1YVB&5T_=)e\fe'n%2M:*R)9Z=,aGc=2J*me7<S-Y'2a1!n*X[,'omAsr.:4a3b9p>)p9@[O'fW>!q7_=N=850m+bhbl5ZSutWNX#&glC2rZSkl[1R7Zf%FqTXs4'*4rl(W3I<*@JL2Z1S4_p,.!1!fc"WsJ'0GbeJh==TQ#bo?qUF&0hHHhgCrDD+tbH0>,2P<>L_%K8HhnMp]cQs1Ip5/+#O%)f&fIH\+E](t/lUXWL<ia9N`7\\+HOOKWHmaJn@c25Drg:1V9.8nhpNARW-[@+:ja9@-),`&)/(+QoT@&mo<5_6ll09tUc]Cqt)S%?^WA6EDKR1d\]EXO=Z["1#rCERc7nb;CpIY1g5In#d#fJ/q$I/Hib85_V73GcF'6K/A!,[/U7a>:dU1CAjJ\XY4]s)>5g]F_oum<%X_`BdSX1GPS&EshB^^7YD9K1IC_ikUGJCt)CLlR)?UqO[QoT<s<ld^Aj8(6s/N+,Ta*fk)2e[BuB*:Y4g"lQ%3b:#5:7ps'D;jEd%`WjA\f=sbU'jmoX)cmo4a^lrug;T3dV$9;G0\*;V.O;?KS:a^IHaK=)\\^kC+Qlr*?Zd.XHJ5b1gPV@!o/(r$e4luV6m\)S0lIO;%^B1%?dG#FI0cH^7*"s!jS'#k[)[S^@I&F>O\X;?*Y%5me(FR`-Nbs0gh5&`^SSZ@FW_peF3Y2ke91TYm+")+D%SSUZ2G9>27(o7c%e:4tG+F"VEEjeG:L;hX18posk^tG5`Q5Z4;D4s-\Frt2Xgq#IkE0_`nNL&c[$C\d^0`5@%ZTOS'3V>rrgZDPX<Q:6HG-.&pcp$GZ%oAW)>=Gq*TO.=p"V<?pb4j@:8(#-!C<m$E0lWH"?e61[jLm_2Vpj.Yl_G&oOIdi3W"[X/Nj0Vh3(qg$`3G?<8?*@T%'iup]`cD5[%b4b[j+A>HbAnC4KC%q+f#(oZL"g(k)$OLNfqg/u&3fln3FMGM;S6K=grOBj&;;\iX?0f>%otMd\+.;<2I')p<KlJ-mVn63?jE_9B%6!0jN]_L2dOg2()><^bbNCncdp$MMP^eV_biT^'fSJl:ag0S)hl#d5j.=#X9]959_ma-a5lc2!!_\1'6\]foKZBVnhS[*LY0nHNl%\q#Zm9ub$MCUUVT3L.'\O)JPI1V2o)5RXbK+cW$XZos4/b;Pb"Ut+<S?b:f.2/2agp9Y)S&k%Ku5HR;17BtsMV@i^^=<)9/nK531%De$3NU>?R>mIKH[`7?sD<P%g(c\3+o-^Z=4,Db<n&/"Rm]A,N[4!;E6^=?T5JS$Buqegrir=It3%h`/L3Z[<p5+5U,e"Z*'KbI!;%01G%rer#ZB^(*AD7oS;Pqs_Ka,c!Xo;nH\3dDbS-%b[3)C\4Jh;D-45=dSuF-MfmQ:o2A(9eKY!qUg%qjIUEoK"WHH*aT&B,=V[/%Rb6G=r6C_N1@)#L8csFpIZ9X053M6B8Fg>A3]k^mie#c]H-<EK?M[nVdj!rYF1R6g_eago=0^Gj#<S];5$Xq'G$ZabA0.4R<mb#/%&_10!9Qa)g=AF(6&1.%i>)m6n`TLC``7k,tp,0C(hTintX`4I/Zj/Y22Q#VTY25[>KBAgB.rCg>*qGrhd5E.)A!U.%W[i'@Y<QnE%kJ!R[5P`8(Y@g';>+PV\asOs5C?LXQk8)6b``E87$n,+7k/`W6+CpEi:n0R?R<&;#jfpp#Fno-gLcmroF(_dR-!n9ILl8k$HYR'`%oVn4APhGf/EoQ6\RE4'VDY^%&1XDo[;_5DP^Ob.-#_6\GT%.CSX?<[R.XrY36&]J&MOM`F=$I'GGIpq1fDO0)q4W9*kS--TmIY:U%(mQnL'hh:G``o/<).YUn`*U<Qb`u,e(39(T+g8@]:)uJL#pY)kjq7IgB%^IW=Y8D(]A1P@0a!CeZYW[N]3/Srk<=g-Y=Cfb8eXo$%f_)DJjO5:d@`EO@M=V3X$%,cS.Z\Vb6;MG#YukhKe;SjQi!_J`-V%D8Q*OD.ddl%Jo@#M^Gm6K\8rHY#jg[Wnrg?.+j@9VXd)'h>%@JX6DERN6prR/bP]7>"$gS:D,EjDak4"P2mk#?5/k#>hs[)Ic4M8:PklU*J+:-rJdnH?)[:V8bOF%Y/t8nE7GG?ATcn"KI22cCpp%7q[Y^c?*Z1D1,pX9TM?/L)cX.-C%[+b9LWQSC*Z)B?GFj:8>&#4"?5/F+.%=VHVkJQ80?<JpR)eT$_9Rp;8=O4"OdunrE_+RN][B%l&B;03OrLTlMU4LlqKus'C;`94gXM;Q1_g0M:&ehEr/>mV<iRU?Z1(X\5PcO\9XBrbdltgR^Z9l*,fu!C.m(&!sj!-Tjk0];,t+#%#?'(>.eu^t9&rM$L<)u\&DUJ_&fdHBT'Kg[ZP]2!9/Oee-]62Umg]jFK>%<.%$(re!Za`=)=L9:*$5e35>Mko3V>MCqjEGG^75]W%eRVW/On_dd_<`Z^cXRX:B#_r&q`#EW2#q4LYl"e%^;7":.*5_kQaHrt7X+fc'T%N9Y5;eUMg2@r32gZ\BB"<R_'+ANqtGq,-gfmZ%B_^7&?q:s:UV='aI2@M3K4t930XhDtMQto-ZFg%[\R04jOo)o<mL#*2"VM]Z]<^tVT4BY9d;sJ\4JI--:2C9"/itY9i[(QN:!]2g%W31acS,+SaD_C)5)rD*!D]G1b*&uZlY^EFjV7oFr;mJ'/RXP%WaqC:.//`NGj-o;Wn*Q`?CNt.cYiBYoB(KEiPlnP3q%]GnE3ire%gbFT2ENG]q]SQP$Pe5a1Pg-QrA$<CaK2-K+S]8'a'*(Z`(k*::YAXIb.lR5VJ7%1:^f!m]hZ`N8RfG-a53abNjDSr<^nUL!G6.X<%-3,HX)0m%6YAXIb*+nhK!5H5SJC)s4])[;.'0mfYi\#aghZNqNX-%T,,_(.S!5uiGh?EE7RfK+'ETCC*aktqX5^%YL>l_XR$%U62%e6N'm!$5!u5OoEeYkQ2MJ7-#bC&PeF:-Nn)^_H,7=UDOo%00>.s*(Z/)7T\i3PG9=\>Y;@!8o)*KhBC#hb?1b.@*AN&8LN1(?:6Q%15=efRo"k9fS'KXTkeQYrGlVQZ$PD$4ejH;<rOfG53F9*;J4b.\[G_VG`4e\/",bS-PLSimTK0SS8UnKD_A`KeE3=/M-J#7NWQQK%L)Je5/f2\MlIBZVIoN#-?_Dj*M\-CXPr,@8QR[n$SXpeo!'tQo"MoGZcq;TUe&HR^^E='"SV;1S9r4)g9T$*>a62i1Z<NnR^0IY:%]X66GOglSi2\upVCnj[IUeR.>eRNU[e_1$.@Do+_=ukt<-.jRtPZ0";jR_ef0';L.s.C11Wns4p5BfF;7HZ;XGod;9#8^&D9Yq_o%JX9#$^>=8ekR""/Ajg%@#c-*&(nZ?U]e2t&o%=(I"?.@tZrOZ;[T-eHc+F`sGB.!O%cm<Q+J;M=pWj/SOWfTSqRI5gZ>Q=?rW-Kf%Z*-UTT^hre'hNo-=bhWo/h1qCGGS!:HUagW;31`"V=I.<q,bc?/Nk\%Wg3?ShGk^7F4p*siLkm[FfJ[6@^L\V1/8p37gIURV3H5+%Zi/td&=,$\&P'=)^AWOsO_$jK>I&W\rd5E$aWdu,5n9AK]e=Uq^F_:7?U(Ucs(cd%niut8M>Rn`2=5n!@f95ISc#/`>()4Fn_&D4%ia;@7'"_GlGCE/fNM"hrkC)NCs0;Wqm8f:W9)l3skd.bZg#[^'1)fDC4AC8s5Q][l)<#F#qNiT05Pn6PL]:TF74a:'*<PYms%=4K%8!Hm#J+6]kmq@3Sr(jaHrEo)jQlmXMDa\%Z-E[3,r38uqj,H>(q5=2GrHEN=rHj2-%O/2*ATV4drY^T`0b)h6f+Kgd'/YW'TkjZ:%g!1G'X\m"^_Z3*UFnK*o^1V4._5rT0lS^q<b-I"_@;6QDjG[nZ$6m'!)>Kend:HNP9X?PbT@-G,VMK!N?:9qO>8/eJ[R*$SH8/>s%'`+E$.#8_+A0RaOVWf;3/]H07Ss"3;U53Zb3#>5N.:UGI^5AX`7*uEj7[@Uck[,VDVAfS'hBSC=CS%HFJn_)5ZpYJMODLUL'dbQf%_MD/HEC7-f;%pl'2:'cOG[Iei%iL+5MqnaH/gYq,@CY5q01%T$g/^<T7g:C[3!+;N$)VL<8-B&MFB]=_"VB+HLR\@N/0-HD[8je3%&fD)hVPSS=7_SFOL1qOY,/^L>Qqj")D-Sg:;lUuLJKUi/G)?f01!-ZPHZV"G;%-])5%T>E(*O6tkdW;Ldr]TS!O-DoJ3,A9\O)_f%_Q%o:"fC3q-m48eG$Qmt(SP^!2UK/7'W3$<1g;(W!)utYM^P!qES7XZJ0eJ[`<"VElrD;!kYY/urZ48bK?+p_E%Kj14a+98b/,8Y%,pSnfks[H"TP&;6RaDBh5"50KQ"b0"C<D?o5Ni1714)gC8=#-pU]D\fJ82#4m^W[W'+g]I#^q\@)VodWSC.QY$)-:,0I4Om/4:1T%Z.Ug2*V]`QA-J<M+GrYGP9iln,*FFVr&k:K%>-j@g<dDt33oM]`)7HSCVc=U_MqF6C!c'j\qt4*A.2V;mu_[c+JP:$cJGlBS]LjF%q6*7!NCj2VG<2mbVOI-2Wf!UXFg3daOb@IkR%?U8L'<=\DrCa:KZ7iWjUgo"3F@_X8="kRR';EtW4$Me&^lT_hkCs]G0;e*h$]UL%la/mo<(1[p&7%"j0=rU,OqlZhBNl)X=^_"c&UKD*,":a,B/P_M+Nn<]ZMT<p3L8-K7Q/Pr]tG(_-/7_P?-QK/<ri%>c<B5m1/^ET%+IF`bG[+5''1Je]((Q`YX#f[YD!5,GU,WBEOYhABFU?_>6+EH9<Rh-6>>uk'W/AXP[Ui'*-En%L1eU+5(NHh_c\mOP$f*fm#9d&@%e%H#"C=,OSq1q-F"g&JY'bk'4Os,2&(pZl9@^(;%9JnDkA+X&I%SXS)3B5WVM;p=$M*?V@#SdD>!9b%u$HR5]+gN2U65q[[4Lo"F%MJV8`,Y@1RaOh:HQ=_#oq'L`\A5,I6HHb(9;iL3!g!HsG>;7O8PJ`7`8j4T<4D^A*0NH]BmH7Blh+*2VKM<+$@OpUu,Tq%^38ZU>%hS?9G*eRWHiSG.n%U95d:IqXB&6TJMYuN%(6:#%VALni^Vo=so/.f$n(a.d3^`$U;,TE%H-W3LTf5r?n#\"EAm3:US*JdJB`MX"%%PSDiBY(5s!,(qD7o_]@rdr"0/WhLt.3#j.*d8G)JT*KmV#_8U`oZ.r0\Im%B%"fU<NV5iN#e2-?hdl&oR^4@uU(Q<fA8I!r$ORb;%%#luCb">*U:"DUdMEk8PN`s4LUa&,MQ0G^m0K1"qLT?D.@tB>t,g+7d+M0+4-uT]]EA>QQYRT<P8kp3IMJ9%B6JJ5I5^Z2PR!oEY%L]Cl5PU@r*!d$cPVIU%&1E^oD5^5i0iWRXC9j@c$To(?C<$YRfidb.2BtFY!c[q/M4Cq\/'7$IT:dihkB.rLbL1[^YFB->9,Yf,<%JdY>`M8lE292l!?(u^0BFr>8WD"=&^!Q(FeIkJiaUk,F61ROhE:Q`VIo8.PiK6.-`mL?fU?oS3Q/6aun^ieE5dPN!reA+@YU>6Cr%JVbA:$QrFIKkW"r8jXls&_X&8M@LU1[2#*uP1>B#R[h4SMGjuigL8_Y6AW_2'tu=@dtn^_g0tmZ\[k?]K.:B>#-sX*!*@3,-jR".%<2KCh0Q\f;a;IFD#:EEGg6l]EC^!Wo!o;1We*?KWJlmd*:LJ2O@1,T-'&b:mPUM_md;TX/gf4-AKAk%SK1sdWN:&G4mVSH7?:E(=%</WB/JaAsNL/&?1+WZ4g1F6na;j&b[&]9\JU<@q2FLSS+m_*$ZZlr?Q1BU0RKl[[?ZkUZo;/&MZP8(Ge3!FgH,S,LjP"+h.)kQUC%W3"JB*/n#*2Eu$odssu5Whp%-,uH-Bgo"]2Ytbn\.<'/_.`&P<-t+tZTI^q45d?=m.rKl(Q5RX%^d^%5GoX*h`=r9s:8oTH7A`@3%eLYJ'fG6JC/]8(/?3ITCP(;2rl:"AMU^0I/pn"=OReJ8#mKGm%3!:FW%C#T*Y!_haE,eiG9I>/;p0rD:&CK-n8OPS:m;!X%U6][>%IkV/72[r46X9=Y;M(-4_@K<ZD/cgO.de@#'Nm-&S1Q$#fQ&6c[=DSu\9Tg,ib?^'G6=N2gO,glHP0s=NRTTgT/7;D03QeqqMR"^@%#'G<]<$Od62+g+B6U?B?SK+>?0uHY/$6)F=#W"ofi]\F'P5nOlrs$J3a.Q$_SYDg.)o@5X1'.aH=b:f`+PCA=j#eSK3fL/h5tRsA%p$:j]-7r(X+V[0_VkR<_^-`Bic0QZZV/f,9W.sKZ"qWTl>_/c)HUCdq@S\q5+5>dR@'QEE`8lu;J0:$>$G.-`Vg-:>a_9F\M?j<W%SkW'r[(,M`4@P:>@57FR[4-\X!'7,rflSsJ%VsL(Ufr;De,l@Sf*l*20-bBNSs$o<EHGOg@@AirO(6](jc:6.Fc6V@-\IK30d3P@%Ahk,+#T5`KQ6akk7!W3=VEkN=*a$3W<6bcD:_/M%R^rJ1MQj#p00ksTj#Ierd//KN/a=Cpc=I1[o.9_l8QR5W<*5gY@2R'L*=O2"%pcsDM$sfcAO4lU1\\T-p,':2hC5Ga&$.<NTe5sor@#>lQ#T\`"`[9&m]>34>"14h*PUn\95n0]^=JeImN*A`lK5l_*H#O=>bOH`:%:H8eJ(n?STf=rR?YE<EVmPJOL[R<e:rrMO/5i>V8[>CE1Qme7d%83j:!i?ok85#aQ>A(<RC<3#alH'*_Zt(ulCrjgE7FMq^[*?t^%LW<Ue3&ug4H4?o]$j-]i=No*K,XqbI9b[SLWj3O(4iU#iT^>!C#%<PU$7%`'VVW;EW=nKT$pt.T6q<u_!%L6nL^+!*M$Oru_-/Q=%.]SW<fisn7.:3;Z2'Ro0MsJR!")suWE6tla.&Ko^:)Gj43=nT`/1TX:PNk&VECEfg<L_7b_(bl9LS4e:BjXa\XQ5D4+gcZW/?&:l%`dF1A*tVDc*/?)X7tdQ]e+k\o_W2UdB@$ibH]he"PP7c/J-'AM9qpXHbT0(^R>]/96A!fK#&55^5I(<P*fk/-#!ed24[KK&_dc1&%.@m\;h%D8UEZC295tZ`qR@Y:<M`K3*:Q[*,U/E3YNp%64F?``=>A1BrF4UWll5j/t`^#3P%4?iZVunTdiMWnm1t\Ht`O?QoW)00,%K+pTr!h^U(L5<@jUk=6(lld<%<@+1W"%jbBSS.8'ajbbu'o?hC`0Cf(QiKG^5/E"`=>#eM:C5#BWm<:a#-NQX%.?1nF1=M/QGFPo%2Vif)A4pSTN'o*Xn0c!`c=.!h/@1ai(:"Ng".4c21kYTB_0OKr9Xf-+Usd%^-AY6STgCgW&=I:&NJN+99ak5n&5?`P2g>XN15T.#%(3TYH^i1.Lg,^8qPN`knELY$(4X\#jN7G@*mt=7\6rc[Nb!A9e1Y>!90SNC?+B6TtQ8g_G2MLZEGYM\jX.qh?0hIh4\![d/<4jhL%1)1i&=naA'KbbA^an:3*B^c*)SJiEQK?+\5"@raG'?D$16+pD:24<9OE.e]h;,kk?&E6$C'@SmGKQO+g2XNhAO[/DF6_+&-fY9`'%_%I<j>$PKI%llH)H:e.lq@j)@e3D]g>61TTe!BJq,.[ep_FZ5%Q2iYl\X1)P6q1[;F,[ZXB]ReIRUZX-e0q]^]^pB2D6_\p>b%F#%Mu0+H601j0'TK[Q6jtK>.RMnjF;sBI+H1hk/B5K!.>,_`:?5EnW+Q5eE$YTQfEnrp#X_T@U,.!7,.&p?64fb-7$p?lEh]+TEF4F!%nu"26!7CiuE'PC1%MAQ/A4r6_.?$X*nTmj+mVU?3C68Uq=@,sr&7*fh.o!HORW9N+"G2d07$2/fBVjb`,QJFFFBNj?JgJm5+7nd7%hn%+.OXL68`,u6?QiWM6#GI#>+GN?K<\fR6M\oOo>`<qP4W$1FWkmCj,`88LN`[p:qP#Cfqe\XeN)#WX77Wf#lk8a6PJGor,$Z-%%0iOcP$PB.kSE5E3===Rhdo72oYdI?,Q%nEEN3nJ3,?\!HU:Q\t>7P-G"?d\*q]qOY.Alhg<F^n%0g,t!+t5?,lsaL-6koXl+;V82%5ZDJ.)pFXB+GJ*q86/rhYE:.\DoT;uJ1sR9hU<;p_a&9C^js+%.VfDr#<L9N)=*M=f[SAEgG1>"c7t7`j=aA)_Dt.*[8Oum7[?Cs%2";`[m%d7eLQ#V_b'T7a=VM`KY%^dh.1OZdV]3KM2@(]IEJupZ;lI%6lGY:V_NrQ[/[O@^4XLAu`2FHp<*';uiku>\(QOa%&%:jd%\#V?sXE;U<G;'F@()MP!I1TSK_.4,iLXlV;UOlK!`b8Xj!n/G=U1#S-?,C=36sl!Bf2[LNMA9e?_YT#;LJY$JTQNc9#u=E$#-I3g%i^FhjB5/(m1=7W*(oU^#b8#OU4Kr8YHoasdW[n_J,$])F#dW'VO0nV)3m4tJrC!g+R:(oPM2l*#@,=9^U2l0[3LgD146h*K,unsV%=@B[:);`gfAn<`QZ\u@(B*WJtc@G,Ui,=A4F_1r!Il"nL>LEZ)JfppBaAghN=Y>lqDRP+X=I>2]Rr+fCAr9F.9LQD&=i@h^fu:J0%!NhhB0p$,h[U<'TJ$TReDOV\s1Vm&U)X%*3>NaG,H]e\%`ObAQ[WNXY'HWD_*ed%,ZV?IBAZHkr1LQZFHJHbq0a!A\Rmd>Ua93W%%6U5<Xj?VJVVpLL`HCJcrFi89<Z`Wa;<UOb52/:i,hI`6J#Dq[[gtQX4>YVI,DmQQDB'/A'[R,YR+kS[A*ot=UR]*XH>USOfAd8p\%bq@#Kbr4ePbQUYmL[?<_#tB^.5,D-.U$HQ=<^:U__b*KO9`fag!9g^8fL(0+\dP`*i&oM7aM\Kia5uY3Y00tdW.WbFiEgP[l3O8n%ge7'UFtrF)!^ra_of*UMin5[6k=cZ6ZukFW7%Z7XBH]?1B,>RDKHeFlc6A!<6+:k%GIEp+8p!0+0MBG`@a!R"ko*&%k3/Fjgb=oT%\s.&sndX":%/[6-QM?\6R@3AdFqDL_lsecEm&i/]'fK.K"lHYgd=^i_`GCh1,hK59KA+B:R(2l.B&biUku5kWE:<D6\p03,E^%R$%i*L73f.@SEP_BCNj&o,1,'[dkP[9#b(4s>T-pT%==dIZ-c54h+E`.2aA*L<VV&',t+\,IW4TJ-:&MPT/f7W$Z7YDh-QHonoj4.^D%YCL?:C_31Ic@23[$NSB(E`.3lHIR,t.D:8)5?ShR`_8QTV&(hSm3Ok_@r?0O3mCmuF@R$/PoUGt-J^g@CtQ[N1fa#"^r!H@F#03\%cL"t(E%Tai'OtobojW#Q$mrf\Xj`^5&GK8h`8aYpA.)&981?U_2Zc/,4?pcWB+ts.OBm"XK-9uqpF)ocBOb&\,jIJ0;:2I4#g6ti%Fk*:#gk9O@9ppa<]7L9"XP5:o!E2FD4\S8A/\;;$#8RQnK%O"t;,$)&QGD[daMbYd/NP/oF)e/b`mT4,#_[/97*r#jJV2c++G<3Y%[+GQ+aikPT13ZYprs>eH1m8gi=nQ=f"3/21Hui\k<'iVbB_+3dYg"^l_kdO+-fK#Z&HLu24.'uG"cO$Ap]F5n,\"it&s"S\9>dQ6%nL7Ds.IJ)p!ZAKA>eqVO4R4%aT.EiGkmft5Z3X#='"fU@ob!c>Z9Yk:L1FU2+`o*\llB_4Z6DsYLJ8?P98JcVQq"uL_Gco@2/*!k%_U#KF\`[)5E+]/IFgn@P!,'LN#*XTWQsK*@JLklGYX9mN"_d+++=Mi03Y`\C3Ebu'6`0RM,ajsS\EDM`=Mf,Z`0dk:&Y@j4%X(*:%RH7<Q#E(Wt^iFsM#a2D=W1n6k(!35-_XZ6f<m)Q4W5@kr5Q],A%"\3gQsd-4WiqjL'+@R1dZc6_@&LNu,E)Lp7bA\[IaG`-,Y6&N%?kt.DjBRo%gJh[u[!k7S8Q%r.<fo\pW(`,FSghH3RJNUr(]`LB3[um/Wod0S!Aegho01,+ZC)np#T=]>+dh&!JbBBo(1V"@/GC>F%Sr";Q1S?WlW]hPkY#7^2PiumXUn>4Z&2I6QG_X9nQ":t&XT\bab=cCF(r-h#-**6O%[`8G*d9.:B(Clsk)B@o`T`pnYuokF\99cQ%2nMjo,+`6NX+I=FZF_OG2,*8@fn<d]6P1[qjh\0eTdjM&PQ2!N?9CE-#V\/,*n%JjT!/>u^4IYARd7ai+Eh3L7i[Es!lg,\B\k9A%]]'D!/073F0lA.B-5p/i08'`D&;.U.;&`A/q;lcWFn5X2H#!7j>E\*tV'tQqe&8+,`2'^H'/%/;;ebR+p_6iZ]F9qj\=uU,VgFeq%@X5RULP78n:]g=B#)eY;Hf'HX-7)Cl@LH3/@WXUb.:%'PQ&uOk`V+*UG\s[Lbh5,J\T7EHh-]fk1+t+)!l2;f<Rkos;A.7>LX[__%8.NLmNinq*+`UOON/9!"SP'"m\`#M*Q=8!p_Jn$WK9AEaLu>jkpk-\G5rh7J:Y&X*0mh&NH)Eb2(f.ol4PmG1!LX(O;PS1t`hK^V%0au55LgqZU0RiRt$kdV!gX9qY0m0*72d@FagDD*H`&<[_-uk.g+3BU5atS)&V'!R8Sr5U!:P9R-)SAJRTjWLcljC,Gb#LR2DpV)e%kKN/>GN'YnE9Hhe0n/a;98,gIfi'A!e9EcG7VMH84U>dAhVJPVl*b6[.a,MLk9_>Lj>i<@ncXoRVTSOKkN"qnPLOgI1hMfYRg8J+%drY(&Wb(F$1=2DWccZP*Tudh8S/adRGQPm""9a\&EGu0fbI#'"9L,!07\qDJMNo<gZ7F]5h:>!i%GhScWA]XMedc!*Nq^Dc__B%s%5VRL]o[/-CU*kYlIlL<CQA_tH.K#[8MnE-\lgnq.(,Jq*?"5Zb$'tc,?:G.!\Hll[-M+\`_ubZ;7!10`;!ROp+nRFGEB.]g-io&]%>R6]qUrH+kW)ob5UlO$!ZV!\!nZ!LhQ)9Fm>7*%)Fk&;bERclX@rq0/9GXIV=pank_3P_)^PHP-%IR\-83g;V&po[LNf)h(Nf(\X%#O2P\V`P#Y7F>6iKr_!4:&on1.*Nt1kU;0i>XW]Ka>;12egVf'NoFHLNZp`QR/k)+&kkeM=J_[hUDW(E.&r&&.8U@f]#k0fL<2Fs%eUJRr^WS'gO;7:/<FD@Q,st?!nnF>4QBtBW<OAHW"';!d,hB=1=RLHt]kgSsfMW1Z.W`Lc>6;4EXE4IF(3lJuc8Y"EnfobbJBH%X%=B1[)(aLY;GQ)-k<ZL$D^h"LkiDsqkJ.1]n`ktG"Xgkp";+SZH&\9&Xa`3nM"k+@U+T[.MOf>RA0T9T*i]*o'_m46d5?\0-&:+JL%E$9Rc&):ltDfYgpEf-megDj=s\E1[`rRW.-R%;;Q<=!3[PW>[s7\>iX69=/HMFt>4d&?3JK!Kop1pR5-e,&50&1(#VWS\-'%(mlB%aT:*?>Z:b1]s*/gP6uI/\pNN&>NG"R$lQ#/oHNLP+:,0O?ka--C,71:NdF#fKKA'\5STCsZ`kBB!5fcdpG;mpaW<iZ-D_Y-6qh$3%T*>d'i\g*)T^Yhp/F`j60hq+0=T.?g%#?G`I7BSU<-1J%&J1/t;q0:t@0mA764nGOXsK0_9,%B".NQih<?M:<RmOhF]Z7/tE/=^'%=ZRiTX>O(@AkaaDFnUu^&l%U$]N.'l;c%E%+@sWH4bb]C<7Qn8dK-dO>tg7e27Y52OL-@XJ+>_PLKHZnTKDQdJuP&RMZ$[?[-/XJ%gLM+ngVSt6In4_I>?KoV-G$ZU)_bHdb-<F*QK:sV<:HP8-,F<O6#`f:>7>Qc8N[i%%3S"1('1,i$d8WL$trk0oU%CbFN;iE-uTY/%mM9gt<bRAHD?shr1bE\n(8A(@2p#TJ+S6jfru/3kd6W`36fNhC,QY6(LO%gN],6p8#"KHPFYR5/ME_,==e69J63Qf?'9:GGccW?-%ViYP#Xt[-m>!ciMg`QA*@k5dT8Gf;fIQY'T0T50j=SduhcE_-a_?@3^@>BH*TK95hQ7,j(bg!<1@nRA^@=o$R&h`,=WW\-[-;jeB%VOZ\<"6'G?d;Gea@4FEL&:?f4B2o<Dn/)\Q&$h,(#?f!,b6#Q!NC2k9V(L""EQ0:eV93C76H,G^Gd%KDml>C6T?7Tmk7mG;$/m.^%1o#U?k:)5-gT&nh`e[&'-WqY8'%fjBMInSK:lrmfispZ6<V2FEJsE1$9]IC?JiQT!!>nKbitrp*3XBm_4:'.(G;3DB&$8bg`maVq%PmA+q.G68_:P%98OIVl>i%>^]#h,3Yh.+)gOepJM`_-jc4Vn-FdgZ]P,=428)+%\/'h.dZKa*<R(;1!K?4hf(95GSH]0O1t]`8U]%SB*Tp:B6buaF[QgYj!B:;)Flmb-RMo'o>@U6$,I**0s,QF<Ml2_9:2Y1/>F[##18&*[5.2"?ojp3WRLeKXWqZ9'<Gs=qL(_RDge#%&EjerISiOCe0&)9NGjV@$4+SGAA3p2-D<,KFiE*b*--]!Vh#82'R^7PVi)[[.2$J0bC>%q_->"Kjl&ms,s`\$,@e'J0,kI!o)[6A%nuJT8.O.]PL-c1N=uRSJ?ce1/"GC&h7Gi/?A1#qApK4/c_X8g"@)Xe/cSeEF@VZK/B#[tNEoJZf]'KD+3a5V9KP-sVM^_Z)H3*#1%b^p1+!uI!SQK!.B#U7sg*Zc#Q!ht36@C,\J%-(WD3-CY=%017?hif9RT8a2\h,iP6+.;q*:p"DV0hdToKU,)YR1,Ath!AOV6r8i5%!Qbo\=*[\$F2>XL<OuqW/=p<#4UMZj'8-R`7)Y=D4>bbUk!F?bdPVdgU0\ZQEEtq^W@SU8'nfR!A(<?ORktii!:#)B!,]j=?>fIm%7;kL+>+tWgYlCBQ_comA1<[Q/8*E)nJhj5A4LLJd'.]MCdh:FYY\*J$4j,p=pRF>@\DYi+Zs@>+(ut7iYJo$Ii@.]:6Cb0]71V9%%i1mKdOG6hO!64H_:hbmn_s"d'>QrPXV?\.N82^Q<j(bJ]9.LQPR-N`pj]l;Lad%\O9Bn?[56jq\B3F7scj%[$akV'VrA/^*VRseO%f=^o8cH^A5UDYmC6"E>J$+;/N30uPUQ!j_<d>SG+*llp89o'\R2H,in%'s%I*J-aOB`(UP%)E!>am:WYQG)RDeB+Zj7/-[t=c./M%!i6u=%!obI4>UUM^sG8l8[F)ER&UstjuYjKo::3E1m;ZRU(7^Sh"#d\i$pnTZt,NV+ZHX8-NJ"2N?&\[LIX%elJOiP'`EOq:[<pT%^e7FZKeNLlqS%ZG_l\d(i/7"Hr,=WWlc'SmlF-:QBKD.2aO>BWVrN((K\pcB*I2UpT;$W/G^(1(:";\_"P3_u2!Y\e+@?eSf8L:r%*bTRL<j.'ATHOW,*]Fosoe,f;+C,28Ve]1G#:@O\^-a1T&;cg]kk&a\4E?2]77>f35nOWXbe<3be-&2[XqJ):c$>BegS,P)iuJV^%=-,.C71VOI.(O>nJaY&S22%t8;9tI$@R$TmZ4pA.^m/[nT,+_Kh77&pUB,K@XuE[i49uOD:Zg8X3)9ha?8StK+tcY+0eB1(K_^De%-&Bp=6;p;e//*WE'V;>H$sPs7\JTm'hauGAZ1mcP84<bpfVXdKbQrD)?K_O\3LIe["`C%JZf,<qNXjAMF<,0D>?&u.MC4)uBJNif%>B\ea>g<mr$5:!q%0RdhFX?P$-+rf-7J<.Q'-Ne#."m^qTE9rt,nS<7$==BR;+MTfJ\(n>?1o+=E:&lA@^IS-A[CkQMhDEC?JFD&%s3nD-S(C2@XsWMGl3Uq;(@u9I7-G\uYds@ib(D7HPYj\JOpe*o#;\[+",'qmB[_l2Tl"tn0D"_\EAID\`e4A*V>-m&0#5WGkY%'b%Ge(oFfH"L-F4".]\>\<#&2h`('KL$!-0dESWZL8!f=21+M@U8,ku^KT,(RBBp(i;-!E8Z"49:jb3mgMmeJjWn0clM^7+6gY<QO-o%g6WY?KtDt^#s+'f&k(d1ShqiG,!<jf@QZ1l@Pi*3LoIZ52N5iEE8`CPJ)^oM\OC8g.Y(0WCf<lkUR80?/lb:jO2kA3=cp;*X#>/^%rdS_@[UZq3AG68j+3odp)8P&q1<Ib9rR>*o!sUY;`n502:BR:[BK*"j)sSI^rV,Hc6tUC>l/:3U!!0)GDDIX(94Ytu($R3[*62,$%aGeAUbjY-8ZC]6%nG.(KITXR$J]QE%6eOk>Cc5c8S"3["B#i^tCj%WYmHA6IHKK)E^dPOfSC`Em*1Lb0:iXSX>8hM^,"kn!4X1QN%R+M\iAk9?@-%iX:7fcc$CrWI9k8*kf[]H.>[82,X@jBFDA[*7=d9LM>*A'*?a&Psg#`[22A+=A2NsABnmJ"ZQhsS&.A":k,-_uf[%[0JWKbdraYjnoDK$r`t*Ekk:RPC+5qGN>I^o>YUmK:lAi257EuO`5\k!]*1?DKTBHFpsuWUn(UUBebfI"^;^j4aQV5Aru_"_0[2(%[@hq:OEMg(83=)4XeMf.-`J@RDd1FRO!$%Ifpir>X%("ISXs2,-M2*h?>9"<l&'a2[[g\>g5.EF#1.ao7UV<^JRG'71XXG"ERfE3%G#N,$21F[E,s`&.RU-T*#@a$K7XCJQ-L)IXTY>):C>fTfglPG^jb`ed60&:U$4ZHLn&[IX1IK<Clb8g*Q)8Lti;LO]cdY3&PKR:F%aFG'K3QZ9+@i`An7X%<-0qr<r6?nnf#1Xl,<uOUHa[BJ.M%B'6^?QUB8([m!lsuc6'u+/o8OTN,\X?!Z7T>BFg,+>]H$)J2.l%`)%@mEc>,&c<_aT,7PUZ,d+ap>FKr2rHY3'87oQL#gcZCtb$$V9(dJpY>pE;H!+g3m.a]AJ]bJ,Ba[I+:cL;"1K^PY'&`&u-f(<m<Uk%mBj1R%:N+df2">!hlfGqM(t_IGgN)&h-j2Y?k6^ZEra:rXAl5JJC?-$5qQ<P)DEqg"[*,cs!6>u6\$<8Gt8QM%cE(M_b'U-4iW8Z%cGOQmP+fm\I:+a8l=Ah!0aQa&]OW#B/F&-W!0m,H=1TV-^Tjp^Bnb&'F$qWq38Gb2V$!e4!e=BH/KnSj#N@C`g/mU@^5/!tn%lp^%>CIh+XRsbi6K8LeA8WMI(n@r1$SY/.K`>mGI@Q2a_Y]`H?dqr*O#=)'kj<-P.Xn:)cK_B6"+88/hB-Vkr8++l0")%Ii$9!+^eoNR%FHn/"FRpF_J\d;%S:[7!G,=_V9OtClCrFZbd.EIBKgB\=?l=<jf)+^ERZO,D6Ak<$:YlbQ-VRq(q1oa%H/o.WRc%oQ'o=7<*X+2=%D#1nc(8Ek@k7IrEbD>pIpj98^'cHLFgI#]"/=NX(D3"ZrODfZ2lP)kA[SQ_dn6fUjh>Kc6Ut8S,OFRFN5["<BM?>SM$c1!OS:,)H%Dqj>t;G[Ec$(!DqoKXssgHlulCQ:JX0]bTH#3,2QLR3h*fZZVs<7S_<(@.NoLCsTimhn7^?)Jkh.M!-t^2g\V_RQP"f5l-[_aKOD%l-<C`L@5R3Tp%cqahU0Yo]\)EX(Yb!4!m]/OL#cica&s:+g+]B!nas18"HgR0M[FX0Q?ATU0[.0YuBa;8&m12=-WrWY8?3ODF@cH%D4nD=76h[B!d)Ig+%r+q9XZ.Z*3^!k&n;Bl3'6ZSe%hVt5*0?oDOC3E5di6NK)G#b*J7B*mlk8LYask[\@M[\;#'B:p5"A+\mkGO%0gRN7KBaR/78EF;Wm.s%d)"Gb2GHR5H/Fc-%?R>G5d,,=^6MC(acsYd&$]WhA0<4+HEac4Wm:jA[P7T2O]+t7R#IPoE4PN-%MsYi%%K*_G@cZI(l^AhuOF&P%4a^F;#^oFE$O4$B_BNn1F0]_P\-FJ1)X9_&gGCTP9;^HPk`%h\4kO9.V)D_#Pb['gJFt0537Rf57bJnG%J8^5YM\>1OHJC7Jo*<>L3KX-2O^Vchnq*`H>=(&$&h>:a:JNi"f"r':S+Q.?hU7K+_Mh_?FkX7!"d,G\OH"Sf+q8@/H/Eqofm8,-%k+Zoi=/<7+&L_!#n-!2UA?bCRC'R?Tq_j9!mthiNjAmf3aLR$J=n23orH<0IJM/L8N%mA%+?'&cZ\41lFs60tkVMSkU.qX(n"s.B%!p3<Q:a(B0Q8J)$:.S'UM9X/,0b<>\OiT>64/[t#V/a.&k^"2faN^]@PmV':dm"emPR5\X:Y/sbaF;c`UHK>#o[t29Oa1_!4LV(K%+a]O>dI5B3Zb&%fRTN;Hhs@/*G@j[/VR?$);$Vmq-Z:r"("E:tAI+p[ejJVK[CFc;/r0R$IF?UG+A)Y?8XY6>M:Y$7=H10;KkerP%>"sSAKKrfC")B+Sg:l_,mGkNJlk#)3LiTrK%%-F>Zb51n]AapMY='r"_=CRlL;aK$AWo\K3X]S2`:lcO`pl4pERl1m4^O0g6r>,a%H/#[(8HX,#8_0`/8u!@Bbskl_i<$I:@VDI]d"=;B<#j72k=t.@3g3)6SCJbYl=8,PBQ^KI][6tq%`$AQ?KFIh+"A"?q+$5k#dpp\%ob,ak*,r]NK0WeGfqe("W]gmn?sk;mWN$L0LI)g+lQF/]Wj"''MR+'%^dK7KEgm$E8i&_Y821\'mpld]Y*(":d[Aj08,/DL?!s60%"'NTe9D?0o@38]d)pBFOW9p:hAZ>@p5)83TN>6+#OPY:N:='[-=,OUIfcTWYD1G?D$UD@IK9-/L%jZC\cqojTrrs''ojH7O8*$n$%fb61c&ODeOMf_/NQtB'J+gp/2d;pm<[@JU+doH/R4/"NK`d%$p`m;qdnb9TNS3[LB3H6Y`.uu]1/i,42VVo!YNC#hu>U",)D)rIR%WH-2.O]IRH3^XKKI?5$kS0uPOB9,,$-RXugQ"To0c6]b:;5:6^)pG4k^+*_Z&;?-L\KLupK`u'K%9A=6g`U33Aq9,1ksgutoSqEJ%]DJali5h\6ImQ9To_A\\`C#'faTa^>fpnEUoH3=cX2Y+1Y`PEt=G8i%G7-,-C-BicZW\#>D&\YaXF!HJF-`%WMuB.Yd,EpNV`$!"%p`HCd)EC[#%tO!n;\8Ii5-4T7Xtomd=j*HK%>9j;KpAA*)-P^e<%YWqe)@ML=7X7l'M%&u$ZF.qNAA',7-bPA4^p;Gs6tm(g0N!=%S*<&B>(L?o("?]D-Y&U2<QF)\;RkEkjH+qmgO&NQe3gs:MM[^l`($hd:7aP6/!L<U,)]R;QWPtBhmUiH.BHPl#?#b9(G._j*R;cP%?MV#X,SLl\N!+?R@WOA<9Hd^bbDcST@0U?N!8X]aW!j_K*FfMA]8)G'FURi:V<;lZm'mZ"e`0a.f2LsA?c,_rY/4Xgc;`]89EthF%DBifOo8CBul:61f7boH,g+]5k<?hjqa![Od9^FhSq%m:q6g$8Q4sh&P%j8Je@A81?35@M`'ss$CF5cjZq`)'hi'mL0Ig>(F,!l!k%Lr^/&gP)9<p4/H<pS82*#BV)R%lN#]cu4k*^L2BggMb+K+T6[S>XNBM?_@n>5@)bT+1jr7R)gP"AB\u`&Yedgi-J3PF@h]b,"`:O%Y/`pWf-=eAopAj#4iZ:_f-=I\gfnIS(<7V>!@V.kRA?X)5[65fAO.fUYSR($Uj<#[OaBq;&eIHl!=bVj68ZCWm!3WDNlgC.EZS]'%AXWePIJ7-mW[HnJ))E=[\6Db`h^`>)and;#F/,NhD\L0Dr:ghYbDum&Y[uh!LNgIRKK$n%>40>bM7<rNs"05?r#ms+eI6U+k4!\/%HH2E'q88QW2$Ug*Xp4$49OREQhCTu5GDn8?p`1"UIKr%CPnO@E!t)A)cF?rnf'UNp_*>4OgFOM3h_DBDAY?"Xpk-+C$.h%S3A^c\%)&u_;L6"DZ^L#oDSB^=mH!MHC=BFIrG)9k8X"B:Y['!`uQ_e8MP7-pN@'$F9)/F$)`p0!HY<NbKGEt6LgL*F1p%;!>Za#gfQHGYS%+u8>i4&B$6-SM<or7nc^B'puDXqPfEr4B`Y6N%a`;!06bRkWG"GU.).?RHJsF?o&*NqnjmYe"3L&X1JpSJ,\sICg[]g_OM:+aua:%l.PI:9p):$DAHW#jBrfQ[h?R80O(6qcIt@2kbD4Y!2QZcNNnD`H:,t;%:r4GVMm305sb@4:"lDS50)spG<r?:&aJZ6kh2j")lWo8%>n7Nfg4s0Y%!UMq:/Pe55+#ASB-P5MY;68"lc^eNBSt;GrU,R3P;4qd0Wr9-ZJH@cJb\<)h\dBV_^HLaMJMQCUq^$#PfR]RNN:L^%OSe\LrBAg0.*EO?Y!['sL68E-UcDR"!sF.<\X^e4HMsqT6sKGA+2k0Y<6$0_XK=M:6KFG`9dI5O?3Pl8UI%A#S].oTOe<e#PatqF%.3%79KO'5q#-ae4EE5EcGMFlseHtTf$R8XiaLYN&J;A[:ZCCZiGDIJR5(;I78(<5Hoa==FDd?FW#EOm[b$n+Iob;q.gB`V+0VaF_%0UK+e3[t`Pr/:Km5["<jM<K.Y@`_\/VkC9F$kVRIVJO]_Q/Ck$MMLL!/`N34mgEZN2$<%=6$J[ClZq"r)X@k:!3tF!B-JUM<ZF0W%X>Ei++n8i[W4F,f"!k=rlc>mt`so?)4J4)T2K-"7XppL3eMHpHW%n]H@3[#6jQA57$7+8/7Tasj5dlmu_7ubn"$>LsfP"#^=Nrd\%AojXu>u+U@I/KNTNAd@eh*#nr0b25"->+%ET\TsN*"f0:fo0jkqMOO;eJ[Ydbn<Grdc2,YI^qT_)C+R1gV"k(*kbcE[.bk[(sb.b%rVI0NmcH@!d;fU%O"V=Ad4bi^W!:<sTRiLqKSj[F;nQY5^Ci;BhJUs_Q323))W)J/.,Z0;l'k=(Y;)>.HF8Zg$;>iV[3oZ_+<sj%%BhcfXDTCe3KeMq@,h$2IT2%D,\MP*,-_I7>`FTbsikG!P!fIpTYfO_N$W1#:7%tqp9Y%DBN@>)X++3Q-els%kDE5VEMBT24+%o;=%N5VMrOse85/jgPE\9ZCL$#IGAVCf#$qW)(7@>q&'FBKdkH-E1_=^`i*\u!Xq2nl<;dW&"YMVOHlq/r]=NTX@p\>eR<\s4:A2oO0_%6?CjlbWYkF))[<6Zs.Jf3V.j5,S=!M4!:5))q/\=iGXXB#=M-F1%Q_IB3rSK)15u=#OC%IYTf*&TPH>:@L&ptnj%(.[0>OkE0dCk%-Zi-7lW"%UV07"/*hfF)"@aN22-A$-a;3l0QuJ7jO>6J61(&ooYVGkV[OBQkj9uJ],T$#sMfT"kTC7t0l7[3q``l56,/-_A=!->p%&<S`<7-oLOV[2.@1&2#3-XVJFn6AK#Fq!>@J!t_23(MEL2hbbcR8bNTZ`6EqR5FXr"^0;SS)o.Z5!qIp4b)#7^-+]>nCd<]KT,_I%$&Q2OTJZBUk3cKL]Q3X(<*&j=s"'Xt%*ki]bsWb*i(Y[V[pcL8=Y!:];7'_)]n)uYQa$)BSi<?;<-TTaUn-c[ChBUpN&`_ZTM1d6%$_C44A?,i&4\4_nWq4B8G0fQ_jHDqt$L>[E5A!W%9#2,6FRkV!QO7i"&'OMT"6-t/$SL6H$SG.)"IBJ9e<tKqZM'\F43Z(#ViPg4%U5-R#QB@0*HPC^H*\]=?gd6";L_V(X#Q[1sF:qh&[QDld?H),,#VOpF#qk$f4G?S3OVS4s-]qjU8-b-)XW](2&J)gfJBc`bqaTGM%8`PN]b7JYXBMO,!kVBIiKVL>-Lb+uQNfRT=ca`8E^rJ-&"u:=f&n^)KIa2e%N\<Mu5InfAbK7,5=N9YIRsAXW5U9kG0AS;h0<p#'%`Yl[S]Y#O"`0Uu=C^;]Qs&b4f#VQpq.!Oc!?q3bL?uQm1:J6ej0#Uhp^;e;g*2VJ<.RTUhHF&,5.GG.HOs`2I_?RYOW'':BMs$'&%O6U(4#A9+C5:'GE:'5nAn@U4^")+W.lC'X%Wu:.'E(E03SqP^-0;rHK!3E6'C[U'd)6umoN-5>d[O.+_I]V)uB\B6VTBV\RQc^*6%ni/MAh(^L5+!=i(N=lI2fLVFXH(1h-D+gd_N.h5lL=&]++jd;5ZJ/C<dVH>TOg[iW\UXkp5W=?"DuDb+(Ae=lMKb91>/4iNHuBaL%#/=qN(>!]-aqb%p=C*HuG>+SA!;pTmFj4^Y!NIK_C)fZj$($aG7I3=a1c]&2RN-NkX$,\&+N!qDQ8Me26pj(e)e!tgDhpER2iL-/%5/)aX\FB)jf;-7\<Y\h\P3Z)=WeemEh0b=%d3!lQ=+XB?atYhqQLs.]84GN+s+Zp/Og*lWkMH!m3YgW*?)@u+gY!X[+pS:hYoWY/%9r"s_Tn7sI.(k#H5Y`b-JoL9LhmkrTeMbK#H<SkZRWs46CI8RIh@L%Vl?<=TI?qr`>F*)/50mirZH(F1n$2q<Ts0EL(?E<g&=Rb<%e\IQ)6_nQj()Vk6XL(.&,G!`0U_O<$F]gO$rRhh#m6lSB@MiYu+XN@im<?t<MW>\Wl,'opDQ^=+DMVjb''<rFKhUqk3EA._f0';@%n@KU/cZ.K^Ud^bBhBXI7aRRZO5*mbbeeM6][5ls92p^_"mP9=@_TQY96YL5KI'AEf*IH(7;4ZQ#Z29tFiResrh[Zeh6:N9*)b)J@%f.F9iejH![hQcd+&bUj;UN';?1Hm!N$)pN-d-lq(KA"^1NlLSo/>tH'!4C\?S1b9lKEV&Gq-B=0El*NPo9MX_jR%s^)3D>-VbD-R%+9:rJHrPqgUSrr%0<3X_o$BSGi'B]lq)r6E.r4>Y33p@T)S$tk?=K[i^?)Cb_k$Ghrq5]56jj.L8Z56o'^?!;rCnJ/(59FFECLhu%32;^T.Y-aT;'I!Dc6t!m33O7MOZ9,#)A;6)Mup(BEiUugM)dVW+$`l=A`JjR/@Mm)eZL-9*)^[1%k/CV*(9r6_hEl11;%DoOA]gQ%hW']<+c?Xa3hqqW3WnW.!jU=TC8F9i!BFUb7hYHk[%PkkKeiE"Ofqq>of*F1"%e94M8^VA9%,)Eh\:tEBAI.,o/Lg!GJ)d@>p,\8%"u))d$.9+`+/PN@*ctMMcSRIc4rCG4]n7m/OMLAmV%fB`q1)A#20d.J"cCOic#X=WjrgnH#mFi2XCjSfPhg`#EC-)74J?:Z-PY@8%D`JX>d:UK7`!HTS3n,k=Vn:1,EW!VMhf%5QJ6W[BY1[9I`Yes.ee&p]1CCP,h*`8]+KrI=po-X'7-5X=@lgCcl+'1jmp-Rqo"g*-%G=EHc'9&f3%q0*E+`'cqDMc=6`;B@<h\Bhs%_3sL!m@0kfQ-IdaBC@.O2ue%'aJ>*h/lX'.P;Th7!+rkD#dT]]96AZOOJe^e2Xu`%9)&OtY=h&P!K$CYpo"1_b8h<2$2*>-N>@8)EC5(u$%`%t4Nm`';),=@ep;+'_Fp9?^PL)$gJa+*!\m,\LT0V;T'<92:B&oq6.:`e%_=+&a?tEU.RXYne2!l4t0(+RM8!7W&CJ+7I6>BKjD,MP0FbSlWL&U6`Z:>]i2,a<G>j4:^bt'N/XoM(aGj(@98@Z/W2I,#TP(soY%W_p]2`sHF`[c?dchG#QI5%[=n/*nSBkkb2%r5Y//UNlXFpEY4OWt5`tg:Yb>k3T5+T+=**p$);,PXAEfYGE\J(<M$KLgAdLRP+#e%\N<YS3iU)=-uN\.J!Qhqp[n!5bC%ME>g1elUB#b"77N<S+[D8HlB6u1R3(dT=irR0&R;'mC,j8ZW^\u`F-K@/T:aePZ3Mt1Xq4f6%OChnpR^:;k**977=J)9mbl;GX9>l"YE'uJs?^clAiCDRbL16Of)&ncX8PY,e.i7)fp1Gp]\_!S_o@(Y;2*YG!;u%ZAPGIBHJXSgD%a2"'g!R7#k&Wb0E\;ahHONsVM<D)@ie1XSiMqPC(d=R`]OH/5L)[.,3RYrY]&jA&-VKDE3e)O)B0td.'m#4e`9^OIMBbG?M&^S#p%bupAfFX3&s8V&1$eb;-A);'aKkd-uB^iC]<-'<62+qm%C;MFcVM,`(miCKEQS95]j]u5T7?6U?=4]uS%F_,=+?E%/ZeYb!iK(0RZ%c+>pK6dulP]gS;:2>^1U"XC&m,;,>XhY%gfdPq3s&&8#+YQ+,gYCHN"T7?e,Vn[ZZpD<IG827qFJ,f<drp*p@qU:LTr;:cRs8DCm%?iTN\TE"i@mr7OKJ,XZDL&^-.G8ON`rN`bqci<$45Lo*@?C0dFms_!2]mTf,?F"rb5Q@o_"i>#P9aYJF^'P2(=HUn\[7a,,KG[TA%KFN&NP0nrb>;]C&%9f#=,A<3-qeEn*O`F&QXD$]4k+1=*=3oL;Z>>F`1K<:%ROJ_)5k[a%U5JUO?g(VZh`d9hq>S>Tf@TfZ%rn`#%mAiDRc.qTQkWE)p=T>8,7jNhs@=[^>!pt_2(daOQ?Y<5Y9&:9)H.nt9e1(%?Z+$rpYf$WH*0R#(cYNMhf@C67!FE0;N4D8mjBHfF%&i:kOYRb6EW<UG0,#Z'ZX<>9jJ&BlFVu*Xm:c);Eiq?1ij7ilX;/Z4l([hS@Sf11V7KU7W<UTpqq)X9$V;P6.DgBb)"t&"qPUgZl%RFs`"CHE&:RlEZ51c\t[26-44"kN'<DTCn:</F<k.cDO%gt_Dj5<a>B0+Gp<leCrP]nt(B8H5>4;<[D-0sm_\'ToZ$$G:&81:8/f%V0`tMS^jJ.'TN5]m1DB+MMSJRGAE<-i$t*1@@aTkVRG!H:9LCr*-9`I="_)P%ACf,8-97m'P]<[mHYHOH<$T@:5pK6Lr^@-6u2ll%K!W9u5:m0d3kY-nN$Y05b@NM-fJ/<[S=0fuC4N@?c59mJq?J9?l?un\TW<M\kC9!d=Pjbt:XT[BT*Li#!XECj;C49O9I43>lQ],.%"q`_oC.Ka\Qm.18QkQOaCCi=cC,_D,j!8['JSLCX&^cl^_XXkqNHEHuDXnhr'ibS!C;lXM\9l'S#U/'mM$!D7q_@p;V89n4kIQ/n%@/jX#HeRhb#oouEn?cjtfj3$&dA)($]c(-tU-K5+h0R=C2m;6eLppQKaE9lfO+"drEi=okmHFIb8C9P*`2EmP-X+HVTZ=S[UQ=nL%=,M.24Vs_tmRo)$^0`D@p+(89Ad%e;f3JaZZ6@FGG0!SQ=ckeo8cdR:gkUY!;nO,W\WMEB`Rj(^%ULYeEYe2]MI.*s`(GIm#7=nT%nLE)E6?a."Bl-Sj>8>H&j$Yc[FdrZq%!TlP^43aJp+(geO'ekn+mjlF*!hJLZ[!c@@A0MHP-'YHoe0#J>TaG'"5u01b24WhZ,h+%%enT!Ta$i7tL4O6rjg'Q$b2sWtM.KrPC@h4)l9pQ:bk*=F^+\D'YrQr6Hjs&IhS%MW47kQO*5>O0@eS2&bR1H+)&@q#m\a<8[NA8U%X%lgd=uKqY,'^>IX`2?2l=*fIU_m*_>7!*\Sike<O7M\RC$62&3TW<#S$i>a\;)c1mlMEBC'_glEVbBO@Z9*Q`s8gE7J!tUkP97k%bZUu_b!VF.1tf!sFP0O70HqC7TP=\DM!A&VC/FC"_AP87:5]H4n/=^8DX&q4388?Wa21IlbbfBDQ/uXtoP[cZ0r@X,Y.SCUa)U;F%cs(3?bc2soJo.P[Ib,<hD::A#%Paudf.Eo.B*uY=%&b(2k%qX`V*7-q!dVnsh]?8t7ealE<:^nQ>EZ8Fn_F$)puUuBRt^Z$jm*D@%s3Cqlk,99qnJ(A:O8U1pG5.dL!(=P#A;/B^)jG</9FMQalB:4derYY08]NHXnd71d*,-!T5h3=c*=`N%\oAK7;[_@Ub>h\'!*7W[%>idpt&9VTQ,$`U1@3$\7Xl_C)\d'I)d<mQ6+<#0C-pUsgIuMkc#'u-A9ntP+m?kN+!"oINUdmrA0"2J8!tSmHVsbIV4b+9N=!.D7%E5a`2*[(1gn%GrsajM0:]+F'Onm:l/>oue08]]Tc;k9QN<:`&q;r<*'0-:e0K@nf/GrfA8B9AmsE8l9j[^qmd\3LdsKq=AlLQ`Se%NBSHtm:7$_C'\.LC)qOAFjh_7J\maBQq/;c<Srn"ZH?d^(9D-VE/l;4-RY@^4,IIe?IAkH=OF/h[:m@G9USD2*CHf>UE#uN4Sg%(%ifWbaX9FDr.pm"eJV+GPC5f%(B+di^&R2XqfB,1dbXkp:S.2QuJTbd15Bln+oJP*K+-N0M>YM<6^1dtQ2b<n*RL>'AqZr$15hqom%0d,!n5g$ORa?Hu95f/n("qtjnh70gC?2gQ')q#V/>IrGe`op?'>d_[Le^nWBM7;$S#E]O#PunDK:$0]oF_<u6=8gS@]L-#hl\tMb%Jh4O`5lmej%1HTQEfiV;De2]a.Y7?@FUYRMSNOcr1KKH%P"7hT53DT9?%CA72>J'?0"OfHB%ASH5*gpZ.>U>^9PTe^"X\4YR'%:A%XdLr)rhP+u\kf$p'"_ThXiH4a?C2[lX`ZR#fLhF)!RNgogSnFq>/9Xsk_6K'N8XL)5)aQ=^qdtMC`&?J#!b:s/t'jACX%RCQfdD6%25foZGX_`[O@k6B15Ts><ia/=A^XN1UK+3Dr#4se2AV8C`U,ctAZ7e!qm+*uUC9oQ%&_3Y3d]4USoKiOen%H2;kK2Z]\qS!SgV\^%K7Ri(oM".!A17!HWa;O^I5rRIbX&UTT"q8DYOak%J,-a<ADqjaYB=_g95rja\>ds75&'c1g<HF&fjV[@IU>#?M9GnT<TnK%D4"52%_HJ+o_OeAf*Wh5B+0Rl1)e7fTh8>Uih3I;78%<<0o"E-S&2'M@fRE6sh8s%oau!_&0\']dR+Dq)Tp\oMU(:u?2&7_6R+H:Rf%&n[%/4A"/5D>Lf1\NlbY+.@c!i9:@12_b:-6ML,jbSB!p]$QqZ"k#`Npg>cL`NAK@trqKDo/kU\#9W99Y>8ehl9K%N`ZZ3i28bk)X_q:%`(A&a@)^E1XS^A,10/e6VY6Q7\bgVlmW%&X!CH3>EZRPjQr,OgH$0f6o.oM>6<b/U"1IN[L\>^`N^Zs_4X!;<*Fed:[@>-ne\[(R%]^Ns2HOn^_(05^KLpb%.K!VWj3P/L<'el^m*]M#4/]qTi5<ei`^\jd6H!JTU^N'N[adpVmYjAgX,gCt\Xt%/0@?R;a[X47U-uLdn%R=m4e7G\hB_h>"42H"f81PHD>Y,h9cnOI/;FH=@X98c.)0_(r.8W9ndR!9`A$59NP=E?DjTg[$YfFDkt!UXQJ>@D^+FST3qaZ%J`%3,U,Cg>_t9`g@Qrp"6#SWp7e`_,"R0Sf5,S`X0]miIJQb2HN,]I'?c+m8RRNnIiMfs)')&]@Z:E`k-Dd24EbIpp,fZZf[^&OTk+;%=M4sr,)H4]4r>#A1lahYrO"bU]r>s/NT8/;Ci@-L?:#2;R)CpaduB#$eb67I6Fo;\*2(O.`U,Sp=[!)YZ>0CEF[&-WJ5U@V3JKr0%dWbNNF>U@GY"2/MB*92Y3\hfAfO&0U!9s'=,#k`CKmpOBk\<_>5Fh-IGm=a\+I6Zm,l@8OAicbrNS9T+c?ZiKS_8V]p0BNVH$a*7%K1,hGESi"=EE1FA>.)!:cut(=ju]?!_:.Q8a>:hu)*A'[9,lb4(;tieM]M's,\Ut2"91`UKST)'_%@D_X5+$2)dfd\";$d_TgqP?%`NiBjEug'4#BP7bq2D4;=@.6ZI>o'U.PSgr_()n'f?*L=FGAaW%gaHKL?1'-:ag:h>tt1,jVQ@YiDWrK`luf@C>Coq^4i(+>:/NJ%]iZuE;2;eL*g5ahS(1PjCe*\B8XpWbC%-llSp46\k4-ZPHS5uQ=B54)5`Kr,ardN)&-eLMW/Zj7-j=AuqEotlJ>k(2r+"Yb$ZT4E%P#J;ZIB)BkW4h\GcMX.4;(10kZJUA#K\7q[Bh,I3LR$[5h+F"R/pRlH?H$426M.lIW-;q_"&Y2Uc&.N7r&S%A:lARb&FO,&OdQP;%aJ#q8Iu:hYk_DP](N'Llq[<La.8[P"$sGdeE2CP0]+5%2<L.Tj9?;`p%p_2ON8[,V<r,\3k?Oco;3_IZb+C]7U8j.Y&5tQY1\#?b%rpk"5)>rd$YG;s3RqUpHWd(iIln*rTFdo_hG[dRBn)t^IM4U<d5T";iVQIMrGH_L+Ba!A#0nl8OijA1_nMFEMNID<s8SaYm>E6Io%Y&c>:q/)%8B,grRb>FQKo7Z)Pr'[Y1B,EFo#7Q)`(!sHR*Z)WHaJ"Q,Mjpddgc[.W,%.LGXR8nUNuR,RHSFLjj:(EEKNDM?,ulQ4%,I,C/_%]k6M.tWECG'J.qVZJLo8<FU"r/i@.H)N(`oubdEPP*"GMi@W+d))KDsQ$P,On[eg,IajDo?`C5U4?aU7s_N[PK+BSR)L#%Ub-;#3)lLX4$rV,C<_kaA6\9pmYZ%HXnhNR'7QePK80pEeds<dJ)F&Rkn8H7XQ+a>(2LB6$_@*dW&(>IR#@CI'9">cDL*2gOI!<F%gMQ9WFMK%7j7"oq2W\9W1$+7<?8()QjH'J@!!t?5,XHD73oc`7&-h*!X933H)U]F2b\CU`pOEa?(+64;VX5ueQpAH_b@DUt,-)B;%4-_\c_@8['2;Xf8MT!SnT>P)7)?BHoRkCCQ9@I%#1.r;^GlJAj1dKX+?X*J1g(BhIFM$bADmNAE;albFVR/=u4Q$P"-soZ.cPATW%?-F@M'V?Ed&p",fnK,t'F/Xl[Pm^HQF5tG1E/8d7^=s4=FUT#99*o_TJ&QJ*&%ZZLGlOdNm_X-MN*k7lX*#W&>/F?i,;tdY])B(A%]65\3+-&"HM;P[*ZCQgJ\gm?r]m+T-2p.>!06S5T6[afBA>XC/=N6_Z-tl[C44Z9giZ,NY&B_eHjF[F6(Negf-t3>F/EEI;c/RT_%&*L6BF2n<,m+MV"NmCPOULPKDV:ChO4h+:Gk>52X#%D]3f)<C_6qClc)i/7-=];:3@A7.#dO0&YlQMu9ei!<F%V8FUHWf-nF>@iG%il92'IBC$*X,`B71-]:q*P4=8*+eTZ_NtO+bJ%=rOfu4f2s.*Af&*aKJ(XF>G**V$$oma7pbB437$T3!2:2oI=>6%,6pl&P@8(sk%7(&4j%OCk9_CTH8.jjOk[??IB@=$qBWnY6\l.K:`;:Un/4BIZDEQSFl"iSFdDu7Ma\m-?G/%ZB.A@P78[LfhaC/'G4oJg=Id5J=_%lqq5Ignh?k.E3/kG?%"kQl4I!gnY5HZW8hBqJ]1Wo;@@mcmmk)Dfr(V`t@-HBF!r`pureo-X@d)<\&.a33T:@2Q3W8p+s6pe[d-,%-qaR,fcp\ffajXkgF6bbYf20BnrFk7o\:6IaU5BJ.mM.Qe3U[BciJ(WO>L^@+nX0!:HQ7Em\]D^?-u\J\!6]R-pc6#;$n4;[hda)%a6RW'7'RNHc[%(i5H*:nN1@V_relkRS,QGi0u[l^)-$@nMGAX%WN=oi]6$<T:=9$V0pAq\Vl+'hRAd@(B\e*#X=l^G]=f=k`*lF*%+Q6X)QO"5@chT.g8bfSs`SMt7r2KWE*DI&HdCkp,6*J7M[;NrMT_d@JaQ'[ngZF^_[q(o+V@gF,J[rlblOqY]VS"![B=uXV&6O=U%85G:Se)Q(snR]W5g.MB0.5G6UaE2>7[5dmX7SH60O]U!GraVc<I.WK(I8rns'1Pk$&.sGT/;LB;hf9#k$6P;f0:sS"E%`D51!3/\%&a=j;IRL+FSdGHgE.7U>Of#FJ%u(M#9a-:(!Q.n<r8CS/aEO&fWCgUV1;#kUahSt;l4^V\ZhGV$*fuK2MIK?+Cb"&H$%2Va6@.mO%!r)>ZcAi5%o]SD^f-t$r]!upA3faffP.`iTN/s59IT$,>=ShYtGp)hMKSaeM-B3S('V)O'p$;md7"af5b$tKrV5Tf0,&@j,Qn4]^%dOC@?6YY2l[B@(5^FFaV$5NKjlqc`G_o56uC6Y<m?K*AkrlVF@Z6#gV+B9M;,AB/IM1`:-?_6\L`PfDjN<\OD&o5(7d]%66*&)rV%I!UjuTbb]k5/#!!r,?J_s0CK#d'iZ'b&],cHC(Z&BBaiF;pKEeoWVVqn%d4Klrh#[/W(u%kmP;;07B8`:*YuW^?%cF(S@(M"WZ[s%!fiE7DQ/3g.Q>BtQ<XjP[gA<u2%q=p!W*,9+bat-+J+sa?RE'?)<>_.DV0sNH))T;iFd@LL+"#1'jM#E(IUriqjJ0nCRe:TRH<;E%99sog&2TpBEgg(S(G9#kD]OA"8IO`/=.Df?dN-t-9B'\5dkSC2nE*tT%g!0qC7S@\#RS=0m=RsHZ;O@p##fIlTges5QVSK.Nnjh]%$!q1NA*ARsOA1WqMp8SZR)7'LhN-"Ohb.nBCt?U=H:qB>^bN$aZ20+g-d4bar]#;F'6YQP#t/)e-;/FM+5;O4]F"f8p]*sVOHI12%4TFsiCG(Z(n!<gkD11h0ojuKHG);<o&aGnha1>f[P=roG!UZ8/R`O"cku.CYo+bC7%#@M<B#G]uj<_R8Yoc@7OO]GA8`JA3U%//)%04UuX7cs"n-ZP,IDN<Bhpqs!KZn;6*NA=lgE_&e"-/[EYHG5M[F":Djq=>%<)->YY(H.R?,pD\;,HlBo):L#)LIf2Pa%D.PWKENC%2_5k^+MH#:60"NV0Ji9Tqp9Ea,t)&:1cdL)LOI.,jR%tPYo1VbNtO2`Xm>\F%%f')AhqP7rAI`&bA3o;:t%bBg3GargL7[QV2N*H%<RM7[Z/!o8"7L0K2m2j_k$9WMg_ad^^lPT"V:J4r9H+CTW0:+6Y?FB-Mg]>_D:?.a+g?.`]]01cFRG"miUZQ.kc&WY*Q[$*a.$TA%F'u8P^[$Mj3>TVThF*r`bKIW)+1N2[$AfXQocfDd7O/fiaGXjS)Q--=>u!0oG*siLm?&)JR1-#i+U[QLcGI(k*T;:J3#S7s$nHt)%N0*IZbAmZei$)Lj^fXlr)`1\V0W>W*,ZBjp5fui*O`k`DA3q6[geXaXQ_JfO>aQpQ!r8jnL4^aEV\lS2gD7EpWV]3l#lmECTH49%%Fo=u85L@(nH5!i=d:sZ[-ZCL)U/r9N)27/3G',)_n7d%J.IDr9iJ'KZ^jc($lZ@ZPM+MO6M*R2I#d58?P>#H)LFOkc&dnU?@hLC*%ol(Y<NsMi(!a9t'??*mnKb,-gBJ"4+e6rgP7L9CpbJ\RLHt88aI"J^Bpmo(.4p#"75E!ELFh&,fM*OV$^o%7aR@HHY;#Y]c3Jf:&%CROdgdPMG)K]Bu629E`@@ge<u3QU2Z2TF]f)<itYZ&$9ZSHHHZ;3V956H7Ll=Nhk?9?M+//XDo&PI"F@0?m3V*d=(&3.d=J4Q\e*%48Nf25]QsN^9N8pCZhF;5EP($8aCYmquZ#"LiqqH%UBs<8tL";S8,LnV27icSb\>!,HA1#/aUW_G\O]cMm^C2b:pCGKRi9>HOCl:%@PSLanq0^u*0_+&a6W-EB@KVIfXp&3NaUhR0#C0#.UWZ)jd=[F@n42b5^%HG&l9EtdqEc0=qDU\XtD%ITZ]ks5=-_i*Hq1aXE!H\%['o_RQ8'"(=GthGDqnjE0VLlr(XY+?FN/8$A!<-J6j8M3pc>0I?"jJ3FD5WK+.%GC0R@=EE[89Zek@s8/*$0NpjnF^%V4?Z+eocX%g=iO.UXX6*9FQArl-n.[feqAiH7QJmHYt/L%qhXP5nG9),='eU&bJPM/.g8r()P\V6aBj)Quc7SqB"U3@Lm<iVkpTS@0hBOC/'sW%ltWeV2It2H/?cMC<D4;dHubbdhDfo5-asrBQ?>Zir7SuH=iH<Len=)tFO?t1BtD\_e/FD&,LLor$<4LrbRH5^qW$\EStAkm@rqdN%k>**S#ekMASD`)n2(C`-f;V+K8Y>KPN_>3TDC0.N4j=J54q-_q!K$A-U_qum\ddB``6t(elgZd^T!7b\5JlP=qIZ"P42qR)BJ=51%PCjQ&oe^i!^!Kq/D/K^UE%8PM8qco#Z.hTls/hT)$dIJp33[KpY_%r7I`LX/5!8"SW'IG>k8]m7@s)X`k/7BZHd`lrTNK5>0UDQd%N7F61)pr*V7mYWpnj0NUGAGpW[J[#SiBu$*/o>BCHCjG$5BLO%AaK6%l5Sf/oQtMk_t7`V80.Y5_Z#G[)K2iuGtSAYq:OG=j6q='%gFs/LMa:)Oina35geo59Q>9bCr\G1basmb!)QK7hd-NpHj9R<;MHo$MAnfDh2mt+;36Z]q(f)_eEg%?EMk\tWM/2hM5POM'%j\cD%!kV1rgFkARD)qp_X%Fcm6j#9(B,gTl[#I_qI5'Q#+K7R<k$ErsT@'oPah..O5#$CQT1D6a.[&;e.3o=tPIXl<;+lD6W@B]d1$1q:%W=I+-#6Uc'SQ'91U2u+SCeWe9"c*6_+shj#P.brbLdZP;%9lR4eSU!=2!ZkQ9>)+m?fo[*<@n"Q0FV:lS*m>C^$B7./XDKmGL5e*%V@:8!:i#u`*7Fi3=K,S-M'dWo4RCMgV#hiOaA4lX<7D-s`3&>"U@#C^dcehu2,@@oX$FAng`ghg(D.@G>EbtMWLA('N\h&M9"F)A%Z-\HgT"h8"R*A3U*&a=di'4L4Y5=a./6jB(jO'NR:97'NNAIAbIDX;/I+:;(]T0V#[eW?(*b+V5!3=2@>Q!.bjk4\20s4Rf`[6/#%fu*3_GhUl$8a9kIHtml:1BFfV3Mi''&bV]lH+qGT,r_V?cbECX5@8Q!_df,BXV9BC(/;eNQ(3&%<qeT\eJ#KAA"Do)5`hNs7nRp(%FH!,alqm5^e,H2L<-*/)dRu`RJ#3N)$2?O%:PUgi6qGCd/fE-6b"/>b:*c_"^r@X[i^n3c?\c)MLr&-5^j.MGd5]B_T'OO58b9Uk%S5(K&CXhS_fs-Q3O54%AOf1YdFBS]rSR*&U+Zq;]0\4j7`%!l(Xjjik\%o87^Y=u[,gQ5\rMOR_pRdLrq8XTWp$pkq^AmFV^\RNH%2ui!O5CWXiIerJ.5CEL[Va(1B]:Zk<r8!DuJfjR^s1\KYk<Jt<rEoR#kF]Kgr0RHZkPkYFqFOrkbr>[t:]K\.rrnfEda\~>%AI9_PrivateDataEnd